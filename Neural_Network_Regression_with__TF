{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1PG_rFgenV6IBrRBg-PtyJjQ_VX1XvMAM",
      "authorship_tag": "ABX9TyPnOaHajS7nh+CUScpZAI+/",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Praveen101010/Praveen101010/blob/main/Neural_Network_Regression_with__TF\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Intro to regression with NN in TF\n",
        "\n",
        "Regression Problem: Predicting a numerical variable based on some other combination of variables, even shorter... predicting a number."
      ],
      "metadata": {
        "id": "My0CX1tKtb7w"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#import TF\n",
        "import tensorflow as tf"
      ],
      "metadata": {
        "id": "Ik5jnVRKuCQL"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##creating data to View and fit"
      ],
      "metadata": {
        "id": "BkiZgNCOuNZV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "#create feature\n",
        "X=np.array([-7.0,-4.0,-1.0,2.0,5.0,8.0,11.0,14.0])\n",
        "\n",
        "#create labels\n",
        "y = np.array([3.0,6.0,9.0,12.0,15.0,18.0,21.0,24.0])"
      ],
      "metadata": {
        "id": "zsaGVKnRuY6n"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#visualize it\n",
        "plt.scatter(X,y);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 435
        },
        "id": "QjEHq25Yu0cu",
        "outputId": "cb1eb886-a95c-475f-c571-a134d961d9be"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##Input and output shapes\n",
        "#create a demo tensor for our housing price predicion prob)\n",
        "house_info = tf.constant(['bed','bath','car'])\n",
        "house_price = tf.constant([939700])\n",
        "house_info, house_price"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "u8NOJTOHu7va",
        "outputId": "b5e5dffa-4631-4e7e-f958-c8f1f1d8ac0b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(<tf.Tensor: shape=(3,), dtype=string, numpy=array([b'bed', b'bath', b'car'], dtype=object)>,\n",
              " <tf.Tensor: shape=(1,), dtype=int32, numpy=array([939700], dtype=int32)>)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##steps in modelling with TF\n",
        "\n",
        "Creating a model - define the input and output layers, as well as the hidden layers.\n",
        "Compiling a model - define the loss function and optimiser and evaluation tf.metrics\n",
        "fitting a model - Letting the model try to find patterns between X and y"
      ],
      "metadata": {
        "id": "2NSNPFSMv_kK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#set random seed\n",
        "tf.random.set_seed(42)\n",
        "\n",
        "#1. Create a model using the Sequential API\n",
        "model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(1)\n",
        "    ])\n",
        "\n",
        "#2. compile the model\n",
        "model.compile(loss=tf.keras.losses.mae,\n",
        "              optimizer=tf.keras.optimizers.SGD(),\n",
        "              metrics=['mae'])\n",
        "\n",
        "#3.Fit the model\n",
        "model.fit(tf.expand_dims(X,axis=-1), y, epochs=5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cWqWzcNFyEtE",
        "outputId": "32adbd8a-b43d-4240-d962-803aa4930a4e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/5\n",
            "1/1 [==============================] - 1s 521ms/step - loss: 16.7514 - mae: 16.7514\n",
            "Epoch 2/5\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 16.4702 - mae: 16.4702\n",
            "Epoch 3/5\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 16.1889 - mae: 16.1889\n",
            "Epoch 4/5\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 15.9077 - mae: 15.9077\n",
            "Epoch 5/5\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 15.6264 - mae: 15.6264\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59cc49ab60>"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#try and make a prediction using our model\n",
        "model.predict([17.0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n-rcWIrd0c6v",
        "outputId": "5ba22b64-c84e-44d1-c774-3217de45cad1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 99ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-8.456926]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Improving our model\n",
        "\n",
        "1. Create a model - here add more layers, incre the no, of hidden units, change the activation function of each layer.\n",
        "2. Compiling a model - here change optimization function or perhaps learning rate of the optimization fun.\n",
        "3. fitting a mode - here fit a model for more epochs or on more data."
      ],
      "metadata": {
        "id": "UFJDX31R1deZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#let's rebuild\n",
        "\n",
        "model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "model.compile(loss=tf.keras.losses.mae,\n",
        "              optimizer=tf.keras.optimizers.SGD(),\n",
        "              metrics=['mae'])\n",
        "\n",
        "model.fit(tf.expand_dims(X,axis=-1), y, epochs=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_ptAhchD4vSA",
        "outputId": "c3756ff4-f590-4ca3-892a-e1c13c835677"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "1/1 [==============================] - 0s 304ms/step - loss: 11.3125 - mae: 11.3125\n",
            "Epoch 2/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 11.1800 - mae: 11.1800\n",
            "Epoch 3/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 11.0475 - mae: 11.0475\n",
            "Epoch 4/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 10.9150 - mae: 10.9150\n",
            "Epoch 5/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 10.7825 - mae: 10.7825\n",
            "Epoch 6/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 10.6500 - mae: 10.6500\n",
            "Epoch 7/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.5175 - mae: 10.5175\n",
            "Epoch 8/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 10.3850 - mae: 10.3850\n",
            "Epoch 9/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 10.2525 - mae: 10.2525\n",
            "Epoch 10/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 10.1200 - mae: 10.1200\n",
            "Epoch 11/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.9875 - mae: 9.9875\n",
            "Epoch 12/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 9.8550 - mae: 9.8550\n",
            "Epoch 13/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.7225 - mae: 9.7225\n",
            "Epoch 14/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 9.5900 - mae: 9.5900\n",
            "Epoch 15/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.4575 - mae: 9.4575\n",
            "Epoch 16/100\n",
            "1/1 [==============================] - 0s 7ms/step - loss: 9.3250 - mae: 9.3250\n",
            "Epoch 17/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.1925 - mae: 9.1925\n",
            "Epoch 18/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.0600 - mae: 9.0600\n",
            "Epoch 19/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.9275 - mae: 8.9275\n",
            "Epoch 20/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.7950 - mae: 8.7950\n",
            "Epoch 21/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 8.6625 - mae: 8.6625\n",
            "Epoch 22/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 8.5300 - mae: 8.5300\n",
            "Epoch 23/100\n",
            "1/1 [==============================] - 0s 7ms/step - loss: 8.3975 - mae: 8.3975\n",
            "Epoch 24/100\n",
            "1/1 [==============================] - 0s 14ms/step - loss: 8.2650 - mae: 8.2650\n",
            "Epoch 25/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 8.1325 - mae: 8.1325\n",
            "Epoch 26/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 8.0000 - mae: 8.0000\n",
            "Epoch 27/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.8675 - mae: 7.8675\n",
            "Epoch 28/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.7350 - mae: 7.7350\n",
            "Epoch 29/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.6025 - mae: 7.6025\n",
            "Epoch 30/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.4700 - mae: 7.4700\n",
            "Epoch 31/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.3375 - mae: 7.3375\n",
            "Epoch 32/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 7.2675 - mae: 7.2675\n",
            "Epoch 33/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.2619 - mae: 7.2619\n",
            "Epoch 34/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 7.2563 - mae: 7.2563\n",
            "Epoch 35/100\n",
            "1/1 [==============================] - 0s 14ms/step - loss: 7.2506 - mae: 7.2506\n",
            "Epoch 36/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.2450 - mae: 7.2450\n",
            "Epoch 37/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 7.2394 - mae: 7.2394\n",
            "Epoch 38/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.2337 - mae: 7.2337\n",
            "Epoch 39/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.2281 - mae: 7.2281\n",
            "Epoch 40/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 7.2225 - mae: 7.2225\n",
            "Epoch 41/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.2169 - mae: 7.2169\n",
            "Epoch 42/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 7.2113 - mae: 7.2113\n",
            "Epoch 43/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.2056 - mae: 7.2056\n",
            "Epoch 44/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 7.2000 - mae: 7.2000\n",
            "Epoch 45/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 7.1944 - mae: 7.1944\n",
            "Epoch 46/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 7.1888 - mae: 7.1888\n",
            "Epoch 47/100\n",
            "1/1 [==============================] - 0s 7ms/step - loss: 7.1831 - mae: 7.1831\n",
            "Epoch 48/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.1775 - mae: 7.1775\n",
            "Epoch 49/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.1719 - mae: 7.1719\n",
            "Epoch 50/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.1663 - mae: 7.1663\n",
            "Epoch 51/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 7.1606 - mae: 7.1606\n",
            "Epoch 52/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 7.1550 - mae: 7.1550\n",
            "Epoch 53/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.1494 - mae: 7.1494\n",
            "Epoch 54/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 7.1438 - mae: 7.1438\n",
            "Epoch 55/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 7.1381 - mae: 7.1381\n",
            "Epoch 56/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 7.1325 - mae: 7.1325\n",
            "Epoch 57/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 7.1269 - mae: 7.1269\n",
            "Epoch 58/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 7.1213 - mae: 7.1213\n",
            "Epoch 59/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 7.1156 - mae: 7.1156\n",
            "Epoch 60/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.1100 - mae: 7.1100\n",
            "Epoch 61/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 7.1044 - mae: 7.1044\n",
            "Epoch 62/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0988 - mae: 7.0988\n",
            "Epoch 63/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0931 - mae: 7.0931\n",
            "Epoch 64/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0875 - mae: 7.0875\n",
            "Epoch 65/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0819 - mae: 7.0819\n",
            "Epoch 66/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0763 - mae: 7.0763\n",
            "Epoch 67/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 7.0706 - mae: 7.0706\n",
            "Epoch 68/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 7.0650 - mae: 7.0650\n",
            "Epoch 69/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0594 - mae: 7.0594\n",
            "Epoch 70/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0538 - mae: 7.0538\n",
            "Epoch 71/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0481 - mae: 7.0481\n",
            "Epoch 72/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0425 - mae: 7.0425\n",
            "Epoch 73/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0369 - mae: 7.0369\n",
            "Epoch 74/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 7.0312 - mae: 7.0312\n",
            "Epoch 75/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0256 - mae: 7.0256\n",
            "Epoch 76/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0200 - mae: 7.0200\n",
            "Epoch 77/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0144 - mae: 7.0144\n",
            "Epoch 78/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0087 - mae: 7.0087\n",
            "Epoch 79/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.0031 - mae: 7.0031\n",
            "Epoch 80/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9975 - mae: 6.9975\n",
            "Epoch 81/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9919 - mae: 6.9919\n",
            "Epoch 82/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 6.9862 - mae: 6.9862\n",
            "Epoch 83/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9806 - mae: 6.9806\n",
            "Epoch 84/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9750 - mae: 6.9750\n",
            "Epoch 85/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9694 - mae: 6.9694\n",
            "Epoch 86/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9638 - mae: 6.9638\n",
            "Epoch 87/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9581 - mae: 6.9581\n",
            "Epoch 88/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9525 - mae: 6.9525\n",
            "Epoch 89/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9469 - mae: 6.9469\n",
            "Epoch 90/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9413 - mae: 6.9413\n",
            "Epoch 91/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9356 - mae: 6.9356\n",
            "Epoch 92/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9300 - mae: 6.9300\n",
            "Epoch 93/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9244 - mae: 6.9244\n",
            "Epoch 94/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9188 - mae: 6.9188\n",
            "Epoch 95/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9131 - mae: 6.9131\n",
            "Epoch 96/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.9075 - mae: 6.9075\n",
            "Epoch 97/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 6.9019 - mae: 6.9019\n",
            "Epoch 98/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.8963 - mae: 6.8963\n",
            "Epoch 99/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 6.8906 - mae: 6.8906\n",
            "Epoch 100/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 6.8850 - mae: 6.8850\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59cc07e830>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.predict([17.0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3-LaXhgr6BpD",
        "outputId": "613b0146-51be-441f-c79e-5e6898daaccb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 64ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[29.897429]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(100,activation=\"relu\"),\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "model.compile(loss=tf.keras.losses.mae,\n",
        "              optimizer=tf.keras.optimizers.SGD(),\n",
        "              metrics=['mae'])\n",
        "\n",
        "model.fit(tf.expand_dims(X,axis=-1), y, epochs=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YSTTXZlw6vNf",
        "outputId": "ac74b4f3-21ca-47f3-bba9-d7cba9b6a087"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "1/1 [==============================] - 0s 409ms/step - loss: 14.9356 - mae: 14.9356\n",
            "Epoch 2/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 14.2762 - mae: 14.2762\n",
            "Epoch 3/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 13.6262 - mae: 13.6262\n",
            "Epoch 4/100\n",
            "1/1 [==============================] - 0s 14ms/step - loss: 12.9844 - mae: 12.9844\n",
            "Epoch 5/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 12.3494 - mae: 12.3494\n",
            "Epoch 6/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 11.7067 - mae: 11.7067\n",
            "Epoch 7/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 11.0536 - mae: 11.0536\n",
            "Epoch 8/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 10.3856 - mae: 10.3856\n",
            "Epoch 9/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 9.7027 - mae: 9.7027\n",
            "Epoch 10/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.9976 - mae: 8.9976\n",
            "Epoch 11/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.2690 - mae: 8.2690\n",
            "Epoch 12/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.4976 - mae: 7.4976\n",
            "Epoch 13/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.6738 - mae: 6.6738\n",
            "Epoch 14/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 5.7975 - mae: 5.7975\n",
            "Epoch 15/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 4.8545 - mae: 4.8545\n",
            "Epoch 16/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 4.1933 - mae: 4.1933\n",
            "Epoch 17/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 4.0462 - mae: 4.0462\n",
            "Epoch 18/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 4.0101 - mae: 4.0101\n",
            "Epoch 19/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.9253 - mae: 3.9253\n",
            "Epoch 20/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.9463 - mae: 3.9463\n",
            "Epoch 21/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8772 - mae: 3.8772\n",
            "Epoch 22/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.9498 - mae: 3.9498\n",
            "Epoch 23/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8844 - mae: 3.8844\n",
            "Epoch 24/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.9315 - mae: 3.9315\n",
            "Epoch 25/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.8995 - mae: 3.8995\n",
            "Epoch 26/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.9056 - mae: 3.9056\n",
            "Epoch 27/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.9067 - mae: 3.9067\n",
            "Epoch 28/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8795 - mae: 3.8795\n",
            "Epoch 29/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.9140 - mae: 3.9140\n",
            "Epoch 30/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8532 - mae: 3.8532\n",
            "Epoch 31/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 3.9215 - mae: 3.9215\n",
            "Epoch 32/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8597 - mae: 3.8597\n",
            "Epoch 33/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 3.9097 - mae: 3.9097\n",
            "Epoch 34/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 3.8681 - mae: 3.8681\n",
            "Epoch 35/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8834 - mae: 3.8834\n",
            "Epoch 36/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8756 - mae: 3.8756\n",
            "Epoch 37/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.8571 - mae: 3.8571\n",
            "Epoch 38/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8831 - mae: 3.8831\n",
            "Epoch 39/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 3.8306 - mae: 3.8306\n",
            "Epoch 40/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8963 - mae: 3.8963\n",
            "Epoch 41/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 3.8304 - mae: 3.8304\n",
            "Epoch 42/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 3.8866 - mae: 3.8866\n",
            "Epoch 43/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8379 - mae: 3.8379\n",
            "Epoch 44/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 3.8600 - mae: 3.8600\n",
            "Epoch 45/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8456 - mae: 3.8456\n",
            "Epoch 46/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8334 - mae: 3.8334\n",
            "Epoch 47/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8533 - mae: 3.8533\n",
            "Epoch 48/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 3.8112 - mae: 3.8112\n",
            "Epoch 49/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 3.8692 - mae: 3.8692\n",
            "Epoch 50/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8011 - mae: 3.8011\n",
            "Epoch 51/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 3.8622 - mae: 3.8622\n",
            "Epoch 52/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 3.8088 - mae: 3.8088\n",
            "Epoch 53/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8353 - mae: 3.8353\n",
            "Epoch 54/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8167 - mae: 3.8167\n",
            "Epoch 55/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8085 - mae: 3.8085\n",
            "Epoch 56/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8274 - mae: 3.8274\n",
            "Epoch 57/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.7889 - mae: 3.7889\n",
            "Epoch 58/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.8408 - mae: 3.8408\n",
            "Epoch 59/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.7730 - mae: 3.7730\n",
            "Epoch 60/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8365 - mae: 3.8365\n",
            "Epoch 61/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.7809 - mae: 3.7809\n",
            "Epoch 62/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.8094 - mae: 3.8094\n",
            "Epoch 63/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7890 - mae: 3.7890\n",
            "Epoch 64/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7836 - mae: 3.7836\n",
            "Epoch 65/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.8052 - mae: 3.8052\n",
            "Epoch 66/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.7624 - mae: 3.7624\n",
            "Epoch 67/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.8134 - mae: 3.8134\n",
            "Epoch 68/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7459 - mae: 3.7459\n",
            "Epoch 69/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 3.8096 - mae: 3.8096\n",
            "Epoch 70/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 3.7540 - mae: 3.7540\n",
            "Epoch 71/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7822 - mae: 3.7822\n",
            "Epoch 72/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7624 - mae: 3.7624\n",
            "Epoch 73/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7617 - mae: 3.7617\n",
            "Epoch 74/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7787 - mae: 3.7787\n",
            "Epoch 75/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7345 - mae: 3.7345\n",
            "Epoch 76/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7871 - mae: 3.7871\n",
            "Epoch 77/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 3.7198 - mae: 3.7198\n",
            "Epoch 78/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 3.7814 - mae: 3.7814\n",
            "Epoch 79/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7282 - mae: 3.7282\n",
            "Epoch 80/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7537 - mae: 3.7537\n",
            "Epoch 81/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 3.7413 - mae: 3.7413\n",
            "Epoch 82/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7332 - mae: 3.7332\n",
            "Epoch 83/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 3.7533 - mae: 3.7533\n",
            "Epoch 84/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 3.7052 - mae: 3.7052\n",
            "Epoch 85/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 3.7619 - mae: 3.7619\n",
            "Epoch 86/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.6949 - mae: 3.6949\n",
            "Epoch 87/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 3.7518 - mae: 3.7518\n",
            "Epoch 88/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 3.7035 - mae: 3.7035\n",
            "Epoch 89/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.7267 - mae: 3.7267\n",
            "Epoch 90/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 3.7202 - mae: 3.7202\n",
            "Epoch 91/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 3.7030 - mae: 3.7030\n",
            "Epoch 92/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 3.7288 - mae: 3.7288\n",
            "Epoch 93/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 3.6746 - mae: 3.6746\n",
            "Epoch 94/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 3.7376 - mae: 3.7376\n",
            "Epoch 95/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 3.6708 - mae: 3.6708\n",
            "Epoch 96/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 3.7209 - mae: 3.7209\n",
            "Epoch 97/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.6803 - mae: 3.6803\n",
            "Epoch 98/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.6999 - mae: 3.6999\n",
            "Epoch 99/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.6964 - mae: 3.6964\n",
            "Epoch 100/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 3.6714 - mae: 3.6714\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59cc1478e0>"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.predict([17.0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x2w910zy7LII",
        "outputId": "b2249de2-ddad-4ace-e2af-2874b0472a68"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 126ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[32.744797]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(100,activation=\"relu\"),\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "model.compile(loss=tf.keras.losses.mae,\n",
        "              optimizer=tf.keras.optimizers.Adam(lr=0.01),\n",
        "              metrics=['mae'])\n",
        "\n",
        "model.fit(tf.expand_dims(X,axis=-1), y, epochs=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SkqHnbI87YPB",
        "outputId": "767fd55d-99e0-4f85-ab25-4ea9629f1738"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:absl:`lr` is deprecated in Keras optimizer, please use `learning_rate` or use the legacy optimizer, e.g.,tf.keras.optimizers.legacy.Adam.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "1/1 [==============================] - 1s 791ms/step - loss: 13.3204 - mae: 13.3204\n",
            "Epoch 2/100\n",
            "1/1 [==============================] - 0s 14ms/step - loss: 13.2298 - mae: 13.2298\n",
            "Epoch 3/100\n",
            "1/1 [==============================] - 0s 14ms/step - loss: 13.1393 - mae: 13.1393\n",
            "Epoch 4/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 13.0490 - mae: 13.0490\n",
            "Epoch 5/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 12.9586 - mae: 12.9586\n",
            "Epoch 6/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 12.8685 - mae: 12.8685\n",
            "Epoch 7/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 12.7786 - mae: 12.7786\n",
            "Epoch 8/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 12.6896 - mae: 12.6896\n",
            "Epoch 9/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 12.6006 - mae: 12.6006\n",
            "Epoch 10/100\n",
            "1/1 [==============================] - 0s 17ms/step - loss: 12.5119 - mae: 12.5119\n",
            "Epoch 11/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 12.4231 - mae: 12.4231\n",
            "Epoch 12/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 12.3342 - mae: 12.3342\n",
            "Epoch 13/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 12.2452 - mae: 12.2452\n",
            "Epoch 14/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 12.1562 - mae: 12.1562\n",
            "Epoch 15/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 12.0673 - mae: 12.0673\n",
            "Epoch 16/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 11.9784 - mae: 11.9784\n",
            "Epoch 17/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 11.8894 - mae: 11.8894\n",
            "Epoch 18/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 11.8004 - mae: 11.8004\n",
            "Epoch 19/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 11.7115 - mae: 11.7115\n",
            "Epoch 20/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 11.6228 - mae: 11.6228\n",
            "Epoch 21/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 11.5343 - mae: 11.5343\n",
            "Epoch 22/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 11.4458 - mae: 11.4458\n",
            "Epoch 23/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 11.3571 - mae: 11.3571\n",
            "Epoch 24/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 11.2684 - mae: 11.2684\n",
            "Epoch 25/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 11.1797 - mae: 11.1797\n",
            "Epoch 26/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 11.0909 - mae: 11.0909\n",
            "Epoch 27/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 11.0018 - mae: 11.0018\n",
            "Epoch 28/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.9125 - mae: 10.9125\n",
            "Epoch 29/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.8231 - mae: 10.8231\n",
            "Epoch 30/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.7337 - mae: 10.7337\n",
            "Epoch 31/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.6442 - mae: 10.6442\n",
            "Epoch 32/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.5545 - mae: 10.5545\n",
            "Epoch 33/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.4645 - mae: 10.4645\n",
            "Epoch 34/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.3741 - mae: 10.3741\n",
            "Epoch 35/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 10.2834 - mae: 10.2834\n",
            "Epoch 36/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.1925 - mae: 10.1925\n",
            "Epoch 37/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.1012 - mae: 10.1012\n",
            "Epoch 38/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 10.0096 - mae: 10.0096\n",
            "Epoch 39/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 9.9176 - mae: 9.9176\n",
            "Epoch 40/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.8253 - mae: 9.8253\n",
            "Epoch 41/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.7326 - mae: 9.7326\n",
            "Epoch 42/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.6395 - mae: 9.6395\n",
            "Epoch 43/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.5461 - mae: 9.5461\n",
            "Epoch 44/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.4523 - mae: 9.4523\n",
            "Epoch 45/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.3580 - mae: 9.3580\n",
            "Epoch 46/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 9.2633 - mae: 9.2633\n",
            "Epoch 47/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 9.1681 - mae: 9.1681\n",
            "Epoch 48/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 9.0725 - mae: 9.0725\n",
            "Epoch 49/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 8.9764 - mae: 8.9764\n",
            "Epoch 50/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 8.8976 - mae: 8.8976\n",
            "Epoch 51/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.8230 - mae: 8.8230\n",
            "Epoch 52/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 8.7477 - mae: 8.7477\n",
            "Epoch 53/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.6719 - mae: 8.6719\n",
            "Epoch 54/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.5954 - mae: 8.5954\n",
            "Epoch 55/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.5184 - mae: 8.5184\n",
            "Epoch 56/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 8.4408 - mae: 8.4408\n",
            "Epoch 57/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.3626 - mae: 8.3626\n",
            "Epoch 58/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 8.2840 - mae: 8.2840\n",
            "Epoch 59/100\n",
            "1/1 [==============================] - 0s 8ms/step - loss: 8.2049 - mae: 8.2049\n",
            "Epoch 60/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 8.1253 - mae: 8.1253\n",
            "Epoch 61/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 8.0451 - mae: 8.0451\n",
            "Epoch 62/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 7.9644 - mae: 7.9644\n",
            "Epoch 63/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.8831 - mae: 7.8831\n",
            "Epoch 64/100\n",
            "1/1 [==============================] - 0s 14ms/step - loss: 7.8012 - mae: 7.8012\n",
            "Epoch 65/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.7188 - mae: 7.7188\n",
            "Epoch 66/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.6358 - mae: 7.6358\n",
            "Epoch 67/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 7.5522 - mae: 7.5522\n",
            "Epoch 68/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 7.4681 - mae: 7.4681\n",
            "Epoch 69/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.3834 - mae: 7.3834\n",
            "Epoch 70/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 7.2981 - mae: 7.2981\n",
            "Epoch 71/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 7.2123 - mae: 7.2123\n",
            "Epoch 72/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.1259 - mae: 7.1259\n",
            "Epoch 73/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 7.0390 - mae: 7.0390\n",
            "Epoch 74/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 6.9514 - mae: 6.9514\n",
            "Epoch 75/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 6.8632 - mae: 6.8632\n",
            "Epoch 76/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.7746 - mae: 6.7746\n",
            "Epoch 77/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 6.6854 - mae: 6.6854\n",
            "Epoch 78/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 6.5957 - mae: 6.5957\n",
            "Epoch 79/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 6.5054 - mae: 6.5054\n",
            "Epoch 80/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 6.4145 - mae: 6.4145\n",
            "Epoch 81/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 6.3230 - mae: 6.3230\n",
            "Epoch 82/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 6.2310 - mae: 6.2310\n",
            "Epoch 83/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 6.1386 - mae: 6.1386\n",
            "Epoch 84/100\n",
            "1/1 [==============================] - 0s 10ms/step - loss: 6.0456 - mae: 6.0456\n",
            "Epoch 85/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 5.9522 - mae: 5.9522\n",
            "Epoch 86/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 5.8584 - mae: 5.8584\n",
            "Epoch 87/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 5.7642 - mae: 5.7642\n",
            "Epoch 88/100\n",
            "1/1 [==============================] - 0s 15ms/step - loss: 5.6694 - mae: 5.6694\n",
            "Epoch 89/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 5.5741 - mae: 5.5741\n",
            "Epoch 90/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 5.4782 - mae: 5.4782\n",
            "Epoch 91/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 5.3816 - mae: 5.3816\n",
            "Epoch 92/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 5.2843 - mae: 5.2843\n",
            "Epoch 93/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 5.1865 - mae: 5.1865\n",
            "Epoch 94/100\n",
            "1/1 [==============================] - 0s 13ms/step - loss: 5.0881 - mae: 5.0881\n",
            "Epoch 95/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 4.9891 - mae: 4.9891\n",
            "Epoch 96/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 4.8894 - mae: 4.8894\n",
            "Epoch 97/100\n",
            "1/1 [==============================] - 0s 12ms/step - loss: 4.7892 - mae: 4.7892\n",
            "Epoch 98/100\n",
            "1/1 [==============================] - 0s 9ms/step - loss: 4.6883 - mae: 4.6883\n",
            "Epoch 99/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 4.5867 - mae: 4.5867\n",
            "Epoch 100/100\n",
            "1/1 [==============================] - 0s 11ms/step - loss: 4.4845 - mae: 4.4845\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59bf7c4880>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.predict([17.0])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eudZQRW67unI",
        "outputId": "0af4d5bd-fcc7-40a7-9229-76631d2fdc59"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 105ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[27.564827]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Evaluating a model"
      ],
      "metadata": {
        "id": "uxw4QPU671Q4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X = tf.range(-100,100,4)\n",
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eErfnvGm-RPU",
        "outputId": "519c506e-45cc-43a6-ffd9-9a79a8c69bf7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tf.Tensor: shape=(50,), dtype=int32, numpy=\n",
              "array([-100,  -96,  -92,  -88,  -84,  -80,  -76,  -72,  -68,  -64,  -60,\n",
              "        -56,  -52,  -48,  -44,  -40,  -36,  -32,  -28,  -24,  -20,  -16,\n",
              "        -12,   -8,   -4,    0,    4,    8,   12,   16,   20,   24,   28,\n",
              "         32,   36,   40,   44,   48,   52,   56,   60,   64,   68,   72,\n",
              "         76,   80,   84,   88,   92,   96], dtype=int32)>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y = X+10\n",
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-86jtcNq_j9F",
        "outputId": "8ea139bb-6c5e-4067-ea7f-43cb5fc5c3b2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tf.Tensor: shape=(50,), dtype=int32, numpy=\n",
              "array([-90, -86, -82, -78, -74, -70, -66, -62, -58, -54, -50, -46, -42,\n",
              "       -38, -34, -30, -26, -22, -18, -14, -10,  -6,  -2,   2,   6,  10,\n",
              "        14,  18,  22,  26,  30,  34,  38,  42,  46,  50,  54,  58,  62,\n",
              "        66,  70,  74,  78,  82,  86,  90,  94,  98, 102, 106], dtype=int32)>"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(X,y)"
      ],
      "metadata": {
        "id": "NQozXgp1_7jx",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "outputId": "9594c381-d31e-43cc-c1a6-7e00f9b72d0f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7f59bfffec50>]"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## the 3 sets of data\n",
        "\n",
        "Training set 70-80% of total data\n",
        "Validation set 10-15% of total data\n",
        "test set 10-15% of total data."
      ],
      "metadata": {
        "id": "2G52xFCgAoJR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#split the data\n",
        "X_train = X[:40] #80% of data\n",
        "y_train= y[:40] #20% of the data\n",
        "\n",
        "X_test = X[40:]\n",
        "y_test = y[40:]"
      ],
      "metadata": {
        "id": "FAyScs_5Bb0v"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Viz data"
      ],
      "metadata": {
        "id": "nnBMhdvGC20s"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(5,7))\n",
        "plt.scatter(X_train, y_train, c=\"b\", label=\"Training data\")\n",
        "plt.scatter(X_test, y_test, c=\"g\", label=\"test data\")\n",
        "plt.legend();"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 599
        },
        "id": "HEsEmqE6DCP7",
        "outputId": "36777373-ac4f-4fe8-ffa6-7e987124ab27"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#let's build NN\n",
        "\n",
        "model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "model.compile(loss=tf.keras.losses.mae,\n",
        "              optimizer=tf.keras.optimizers.SGD(),\n",
        "              metrics=['mae'])\n",
        "\n",
        "model.fit(tf.expand_dims(X_train,axis=-1), y_train, epochs=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fto4WB49Db9r",
        "outputId": "8aebea8f-2ba5-43ec-cc4a-d1f97a97975c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 16.1376 - mae: 16.1376\n",
            "Epoch 2/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.8251 - mae: 12.8251\n",
            "Epoch 3/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.4448 - mae: 11.4448\n",
            "Epoch 4/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 9.4655 - mae: 9.4655\n",
            "Epoch 5/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.3603 - mae: 10.3603\n",
            "Epoch 6/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.5991 - mae: 9.5991\n",
            "Epoch 7/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.7109 - mae: 8.7109\n",
            "Epoch 8/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.0518 - mae: 9.0518\n",
            "Epoch 9/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.1116 - mae: 19.1116\n",
            "Epoch 10/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.3114 - mae: 10.3114\n",
            "Epoch 11/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.4721 - mae: 8.4721\n",
            "Epoch 12/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.8208 - mae: 10.8208\n",
            "Epoch 13/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.8744 - mae: 9.8744\n",
            "Epoch 14/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 12.0708 - mae: 12.0708\n",
            "Epoch 15/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.4034 - mae: 12.4034\n",
            "Epoch 16/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.4129 - mae: 8.4129\n",
            "Epoch 17/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.3503 - mae: 13.3503\n",
            "Epoch 18/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1093 - mae: 11.1093\n",
            "Epoch 19/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 18.4294 - mae: 18.4294\n",
            "Epoch 20/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.1290 - mae: 15.1290\n",
            "Epoch 21/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 11.0860 - mae: 11.0860\n",
            "Epoch 22/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.2131 - mae: 8.2131\n",
            "Epoch 23/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.4596 - mae: 9.4596\n",
            "Epoch 24/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 7.6695 - mae: 7.6695\n",
            "Epoch 25/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.0734 - mae: 13.0734\n",
            "Epoch 26/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 16.4994 - mae: 16.4994\n",
            "Epoch 27/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.2297 - mae: 13.2297\n",
            "Epoch 28/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 14.3387 - mae: 14.3387\n",
            "Epoch 29/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.0851 - mae: 10.0851\n",
            "Epoch 30/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.4681 - mae: 16.4681\n",
            "Epoch 31/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.5234 - mae: 23.5234\n",
            "Epoch 32/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.5962 - mae: 7.5962\n",
            "Epoch 33/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.2906 - mae: 9.2906\n",
            "Epoch 34/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.6382 - mae: 13.6382\n",
            "Epoch 35/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1733 - mae: 11.1733\n",
            "Epoch 36/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.4196 - mae: 13.4196\n",
            "Epoch 37/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.4307 - mae: 9.4307\n",
            "Epoch 38/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.0798 - mae: 10.0798\n",
            "Epoch 39/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.9582 - mae: 8.9582\n",
            "Epoch 40/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.5848 - mae: 9.5848\n",
            "Epoch 41/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.5442 - mae: 10.5442\n",
            "Epoch 42/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.5954 - mae: 10.5954\n",
            "Epoch 43/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.2028 - mae: 7.2028\n",
            "Epoch 44/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.0014 - mae: 8.0014\n",
            "Epoch 45/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.7991 - mae: 9.7991\n",
            "Epoch 46/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 8.8777 - mae: 8.8777\n",
            "Epoch 47/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 7.5613 - mae: 7.5613\n",
            "Epoch 48/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.5437 - mae: 8.5437\n",
            "Epoch 49/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.0078 - mae: 10.0078\n",
            "Epoch 50/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.9926 - mae: 8.9926\n",
            "Epoch 51/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.6813 - mae: 10.6813\n",
            "Epoch 52/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.2701 - mae: 15.2701\n",
            "Epoch 53/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.2969 - mae: 14.2969\n",
            "Epoch 54/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.5698 - mae: 21.5698\n",
            "Epoch 55/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.0194 - mae: 16.0194\n",
            "Epoch 56/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2581 - mae: 10.2581\n",
            "Epoch 57/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.7750 - mae: 9.7750\n",
            "Epoch 58/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.0586 - mae: 9.0586\n",
            "Epoch 59/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.2641 - mae: 8.2641\n",
            "Epoch 60/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.3576 - mae: 9.3576\n",
            "Epoch 61/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.1775 - mae: 11.1775\n",
            "Epoch 62/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.0456 - mae: 12.0456\n",
            "Epoch 63/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.2636 - mae: 7.2636\n",
            "Epoch 64/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.4441 - mae: 12.4441\n",
            "Epoch 65/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.5133 - mae: 10.5133\n",
            "Epoch 66/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.5787 - mae: 15.5787\n",
            "Epoch 67/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.9860 - mae: 9.9860\n",
            "Epoch 68/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.7061 - mae: 8.7061\n",
            "Epoch 69/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.4544 - mae: 13.4544\n",
            "Epoch 70/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 7.4605 - mae: 7.4605\n",
            "Epoch 71/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.2402 - mae: 12.2402\n",
            "Epoch 72/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.5107 - mae: 8.5107\n",
            "Epoch 73/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.0292 - mae: 7.0292\n",
            "Epoch 74/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.8976 - mae: 9.8976\n",
            "Epoch 75/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 9.9438 - mae: 9.9438\n",
            "Epoch 76/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.1065 - mae: 10.1065\n",
            "Epoch 77/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.9718 - mae: 12.9718\n",
            "Epoch 78/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.8922 - mae: 10.8922\n",
            "Epoch 79/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.3837 - mae: 15.3837\n",
            "Epoch 80/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.7118 - mae: 11.7118\n",
            "Epoch 81/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.2541 - mae: 9.2541\n",
            "Epoch 82/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.7143 - mae: 12.7143\n",
            "Epoch 83/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.2676 - mae: 8.2676\n",
            "Epoch 84/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 7.2990 - mae: 7.2990\n",
            "Epoch 85/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.4685 - mae: 10.4685\n",
            "Epoch 86/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.1366 - mae: 9.1366\n",
            "Epoch 87/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 11.8549 - mae: 11.8549\n",
            "Epoch 88/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.4629 - mae: 10.4629\n",
            "Epoch 89/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 6.9597 - mae: 6.9597\n",
            "Epoch 90/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.7903 - mae: 13.7903\n",
            "Epoch 91/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 7.8632 - mae: 7.8632\n",
            "Epoch 92/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.4452 - mae: 7.4452\n",
            "Epoch 93/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.1534 - mae: 9.1534\n",
            "Epoch 94/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.5549 - mae: 8.5549\n",
            "Epoch 95/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.5083 - mae: 11.5083\n",
            "Epoch 96/100\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 10.2643 - mae: 10.2643\n",
            "Epoch 97/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 7.6824 - mae: 7.6824\n",
            "Epoch 98/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.6153 - mae: 8.6153\n",
            "Epoch 99/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.3955 - mae: 9.3955\n",
            "Epoch 100/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.8367 - mae: 8.8367\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59bfecbbb0>"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vE9KmNlhEeRy",
        "outputId": "466ceb76-cb7c-4bce-f6e0-8d2916b39aa4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_4\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_6 (Dense)             (None, 1)                 2         \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 2\n",
            "Trainable params: 2\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#let's create a model which builds automatically by defining the input_shape argument\n",
        "tf.random.set_seed(42)\n",
        "\n",
        "model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(10, input_shape=[1]),\n",
        "    tf.keras.layers.Dense(1,name=\"output_layer\")\n",
        "])\n",
        "\n",
        "model.compile(loss=tf.keras.losses.mae,\n",
        "              optimizer=tf.keras.optimizers.SGD(),\n",
        "              metrics=['mae'])"
      ],
      "metadata": {
        "id": "BRkV-GWkE4rh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-ks0aOi9Fuq5",
        "outputId": "09e58306-030e-4bf0-a051-e04ff6bd31e2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_5\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_7 (Dense)             (None, 10)                20        \n",
            "                                                                 \n",
            " output_layer (Dense)        (None, 1)                 11        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 31\n",
            "Trainable params: 31\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "1.   total params - total no. of parameters in the model.\n",
        "2.   trainable parameters - these are the parameters(patterns) the model can update as it trains\n",
        "3.   nOn trainable params - these parameters aren't updates during training (this is typical whe you bring already learn patterns or parameters from other during transfer learning)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "-THOdkxhF1XK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(tf.expand_dims(X_train,axis=-1), y_train, epochs=100, verbose=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eD_UwN4AGsll",
        "outputId": "b98ec40c-6ba6-4d70-c27f-86c76b953802"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "2/2 [==============================] - 0s 13ms/step - loss: 40.7563 - mae: 40.7563\n",
            "Epoch 2/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 31.7101 - mae: 31.7101\n",
            "Epoch 3/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 28.7552 - mae: 28.7552\n",
            "Epoch 4/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.2010 - mae: 16.2010\n",
            "Epoch 5/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 22.5069 - mae: 22.5069\n",
            "Epoch 6/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.8413 - mae: 10.8413\n",
            "Epoch 7/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.8566 - mae: 11.8566\n",
            "Epoch 8/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.9152 - mae: 12.9152\n",
            "Epoch 9/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 33.9710 - mae: 33.9710\n",
            "Epoch 10/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.2683 - mae: 23.2683\n",
            "Epoch 11/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2555 - mae: 10.2555\n",
            "Epoch 12/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 25.2407 - mae: 25.2407\n",
            "Epoch 13/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.1497 - mae: 17.1497\n",
            "Epoch 14/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.3919 - mae: 26.3919\n",
            "Epoch 15/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 16.8769 - mae: 16.8769\n",
            "Epoch 16/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 9.8319 - mae: 9.8319\n",
            "Epoch 17/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.6179 - mae: 17.6179\n",
            "Epoch 18/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 14.0888 - mae: 14.0888\n",
            "Epoch 19/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 13.9279 - mae: 13.9279\n",
            "Epoch 20/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.2006 - mae: 11.2006\n",
            "Epoch 21/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.2433 - mae: 17.2433\n",
            "Epoch 22/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.4822 - mae: 15.4822\n",
            "Epoch 23/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.2507 - mae: 9.2507\n",
            "Epoch 24/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.2844 - mae: 17.2844\n",
            "Epoch 25/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.9554 - mae: 15.9554\n",
            "Epoch 26/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 20.9617 - mae: 20.9617\n",
            "Epoch 27/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 25.8960 - mae: 25.8960\n",
            "Epoch 28/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.4040 - mae: 18.4040\n",
            "Epoch 29/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.2487 - mae: 9.2487\n",
            "Epoch 30/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 29.0101 - mae: 29.0101\n",
            "Epoch 31/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 52.5355 - mae: 52.5355\n",
            "Epoch 32/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.9047 - mae: 11.9047\n",
            "Epoch 33/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.4743 - mae: 15.4743\n",
            "Epoch 34/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.5850 - mae: 12.5850\n",
            "Epoch 35/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 9.1953 - mae: 9.1953\n",
            "Epoch 36/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.4454 - mae: 16.4454\n",
            "Epoch 37/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.0997 - mae: 11.0997\n",
            "Epoch 38/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.2294 - mae: 18.2294\n",
            "Epoch 39/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.1604 - mae: 19.1604\n",
            "Epoch 40/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 20.5370 - mae: 20.5370\n",
            "Epoch 41/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.7888 - mae: 14.7888\n",
            "Epoch 42/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.1905 - mae: 12.1905\n",
            "Epoch 43/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.6941 - mae: 10.6941\n",
            "Epoch 44/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 32.1966 - mae: 32.1966\n",
            "Epoch 45/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.4567 - mae: 12.4567\n",
            "Epoch 46/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.4625 - mae: 17.4625\n",
            "Epoch 47/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.7798 - mae: 15.7798\n",
            "Epoch 48/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.3933 - mae: 8.3933\n",
            "Epoch 49/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 14.0095 - mae: 14.0095\n",
            "Epoch 50/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.8459 - mae: 12.8459\n",
            "Epoch 51/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.8536 - mae: 14.8536\n",
            "Epoch 52/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.7372 - mae: 18.7372\n",
            "Epoch 53/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 24.1967 - mae: 24.1967\n",
            "Epoch 54/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 23.1139 - mae: 23.1139\n",
            "Epoch 55/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 23.9557 - mae: 23.9557\n",
            "Epoch 56/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1437 - mae: 11.1437\n",
            "Epoch 57/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.0888 - mae: 13.0888\n",
            "Epoch 58/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.7981 - mae: 9.7981\n",
            "Epoch 59/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.2680 - mae: 13.2680\n",
            "Epoch 60/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.8527 - mae: 10.8527\n",
            "Epoch 61/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 13.4402 - mae: 13.4402\n",
            "Epoch 62/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.4263 - mae: 17.4263\n",
            "Epoch 63/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 9.1502 - mae: 9.1502\n",
            "Epoch 64/100\n",
            "2/2 [==============================] - 0s 13ms/step - loss: 18.2981 - mae: 18.2981\n",
            "Epoch 65/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.1049 - mae: 10.1049\n",
            "Epoch 66/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 24.1375 - mae: 24.1375\n",
            "Epoch 67/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 10.8602 - mae: 10.8602\n",
            "Epoch 68/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.7515 - mae: 10.7515\n",
            "Epoch 69/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.1075 - mae: 23.1075\n",
            "Epoch 70/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.8434 - mae: 8.8434\n",
            "Epoch 71/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.0696 - mae: 16.0696\n",
            "Epoch 72/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.7622 - mae: 7.7622\n",
            "Epoch 73/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.1621 - mae: 10.1621\n",
            "Epoch 74/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 28.3413 - mae: 28.3413\n",
            "Epoch 75/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.0070 - mae: 10.0070\n",
            "Epoch 76/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.9209 - mae: 12.9209\n",
            "Epoch 77/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.8636 - mae: 17.8636\n",
            "Epoch 78/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.9671 - mae: 8.9671\n",
            "Epoch 79/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 28.6780 - mae: 28.6780\n",
            "Epoch 80/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 31.0097 - mae: 31.0097\n",
            "Epoch 81/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.3953 - mae: 13.3953\n",
            "Epoch 82/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 14.5263 - mae: 14.5263\n",
            "Epoch 83/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.5507 - mae: 18.5507\n",
            "Epoch 84/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.8218 - mae: 8.8218\n",
            "Epoch 85/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 18.4274 - mae: 18.4274\n",
            "Epoch 86/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 22.5314 - mae: 22.5314\n",
            "Epoch 87/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 11.3715 - mae: 11.3715\n",
            "Epoch 88/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.5494 - mae: 26.5494\n",
            "Epoch 89/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 9.6573 - mae: 9.6573\n",
            "Epoch 90/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.7065 - mae: 18.7065\n",
            "Epoch 91/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.4883 - mae: 10.4883\n",
            "Epoch 92/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.9317 - mae: 17.9317\n",
            "Epoch 93/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.5967 - mae: 6.5967\n",
            "Epoch 94/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 11.1340 - mae: 11.1340\n",
            "Epoch 95/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 24.2541 - mae: 24.2541\n",
            "Epoch 96/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.7376 - mae: 10.7376\n",
            "Epoch 97/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.2883 - mae: 15.2883\n",
            "Epoch 98/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.2599 - mae: 8.2599\n",
            "Epoch 99/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.4447 - mae: 16.4447\n",
            "Epoch 100/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.8649 - mae: 13.8649\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59bfd2fd00>"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SG8pXD9pHrxW",
        "outputId": "7957635b-a9ea-440e-f12b-ae749fe1df66"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_5\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_7 (Dense)             (None, 10)                20        \n",
            "                                                                 \n",
            " output_layer (Dense)        (None, 1)                 11        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 31\n",
            "Trainable params: 31\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.utils import plot_model\n",
        "\n",
        "plot_model(model=model, show_shapes=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 312
        },
        "id": "ZDpJYgMoH_4j",
        "outputId": "81f346b7-4d74-466b-cfe5-0c5b0ea4ade7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "to visualize predictions, plot them against ground truth labels.\n",
        "\n",
        "y_test or y_true vs y_pred"
      ],
      "metadata": {
        "id": "meP5o2pOIgRD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = model.predict(tf.expand_dims(X_test,axis=-1))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D6hBzV44KtMn",
        "outputId": "57c6c1d0-e56c-49db-9896-c7aff1c9bf7c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:tensorflow:5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7f59bfc29e10> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 52ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tf.random.set_seed(42)\n",
        "\n",
        "model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(10, input_shape=[1]),\n",
        "    tf.keras.layers.Dense(1,name=\"output_layer\")\n",
        "])\n",
        "\n",
        "model.compile(loss=tf.keras.losses.mae,\n",
        "              optimizer=tf.keras.optimizers.SGD(),\n",
        "              metrics=['mae'])\n",
        "\n",
        "model.fit(tf.expand_dims(X_train,axis=-1), y_train, epochs=100, verbose=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IK-XfLZ1KxzA",
        "outputId": "478dc876-89f2-41d3-a6b3-655e5f49df08"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 18.1550 - mae: 18.1550\n",
            "Epoch 2/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 22.8972 - mae: 22.8972\n",
            "Epoch 3/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 28.3356 - mae: 28.3356\n",
            "Epoch 4/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.3285 - mae: 13.3285\n",
            "Epoch 5/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.4919 - mae: 17.4919\n",
            "Epoch 6/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2172 - mae: 10.2172\n",
            "Epoch 7/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1981 - mae: 11.1981\n",
            "Epoch 8/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.1109 - mae: 11.1109\n",
            "Epoch 9/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 40.7742 - mae: 40.7742\n",
            "Epoch 10/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 28.1327 - mae: 28.1327\n",
            "Epoch 11/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2378 - mae: 10.2378\n",
            "Epoch 12/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 25.2247 - mae: 25.2247\n",
            "Epoch 13/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.1231 - mae: 17.1231\n",
            "Epoch 14/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.3629 - mae: 26.3629\n",
            "Epoch 15/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.8489 - mae: 16.8489\n",
            "Epoch 16/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 9.8117 - mae: 9.8117\n",
            "Epoch 17/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 17.5950 - mae: 17.5950\n",
            "Epoch 18/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 14.0780 - mae: 14.0780\n",
            "Epoch 19/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.9153 - mae: 13.9153\n",
            "Epoch 20/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1835 - mae: 11.1835\n",
            "Epoch 21/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.2377 - mae: 17.2377\n",
            "Epoch 22/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.4755 - mae: 15.4755\n",
            "Epoch 23/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.2335 - mae: 9.2335\n",
            "Epoch 24/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.2717 - mae: 17.2717\n",
            "Epoch 25/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.9404 - mae: 15.9404\n",
            "Epoch 26/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 20.9409 - mae: 20.9409\n",
            "Epoch 27/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 25.9376 - mae: 25.9376\n",
            "Epoch 28/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 18.4383 - mae: 18.4383\n",
            "Epoch 29/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.2333 - mae: 9.2333\n",
            "Epoch 30/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 29.0599 - mae: 29.0599\n",
            "Epoch 31/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 52.6290 - mae: 52.6290\n",
            "Epoch 32/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.9076 - mae: 11.9076\n",
            "Epoch 33/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.4990 - mae: 15.4990\n",
            "Epoch 34/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.5940 - mae: 12.5940\n",
            "Epoch 35/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.1919 - mae: 9.1919\n",
            "Epoch 36/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.4911 - mae: 16.4911\n",
            "Epoch 37/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.0742 - mae: 11.0742\n",
            "Epoch 38/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.2032 - mae: 18.2032\n",
            "Epoch 39/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.1352 - mae: 19.1352\n",
            "Epoch 40/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 20.4954 - mae: 20.4954\n",
            "Epoch 41/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 14.8188 - mae: 14.8188\n",
            "Epoch 42/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.2121 - mae: 12.2121\n",
            "Epoch 43/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.6937 - mae: 10.6937\n",
            "Epoch 44/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 32.3512 - mae: 32.3512\n",
            "Epoch 45/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.4817 - mae: 12.4817\n",
            "Epoch 46/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.5831 - mae: 17.5831\n",
            "Epoch 47/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.7252 - mae: 15.7252\n",
            "Epoch 48/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.3528 - mae: 8.3528\n",
            "Epoch 49/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.9545 - mae: 13.9545\n",
            "Epoch 50/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.8012 - mae: 12.8012\n",
            "Epoch 51/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.8156 - mae: 14.8156\n",
            "Epoch 52/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.7038 - mae: 18.7038\n",
            "Epoch 53/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 24.1340 - mae: 24.1340\n",
            "Epoch 54/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.2573 - mae: 23.2573\n",
            "Epoch 55/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 24.1221 - mae: 24.1221\n",
            "Epoch 56/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.1814 - mae: 11.1814\n",
            "Epoch 57/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.1490 - mae: 13.1490\n",
            "Epoch 58/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.8269 - mae: 9.8269\n",
            "Epoch 59/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.3472 - mae: 13.3472\n",
            "Epoch 60/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.8912 - mae: 10.8912\n",
            "Epoch 61/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.5092 - mae: 13.5092\n",
            "Epoch 62/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.5861 - mae: 17.5861\n",
            "Epoch 63/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.1714 - mae: 9.1714\n",
            "Epoch 64/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.4597 - mae: 18.4597\n",
            "Epoch 65/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.1281 - mae: 10.1281\n",
            "Epoch 66/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 24.3504 - mae: 24.3504\n",
            "Epoch 67/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.9111 - mae: 10.9111\n",
            "Epoch 68/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.7857 - mae: 10.7857\n",
            "Epoch 69/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.3586 - mae: 23.3586\n",
            "Epoch 70/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.7923 - mae: 8.7923\n",
            "Epoch 71/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.9411 - mae: 15.9411\n",
            "Epoch 72/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 8.1146 - mae: 8.1146\n",
            "Epoch 73/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.4553 - mae: 9.4553\n",
            "Epoch 74/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 28.1235 - mae: 28.1235\n",
            "Epoch 75/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2240 - mae: 10.2240\n",
            "Epoch 76/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.1812 - mae: 13.1812\n",
            "Epoch 77/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.6935 - mae: 18.6935\n",
            "Epoch 78/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.8300 - mae: 8.8300\n",
            "Epoch 79/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 27.0853 - mae: 27.0853\n",
            "Epoch 80/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 30.6475 - mae: 30.6475\n",
            "Epoch 81/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.1698 - mae: 13.1698\n",
            "Epoch 82/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.6057 - mae: 14.6057\n",
            "Epoch 83/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.6456 - mae: 18.6456\n",
            "Epoch 84/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.4148 - mae: 9.4148\n",
            "Epoch 85/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.0430 - mae: 25.0430\n",
            "Epoch 86/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.1134 - mae: 17.1134\n",
            "Epoch 87/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.0230 - mae: 11.0230\n",
            "Epoch 88/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 24.7806 - mae: 24.7806\n",
            "Epoch 89/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 9.6639 - mae: 9.6639\n",
            "Epoch 90/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.7896 - mae: 18.7896\n",
            "Epoch 91/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.5029 - mae: 10.5029\n",
            "Epoch 92/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 18.0179 - mae: 18.0179\n",
            "Epoch 93/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.5819 - mae: 6.5819\n",
            "Epoch 94/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1521 - mae: 11.1521\n",
            "Epoch 95/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 24.3807 - mae: 24.3807\n",
            "Epoch 96/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.7578 - mae: 10.7578\n",
            "Epoch 97/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.3702 - mae: 15.3702\n",
            "Epoch 98/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 8.2683 - mae: 8.2683\n",
            "Epoch 99/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.5302 - mae: 16.5302\n",
            "Epoch 100/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.3150 - mae: 14.3150\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59bfc2cdf0>"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AL013gpCLPUU",
        "outputId": "610de166-3839-4e11-96fd-c6b0934ba48d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 81.59221 ],\n",
              "       [ 86.91727 ],\n",
              "       [ 92.24232 ],\n",
              "       [ 97.567375],\n",
              "       [102.89243 ],\n",
              "       [108.21749 ],\n",
              "       [113.54255 ],\n",
              "       [118.867615],\n",
              "       [124.192665],\n",
              "       [129.51772 ]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#let's create a plotting function\n",
        "def plot_predictions(train_data=tf.expand_dims(X_train,axis=-1),\n",
        "                      train_labels =y_train,\n",
        "                      test_data=tf.expand_dims(X_test,axis=-1),\n",
        "                      test_labels=y_test,\n",
        "                      prediction=y_pred):\n",
        "  plt.figure(figsize=(8,7))\n",
        "  plt.scatter(train_data, train_labels, c='b',label='training_data')\n",
        "  plt.scatter(test_data, test_labels, c='g',label=\"Testing_data\")\n",
        "  plt.scatter(test_data,prediction,c='r',label=\"predictions\"),\n",
        "  plt.legend()\n",
        "\n"
      ],
      "metadata": {
        "id": "oR19dEdVLihy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plot_predictions()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 599
        },
        "id": "1BpQPWBJOP_-",
        "outputId": "7f3be596-0dba-468f-e4ba-72f280ce9589"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#evaluating our maodel's predictions with regression evaluation metrics\n",
        "\n",
        "1. MAE: \"on avg how wrong are is our model's predictions\"\n",
        "2. MSE: \"Square the avg errors\""
      ],
      "metadata": {
        "id": "xqYafybiO4Xf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model.evaluate(tf.expand_dims(X_test, axis=1), y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wN4981NjPzX0",
        "outputId": "27c2345d-0725-4c8e-817e-65bd943b90ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 148ms/step - loss: 10.7147 - mae: 10.7147\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[10.714654922485352, 10.714654922485352]"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#calculate MAE\n",
        "tf.keras.losses.mae(y_test,y_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O-kYJL56Q-5m",
        "outputId": "bf2281e0-3623-4d09-fe9e-2796993583cf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tf.Tensor: shape=(10,), dtype=float32, numpy=\n",
              "array([10.963117, 10.      , 10.448463, 12.22695 , 15.513947, 20.217491,\n",
              "       25.54255 , 30.867615, 36.192665, 41.517715], dtype=float32)>"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tf.squeeze(y_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5DHjXG9MRXnQ",
        "outputId": "756fdec0-f7b6-4a04-9493-e231c52d4666"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tf.Tensor: shape=(10,), dtype=float32, numpy=\n",
              "array([ 81.59221 ,  86.91727 ,  92.24232 ,  97.567375, 102.89243 ,\n",
              "       108.21749 , 113.54255 , 118.867615, 124.192665, 129.51772 ],\n",
              "      dtype=float32)>"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tf.keras.losses.mae(y_test,tf.squeeze(y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "slMy0D3JSHmo",
        "outputId": "5f053abb-2ff3-4ebf-e6c4-fccb0a39acdf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tf.Tensor: shape=(), dtype=float32, numpy=17.554966>"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tf.keras.losses.mse(y_test,tf.squeeze(y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vc6hZQOeSXKB",
        "outputId": "d63a9c26-472e-46d1-f8dd-a126bc002ecb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tf.Tensor: shape=(), dtype=float32, numpy=322.66193>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Running experiments to improve our model\n",
        "\n",
        "1. Get more data\n",
        "2. make your model larger - more layers, more hidden units\n",
        "3. train for longer\n",
        "\n",
        "Let's do 3 modelling experriments\n",
        "\n",
        "1. model_1 - 1layer, 100 epochs,\n",
        "2. model_2 - 2layers, 100 epochs,\n",
        "3. model_3 - 2layers, 500 epochs"
      ],
      "metadata": {
        "id": "Mnu8X7s7So7r"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#build model_1\n",
        "\n",
        "model_1 =tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "model_1.compile(loss=tf.keras.losses.mae,\n",
        "                optimizer=tf.keras.optimizers.SGD(),\n",
        "                metrics=\"mae\")\n",
        "\n",
        "model_1.fit(tf.expand_dims(X_train, axis=1),y_train, epochs=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AwV8mRxzezJ_",
        "outputId": "c7010cc8-1888-4f1c-b82a-2a3cc03e931e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.9216 - mae: 8.9216\n",
            "Epoch 2/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 9.2799 - mae: 9.2799\n",
            "Epoch 3/100\n",
            "2/2 [==============================] - 0s 14ms/step - loss: 7.7917 - mae: 7.7917\n",
            "Epoch 4/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.7374 - mae: 8.7374\n",
            "Epoch 5/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.7738 - mae: 10.7738\n",
            "Epoch 6/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 9.9625 - mae: 9.9625\n",
            "Epoch 7/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.0144 - mae: 9.0144\n",
            "Epoch 8/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.0754 - mae: 9.0754\n",
            "Epoch 9/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 19.8754 - mae: 19.8754\n",
            "Epoch 10/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 10.7347 - mae: 10.7347\n",
            "Epoch 11/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.6436 - mae: 8.6436\n",
            "Epoch 12/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 9.6303 - mae: 9.6303\n",
            "Epoch 13/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.9613 - mae: 12.9613\n",
            "Epoch 14/100\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 14.2079 - mae: 14.2079\n",
            "Epoch 15/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.6115 - mae: 11.6115\n",
            "Epoch 16/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.4723 - mae: 8.4723\n",
            "Epoch 17/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.4854 - mae: 13.4854\n",
            "Epoch 18/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.2776 - mae: 11.2776\n",
            "Epoch 19/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.2227 - mae: 18.2227\n",
            "Epoch 20/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.9314 - mae: 14.9314\n",
            "Epoch 21/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.8179 - mae: 10.8179\n",
            "Epoch 22/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.5659 - mae: 8.5659\n",
            "Epoch 23/100\n",
            "2/2 [==============================] - 0s 43ms/step - loss: 9.7239 - mae: 9.7239\n",
            "Epoch 24/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.9281 - mae: 10.9281\n",
            "Epoch 25/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.1447 - mae: 9.1447\n",
            "Epoch 26/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.1644 - mae: 13.1644\n",
            "Epoch 27/100\n",
            "2/2 [==============================] - 0s 17ms/step - loss: 10.6427 - mae: 10.6427\n",
            "Epoch 28/100\n",
            "2/2 [==============================] - 0s 18ms/step - loss: 12.8541 - mae: 12.8541\n",
            "Epoch 29/100\n",
            "2/2 [==============================] - 0s 15ms/step - loss: 9.4982 - mae: 9.4982\n",
            "Epoch 30/100\n",
            "2/2 [==============================] - 0s 14ms/step - loss: 16.3654 - mae: 16.3654\n",
            "Epoch 31/100\n",
            "2/2 [==============================] - 0s 19ms/step - loss: 23.6155 - mae: 23.6155\n",
            "Epoch 32/100\n",
            "2/2 [==============================] - 0s 14ms/step - loss: 7.6087 - mae: 7.6087\n",
            "Epoch 33/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 9.3081 - mae: 9.3081\n",
            "Epoch 34/100\n",
            "2/2 [==============================] - 0s 17ms/step - loss: 13.7047 - mae: 13.7047\n",
            "Epoch 35/100\n",
            "2/2 [==============================] - 0s 15ms/step - loss: 11.1313 - mae: 11.1313\n",
            "Epoch 36/100\n",
            "2/2 [==============================] - 0s 20ms/step - loss: 13.3391 - mae: 13.3391\n",
            "Epoch 37/100\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 9.4592 - mae: 9.4592\n",
            "Epoch 38/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 10.1167 - mae: 10.1167\n",
            "Epoch 39/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 10.1831 - mae: 10.1831\n",
            "Epoch 40/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 10.9226 - mae: 10.9226\n",
            "Epoch 41/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 7.9107 - mae: 7.9107\n",
            "Epoch 42/100\n",
            "2/2 [==============================] - 0s 19ms/step - loss: 10.0722 - mae: 10.0722\n",
            "Epoch 43/100\n",
            "2/2 [==============================] - 0s 14ms/step - loss: 8.6877 - mae: 8.6877\n",
            "Epoch 44/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.1780 - mae: 12.1780\n",
            "Epoch 45/100\n",
            "2/2 [==============================] - 0s 13ms/step - loss: 13.8100 - mae: 13.8100\n",
            "Epoch 46/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 8.4737 - mae: 8.4737\n",
            "Epoch 47/100\n",
            "2/2 [==============================] - 0s 21ms/step - loss: 9.1157 - mae: 9.1157\n",
            "Epoch 48/100\n",
            "2/2 [==============================] - 0s 18ms/step - loss: 10.5968 - mae: 10.5968\n",
            "Epoch 49/100\n",
            "2/2 [==============================] - 0s 13ms/step - loss: 7.7345 - mae: 7.7345\n",
            "Epoch 50/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.5201 - mae: 9.5201\n",
            "Epoch 51/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 9.1474 - mae: 9.1474\n",
            "Epoch 52/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.3335 - mae: 16.3335\n",
            "Epoch 53/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.1354 - mae: 14.1354\n",
            "Epoch 54/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 21.1502 - mae: 21.1502\n",
            "Epoch 55/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.3675 - mae: 16.3675\n",
            "Epoch 56/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 9.9932 - mae: 9.9932\n",
            "Epoch 57/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.9409 - mae: 9.9409\n",
            "Epoch 58/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 9.2025 - mae: 9.2025\n",
            "Epoch 59/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.4067 - mae: 8.4067\n",
            "Epoch 60/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.4709 - mae: 9.4709\n",
            "Epoch 61/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.4107 - mae: 11.4107\n",
            "Epoch 62/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.7006 - mae: 11.7006\n",
            "Epoch 63/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.0693 - mae: 7.0693\n",
            "Epoch 64/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 16.9819 - mae: 16.9819\n",
            "Epoch 65/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.4678 - mae: 12.4678\n",
            "Epoch 66/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.0312 - mae: 13.0312\n",
            "Epoch 67/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 8.0589 - mae: 8.0589\n",
            "Epoch 68/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 10.1933 - mae: 10.1933\n",
            "Epoch 69/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.3772 - mae: 12.3772\n",
            "Epoch 70/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.0334 - mae: 9.0334\n",
            "Epoch 71/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.0187 - mae: 10.0187\n",
            "Epoch 72/100\n",
            "2/2 [==============================] - 0s 38ms/step - loss: 10.0352 - mae: 10.0352\n",
            "Epoch 73/100\n",
            "2/2 [==============================] - 0s 16ms/step - loss: 12.5894 - mae: 12.5894\n",
            "Epoch 74/100\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 10.3948 - mae: 10.3948\n",
            "Epoch 75/100\n",
            "2/2 [==============================] - 0s 34ms/step - loss: 9.7054 - mae: 9.7054\n",
            "Epoch 76/100\n",
            "2/2 [==============================] - 0s 16ms/step - loss: 11.2035 - mae: 11.2035\n",
            "Epoch 77/100\n",
            "2/2 [==============================] - 0s 18ms/step - loss: 8.3479 - mae: 8.3479\n",
            "Epoch 78/100\n",
            "2/2 [==============================] - 0s 13ms/step - loss: 9.1027 - mae: 9.1027\n",
            "Epoch 79/100\n",
            "2/2 [==============================] - 0s 17ms/step - loss: 19.5277 - mae: 19.5277\n",
            "Epoch 80/100\n",
            "2/2 [==============================] - 0s 26ms/step - loss: 14.8668 - mae: 14.8668\n",
            "Epoch 81/100\n",
            "2/2 [==============================] - 0s 17ms/step - loss: 9.0191 - mae: 9.0191\n",
            "Epoch 82/100\n",
            "2/2 [==============================] - 0s 28ms/step - loss: 12.9960 - mae: 12.9960\n",
            "Epoch 83/100\n",
            "2/2 [==============================] - 0s 20ms/step - loss: 7.9094 - mae: 7.9094\n",
            "Epoch 84/100\n",
            "2/2 [==============================] - 0s 31ms/step - loss: 7.6852 - mae: 7.6852\n",
            "Epoch 85/100\n",
            "2/2 [==============================] - 0s 18ms/step - loss: 10.0395 - mae: 10.0395\n",
            "Epoch 86/100\n",
            "2/2 [==============================] - 0s 14ms/step - loss: 9.2450 - mae: 9.2450\n",
            "Epoch 87/100\n",
            "2/2 [==============================] - 0s 16ms/step - loss: 12.0312 - mae: 12.0312\n",
            "Epoch 88/100\n",
            "2/2 [==============================] - 0s 26ms/step - loss: 10.6493 - mae: 10.6493\n",
            "Epoch 89/100\n",
            "2/2 [==============================] - 0s 16ms/step - loss: 7.2599 - mae: 7.2599\n",
            "Epoch 90/100\n",
            "2/2 [==============================] - 0s 23ms/step - loss: 12.7913 - mae: 12.7913\n",
            "Epoch 91/100\n",
            "2/2 [==============================] - 0s 13ms/step - loss: 7.4693 - mae: 7.4693\n",
            "Epoch 92/100\n",
            "2/2 [==============================] - 0s 21ms/step - loss: 6.7448 - mae: 6.7448\n",
            "Epoch 93/100\n",
            "2/2 [==============================] - 0s 21ms/step - loss: 11.9411 - mae: 11.9411\n",
            "Epoch 94/100\n",
            "2/2 [==============================] - 0s 16ms/step - loss: 8.8725 - mae: 8.8725\n",
            "Epoch 95/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 7.7115 - mae: 7.7115\n",
            "Epoch 96/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 6.7424 - mae: 6.7424\n",
            "Epoch 97/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 8.6235 - mae: 8.6235\n",
            "Epoch 98/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.3862 - mae: 9.3862\n",
            "Epoch 99/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.1219 - mae: 9.1219\n",
            "Epoch 100/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.4790 - mae: 10.4790\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59bfb54c40>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#make and plot predictions for model_1\n",
        "\n",
        "y_pred_1 = model_1.predict(X_test)\n",
        "plot_predictions(prediction=y_pred_1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 654
        },
        "id": "zfg5hsbVgOzW",
        "outputId": "80ab647a-9206-4a4e-aa93-c952dc6b0410"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:tensorflow:6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7f59bfb52dd0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 69ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x700 with 1 Axes>"
            ],
            "image/png": "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bt2qVq1aKTs7W0OHDlVoaM1jzsvLU2JiovLy8rR3716NGTNG3bp105QpUyRJEyZM0LfffqsNGzaocePGysrK0rFjx1z6DJWVlRo1apTi4+O1ZcsWlZaWaubMmVX2i4qKUk5OjpKSkvT5559rypQpioqK0gMPPKAxY8Zo165dWr16tdauXSvJdnxJUkhIiJ555hmlp6frq6++0m9+8xs98MADTgEeAIBA4A9NTu7ySDA9cuSIJCk+Pt5pe3x8vOO1I0eOqFWrVs6DadRIzZs3d+xTnfnz52vevHkNPOKq3Jnt5q1FaufOnaunnnpKo0bZDrT09HR9+eWXev755zVx4kQdOHBA7du3V9++fWWxWJSamur42bi4OElSbGysEhISav09zZo10x/+8AeFhoaqY8eOuummm7Ru3TpNmTJFu3fv1tq1a7V161bH/1S8+OKLat++vUufYe3atdq9e7fef/99JSUlSZJ+//vf64YbbnDa7+GHH3b8dVpamu677z699tpreuCBB9S0aVNFRkaqUaNGVT7LhSE3LS1Nv/3tb3XnnXcSTAEAfsXVNiezNzm5y++an2bPnq2srCzHc6vVqpSUlAb/PWab7Xb69Gnt27dPkydPdpy5lKTz5887zhZOmjRJP/vZz9ShQwcNHTpUP//5z3X99de7/bs6d+7sdEY1MTFRn3/+uSSpsLBQjRo10jXXXON4vV27dmrWrJlL711QUKCUlBRHKJWk3r17V9nv9ddf1zPPPKN9+/bp1KlTOn/+vKKjo+t8/7Vr12r+/PnavXu3rFarzp8/r7Nnz+qHH35QRESES2MEAMCX3G1zMnOTk7s8slyU/SzW0aNHnbYfPXrU8VpCQkKVy7/nz5/X8ePHaz2jFx4erujoaKeHJ5httpv9Psk///nPys/Pdzx27dqlzZs3S5KuueYaFRUV6fHHH9eZM2d06623avTo0W7/rsaNGzs9t1gsqqysvPQP4aJNmzZp/PjxuvHGG/Xee+9p+/bteuihh1ReXl7rzxUXF+vnP/+5unTporffflvbtm1zTM6r62cBADCDQGxzcodHgml6eroSEhKcliGyWq3asmWL4+xY7969deLECW3bts2xz/r161VZWamMjAxPDMstZpvtFh8fr6SkJH311Vdq166d0yM9Pd2xX3R0tMaMGaM///nPev311/X222/r+PHjkmyBs6Li0pa66tChg86fP6/t27c7tu3du1fff/+9Sz/fqVMnHTx4UCUlP55ptgdru08++USpqal66KGH1LNnT7Vv31779+932icsLKzKZ9m2bZsqKyv11FNP6Sc/+YmuuOIK00ykAwCgLoHa5uSOel/KP3XqlPbu3et4XlRUpPz8fDVv3lytW7fWzJkz9dvf/lbt27dXenq6HnnkESUlJWnEiBGSbAFl6NChmjJlip577jmdO3dO06dP13/91385Xeb1Fftst9FvjJZFFqeDxFez3ebNm6e7775bMTExGjp0qMrKyvTpp5/q+++/V1ZWlhYvXqzExER1795dISEhevPNN5WQkKDY2FhJtnsu161bp+uuu07h4eEuX36/UMeOHTVkyBBNnTpVf/rTn9S4cWPde++9atq0qSyW6kP8hYYMGaIrrrhCEydO1MKFC2W1WvXQQw857dO+fXsdOHBAr732mnr16qV//OMfeuedd5z2SUtLcxxzycnJioqKUrt27XTu3DktW7ZMw4YN08cff6znnnvO7c8IAIAvmHF+i7fV+4zpp59+qu7du6t79+6SpKysLHXv3l1z5syRJD3wwAO66667NHXqVPXq1UunTp3S6tWr1aRJE8d7LF++XB07dtTgwYN14403qm/fvnrhhRcu8SM1HPtst8ujL3fanhydrLdufcvrs93uuOMOvfjii8rOztbVV1+tAQMGKCcnx3HGNCoqSk8++aR69uypXr16qbi4WP/85z8VEmL72/zUU09pzZo1SklJcfx9q4+//OUvio+PV//+/TVy5EjHjPkL/97WJCQkRO+8847OnDmja6+9VnfccYd+97vfOe1z880365577tH06dPVrVs3ffLJJ3rkkUec9rnllls0dOhQDRo0SHFxcVqxYoW6du2qxYsX64knntBVV12l5cuXO5bLAgDA7Mw2v8UXLIZhVD1f7EesVqtiYmJUWlpa5X7Ts2fPqqioSOnp6S6Fppq4OjMuWH399ddKSUnR2rVrNXjwYF8P55I11HEDAIA7NhRv0KBXBtW5X97EPL87Y1pbXruQ383K94VAmu3WENavX69Tp07p6quvVklJiR544AGlpaWpf//+vh4aAAB+yz6/5ZD1ULX3mVpkUXJ0st+1ObnDI5OfENjOnTun//mf/1Hnzp01cuRIxcXFORbbX758uSIjI6t9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jdXkyZN16tSpeo+JYFqD8vJy/eIXv9Cvf/3ral+vqKjQTTfdpPLycn3yySd65ZVXlJOTozlz5jj2KSoq0k033aRBgwYpPz9fM2fO1B133KH333/fWx/Da/r06aOSkhKnxx133KH09HT17NnTad+1a9c67dejRw8fjdr7HnvsMafPftdddzles1qtuv7665Wamqpt27Zp4cKFevTRR/XCCy/4cMTesXv3blVWVur555/XF198oaefflrPPfec/ud//qfKvsF4/Lz++uvKysrS3Llz9dlnn6lr167KzMzUsWPHfD00r9u4caOmTZumzZs3a82aNTp37pyuv/56nT592mm/KVOmOB0nwfI/eZLUuXNnp8/+0UcfOV6755579Pe//11vvvmmNm7cqMOHD2vUqFE+HK13bd261em7WbNmjSTpF7/4hWOfYDp2Tp8+ra5du+rZZ5+t9vUnn3xSzzzzjJ577jlt2bJFl112mTIzM3X27FnHPuPHj9cXX3yhNWvW6L333tMHH3ygqVOn1n9QBmqVnZ1txMTEVNn+z3/+0wgJCTGOHDni2PanP/3JiI6ONsrKygzDMIwHHnjA6Ny5s9PPjRkzxsjMzPTomM2gvLzciIuLMx577DHHtqKiIkOSsX37dt8NzIdSU1ONp59+usbX//jHPxrNmjVzHD+GYRizZs0yOnTo4IXRmc+TTz5ppKenO54H8/Fz7bXXGtOmTXM8r6ioMJKSkoz58+f7cFTmcOzYMUOSsXHjRse2AQMGGDNmzPDdoHxo7ty5RteuXat97cSJE0bjxo2NN99807GtoKDAkGRs2rTJSyM0lxkzZhht27Y1KisrDcMI7mNHkvHOO+84nldWVhoJCQnGwoULHdtOnDhhhIeHGytWrDAMwzC+/PJLQ5KxdetWxz7/+te/DIvFYhw6dKhe4+CMaT1t2rRJV199teLj4x3bMjMzZbVa9cUXXzj2GTJkiNPPZWZmatOmTV4dqy+sWrVK3333nW6//fYqr918881q1aqV+vbtq1WrVvlgdL6zYMECtWjRQt27d9fChQudbv3YtGmT+vfvr7CwMMe2zMxMFRYW6vvvv/fFcH2qtLRUzZs3r7I92I6f8vJybdu2zenfJSEhIRoyZEhQ/LukLqWlpZJU5VhZvny5WrZsqauuukqzZ8/WDz/84Ivh+cSePXuUlJSkNm3aaPz48Tpw4IAkadu2bTp37pzTsdSxY0e1bt06KI+l8vJy/e1vf9Mvf/lLWSwWx/ZgPnYuVFRUpCNHjjgdLzExMcrIyHAcL5s2bVJsbKzTldEhQ4YoJCREW7ZsqdfvbXRpww5eR44ccQqlkhzPjxw5Uus+VqtVZ86cUdOmTb0zWB946aWXlJmZqeTkZMe2yMhIPfXUU7ruuusUEhKit99+WyNGjNDKlSt18803+3C03nH33XfrmmuuUfPmzfXJJ59o9uzZKikp0eLFiyXZjpf09HSnn7nwmGrWrJnXx+wre/fu1bJly7Ro0SLHtmA9fr799ltVVFRU+++S3bt3+2hU5lBZWamZM2fquuuu01VXXeXYPm7cOKWmpiopKUk7d+7UrFmzVFhYqNzcXB+O1jsyMjKUk5OjDh06qKSkRPPmzVO/fv20a9cuHTlyRGFhYVXmTcTHxzv+uxVMVq5cqRMnTmjSpEmObcF87FzMfkxU9++eC3NOq1atnF5v1KiRmjdvXu9jKqiC6YMPPqgnnnii1n0KCgqcbhQPdvX5zr7++mu9//77euONN5z2a9mypbKyshzPe/XqpcOHD2vhwoV+Gyzc+X4u/OxdunRRWFiYfvWrX2n+/PkB289cn+Pn0KFDGjp0qH7xi19oypQpju2BePzg0kybNk27du1yuodSktP9bVdffbUSExM1ePBg7du3T23btvX2ML3qhhtucPx1ly5dlJGRodTUVL3xxhsBfTKkPl566SXdcMMNSkpKcmwL5mPHLIIqmN57771O/2dUnTZt2rj0XgkJCVVmxdpnNiYkJDj+vHi249GjRxUdHe03/4Koz3eWnZ2tFi1auBQWMjIyHDef+6NLOaYyMjJ0/vx5FRcXq0OHDjUeL9KPx5S/cff7OXz4sAYNGqQ+ffq4NOnL348fV7Rs2VKhoaHVHhv+elw0hOnTpzsmWlx4ZaY6GRkZkmxn4oMtXMTGxuqKK67Q3r179bOf/Uzl5eU6ceKE01nTYDyW9u/fr7Vr19Z5JjSYjx37MXH06FElJiY6th89elTdunVz7HPxJMzz58/r+PHj9T6mgiqYxsXFKS4urkHeq3fv3vrd736nY8eOOU5jr1mzRtHR0bryyisd+/zzn/90+rk1a9aod+/eDTIGb3D3OzMMQ9nZ2ZowYYIaN25c5/75+flOB7y/uZRjKj8/XyEhIY7jp3fv3nrooYd07tw5x3e3Zs0adejQwW8v47vz/Rw6dEiDBg1Sjx49lJ2drZCQum+B9/fjxxVhYWHq0aOH1q1bpxEjRkiyXcJet26dpk+f7tvB+YBhGLrrrrv0zjvvaMOGDVVuf6lOfn6+JAX8sVKdU6dOad++fbrtttvUo0cPNW7cWOvWrdMtt9wiSSosLNSBAwf86r9LDSE7O1utWrXSTTfdVOt+wXzspKenKyEhQevWrXMEUavVqi1btjhWLOrdu7dOnDihbdu2OVZIWb9+vSorKx2h3m31mjIVBPbv329s377dmDdvnhEZGWls377d2L59u3Hy5EnDMAzj/PnzxlVXXWVcf/31Rn5+vrF69WojLi7OmD17tuM9vvrqKyMiIsK4//77jYKCAuPZZ581QkNDjdWrV/vqY3nc2rVrDUlGQUFBlddycnKMV1991SgoKDAKCgqM3/3ud0ZISIjx8ssv+2Ck3vXJJ58YTz/9tJGfn2/s27fP+Nvf/mbExcUZEyZMcOxz4sQJIz4+3rjtttuMXbt2Ga+99poRERFhPP/88z4cuXd8/fXXRrt27YzBgwcbX3/9tVFSUuJ42AXz8fPaa68Z4eHhRk5OjvHll18aU6dONWJjY51WBQkWv/71r42YmBhjw4YNTsfJDz/8YBiGYezdu9d47LHHjE8//dQoKioy3n33XaNNmzZG//79fTxy77j33nuNDRs2GEVFRcbHH39sDBkyxGjZsqVx7NgxwzAM48477zRat25trF+/3vj000+N3r17G7179/bxqL2roqLCaN26tTFr1iyn7cF47Jw8edKRbyQZixcvNrZv327s37/fMAzDWLBggREbG2u8++67xs6dO43hw4cb6enpxpkzZxzvMXToUKN79+7Gli1bjI8++sho3769MXbs2HqPiWBag4kTJxqSqjzy8vIc+xQXFxs33HCD0bRpU6Nly5bGvffea5w7d87pffLy8oxu3boZYWFhRps2bYzs7GzvfhAvGzt2rNGnT59qX8vJyTE6depkREREGNHR0ca1117rtGxJINu2bZuRkZFhxMTEGE2aNDE6depk/P73vzfOnj3rtN+OHTuMvn37GuHh4cbll19uLFiwwEcj9q7s7Oxq/3m78P+dg/n4MQzDWLZsmdG6dWsjLCzMuPbaa43Nmzf7ekg+UdNxYv9364EDB4z+/fsbzZs3N8LDw4127doZ999/v1FaWurbgXvJmDFjjMTERCMsLMy4/PLLjTFjxhh79+51vH7mzBnjN7/5jdGsWTMjIiLCGDlypNP/AAaD999/35BkFBYWOm0PxmMnLy+v2n+eJk6caBiGbcmoRx55xIiPjzfCw8ONwYMHV/nevvvuO2Ps2LFGZGSkER0dbdx+++2Ok3j1YTEMw6jfuVYAAACg4bCOKQAAAEyBYAoAAABTIJgCAADAFAimAAAAMAWCKQAAAEyBYAoAAABTIJgCAADAFAimAAAAMAWCKQAAAEyBYAoAAABTIJgCAADAFP4PoI0moHajGJIAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#calculate model_! evaluation metrics\n",
        "\n",
        "mae_1 = tf.keras.losses.mae(y_test, tf.squeeze(y_pred_1))\n",
        "mse_1 = tf.keras.losses.mse(y_test, tf.squeeze(y_pred_1))\n",
        "\n",
        "mae_1, mse_1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a8USfVi2hGZt",
        "outputId": "32987dd4-7e1e-43aa-988d-132ff4f2d0af"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(<tf.Tensor: shape=(), dtype=float32, numpy=14.875166>,\n",
              " <tf.Tensor: shape=(), dtype=float32, numpy=222.10007>)"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#build model_2"
      ],
      "metadata": {
        "id": "Fr8xH-OGh38P"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_2 = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(10),\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "model_2.compile(loss=tf.keras.losses.mae,\n",
        "                optimizer=tf.keras.optimizers.SGD(),\n",
        "                metrics=\"mse\")\n",
        "\n",
        "model_2.fit(tf.expand_dims(X_train, axis=1),y_train, epochs=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qVlMBrcpiTUM",
        "outputId": "a6f3e659-bab5-4a5e-af1b-8a9fca5792da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "2/2 [==============================] - 1s 9ms/step - loss: 53.9264 - mse: 4318.5962\n",
            "Epoch 2/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 34.0303 - mse: 1545.5768\n",
            "Epoch 3/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 37.2661 - mse: 2128.3889\n",
            "Epoch 4/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 31.4594 - mse: 1470.1498\n",
            "Epoch 5/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.9657 - mse: 335.3388\n",
            "Epoch 6/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.6510 - mse: 210.4558\n",
            "Epoch 7/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 11.9094 - mse: 176.8202\n",
            "Epoch 8/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 12.9698 - mse: 230.9732\n",
            "Epoch 9/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 34.1853 - mse: 1753.8610\n",
            "Epoch 10/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 23.6182 - mse: 780.6660\n",
            "Epoch 11/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 11.8710 - mse: 212.6335\n",
            "Epoch 12/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.8907 - mse: 806.3706\n",
            "Epoch 13/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 20.6619 - mse: 605.5305\n",
            "Epoch 14/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 23.0047 - mse: 808.3965\n",
            "Epoch 15/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 14.9827 - mse: 299.9359\n",
            "Epoch 16/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.2312 - mse: 144.3896\n",
            "Epoch 17/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 22.7758 - mse: 722.7464\n",
            "Epoch 18/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 11.2622 - mse: 192.2014\n",
            "Epoch 19/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 13.7598 - mse: 293.4275\n",
            "Epoch 20/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.1218 - mse: 145.8001\n",
            "Epoch 21/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.0605 - mse: 410.2970\n",
            "Epoch 22/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 15.2999 - mse: 321.5281\n",
            "Epoch 23/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.2603 - mse: 118.7378\n",
            "Epoch 24/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.3551 - mse: 413.9580\n",
            "Epoch 25/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.0043 - mse: 337.2712\n",
            "Epoch 26/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 21.0817 - mse: 656.6603\n",
            "Epoch 27/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 25.6279 - mse: 1021.6198\n",
            "Epoch 28/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 18.1705 - mse: 522.0256\n",
            "Epoch 29/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 9.2385 - mse: 99.3729\n",
            "Epoch 30/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 28.7609 - mse: 1468.9919\n",
            "Epoch 31/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 52.0558 - mse: 4839.9326\n",
            "Epoch 32/100\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 11.4466 - mse: 190.5556\n",
            "Epoch 33/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.1905 - mse: 182.6420\n",
            "Epoch 34/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 23.9803 - mse: 871.6369\n",
            "Epoch 35/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.6180 - mse: 243.3757\n",
            "Epoch 36/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 21.5121 - mse: 660.0242\n",
            "Epoch 37/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 11.4020 - mse: 150.6136\n",
            "Epoch 38/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 13.4928 - mse: 270.5010\n",
            "Epoch 39/100\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 10.8088 - mse: 139.9328\n",
            "Epoch 40/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 16.6314 - mse: 401.2410\n",
            "Epoch 41/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 10.9950 - mse: 180.0495\n",
            "Epoch 42/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.3173 - mse: 115.1464\n",
            "Epoch 43/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.6026 - mse: 110.9675\n",
            "Epoch 44/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 28.0260 - mse: 1260.0396\n",
            "Epoch 45/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.3007 - mse: 147.3940\n",
            "Epoch 46/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.0919 - mse: 289.9000\n",
            "Epoch 47/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.4988 - mse: 256.5828\n",
            "Epoch 48/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.3340 - mse: 407.5807\n",
            "Epoch 49/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.5273 - mse: 98.8376\n",
            "Epoch 50/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.7204 - mse: 254.1476\n",
            "Epoch 51/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.5695 - mse: 153.2823\n",
            "Epoch 52/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 30.2329 - mse: 1576.5504\n",
            "Epoch 53/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.7388 - mse: 279.3179\n",
            "Epoch 54/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.4516 - mse: 1073.3015\n",
            "Epoch 55/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.0435 - mse: 1029.2834\n",
            "Epoch 56/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.2491 - mse: 171.5846\n",
            "Epoch 57/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.2282 - mse: 218.7658\n",
            "Epoch 58/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.8775 - mse: 107.6655\n",
            "Epoch 59/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.4172 - mse: 255.3617\n",
            "Epoch 60/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.9423 - mse: 141.6938\n",
            "Epoch 61/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.5644 - mse: 246.4509\n",
            "Epoch 62/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.8776 - mse: 486.6666\n",
            "Epoch 63/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.7426 - mse: 92.1534\n",
            "Epoch 64/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.1380 - mse: 373.2743\n",
            "Epoch 65/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.7506 - mse: 146.6520\n",
            "Epoch 66/100\n",
            "2/2 [==============================] - 0s 14ms/step - loss: 22.1808 - mse: 728.8401\n",
            "Epoch 67/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2712 - mse: 121.2551\n",
            "Epoch 68/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 13.4667 - mse: 268.8994\n",
            "Epoch 69/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.4338 - mse: 163.0673\n",
            "Epoch 70/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.6177 - mse: 245.6759\n",
            "Epoch 71/100\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 15.6199 - mse: 346.5982\n",
            "Epoch 72/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.8519 - mse: 168.2552\n",
            "Epoch 73/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 16.6218 - mse: 372.1995\n",
            "Epoch 74/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 24.1247 - mse: 915.8617\n",
            "Epoch 75/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 9.6298 - mse: 149.4415\n",
            "Epoch 76/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 12.4801 - mse: 189.6046\n",
            "Epoch 77/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.7007 - mse: 432.2090\n",
            "Epoch 78/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 9.0871 - mse: 96.2838\n",
            "Epoch 79/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 24.0144 - mse: 868.0663\n",
            "Epoch 80/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.8039 - mse: 1109.6870\n",
            "Epoch 81/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 11.7157 - mse: 172.1750\n",
            "Epoch 82/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.0167 - mse: 211.9612\n",
            "Epoch 83/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 17.4147 - mse: 395.0990\n",
            "Epoch 84/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 7.2785 - mse: 73.4363\n",
            "Epoch 85/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 14.9656 - mse: 312.8048\n",
            "Epoch 86/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.2890 - mse: 315.5517\n",
            "Epoch 87/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 19.1064 - mse: 521.1237\n",
            "Epoch 88/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 29.8353 - mse: 1288.3403\n",
            "Epoch 89/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.1939 - mse: 124.4846\n",
            "Epoch 90/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.5269 - mse: 664.1124\n",
            "Epoch 91/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.5886 - mse: 162.1256\n",
            "Epoch 92/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 18.3958 - mse: 463.9797\n",
            "Epoch 93/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.4288 - mse: 82.3615\n",
            "Epoch 94/100\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.7305 - mse: 445.3177\n",
            "Epoch 95/100\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1244 - mse: 164.0159\n",
            "Epoch 96/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 19.4248 - mse: 509.9877\n",
            "Epoch 97/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 12.1648 - mse: 209.6202\n",
            "Epoch 98/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 11.5709 - mse: 169.2697\n",
            "Epoch 99/100\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 13.8738 - mse: 264.8173\n",
            "Epoch 100/100\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 20.1934 - mse: 606.6289\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59bfae14e0>"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_preds_2 = model_2.predict(X_test)\n",
        "plot_predictions(prediction=y_preds_2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 616
        },
        "id": "VKIE9mV3jBrg",
        "outputId": "d9fa315d-9323-4f42-9b25-8c80cc4b2226"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 74ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mae_2 = tf.keras.losses.mae(y_test, tf.squeeze(y_preds_2))\n",
        "mse_2 = tf.keras.losses.mse(y_test, tf.squeeze(y_preds_2))\n",
        "\n",
        "mae_2, mse_2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cffXnXmZjaeB",
        "outputId": "130e9037-2572-46c0-97e9-f2cbab5f169b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(<tf.Tensor: shape=(), dtype=float32, numpy=3.0545516>,\n",
              " <tf.Tensor: shape=(), dtype=float32, numpy=12.1221895>)"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#build model_3"
      ],
      "metadata": {
        "id": "IErJApAZj6k2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model_3 = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(10),\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "model_3.compile(loss=tf.keras.losses.mae,\n",
        "                optimizer=tf.keras.optimizers.SGD(),\n",
        "                metrics=\"mae\")\n",
        "\n",
        "model_3.fit(tf.expand_dims(X_train, axis=1),y_train, epochs=500)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zxeeN_aPkBG2",
        "outputId": "b806c282-c276-44f9-e088-86c95c5fb07f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/500\n",
            "2/2 [==============================] - 1s 8ms/step - loss: 33.3104 - mae: 33.3104\n",
            "Epoch 2/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 27.9014 - mae: 27.9014\n",
            "Epoch 3/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 33.4203 - mae: 33.4203\n",
            "Epoch 4/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.5534 - mae: 25.5534\n",
            "Epoch 5/500\n",
            "2/2 [==============================] - 0s 4ms/step - loss: 15.0889 - mae: 15.0889\n",
            "Epoch 6/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.9935 - mae: 11.9935\n",
            "Epoch 7/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.3072 - mae: 11.3072\n",
            "Epoch 8/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1430 - mae: 11.1430\n",
            "Epoch 9/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 41.0085 - mae: 41.0085\n",
            "Epoch 10/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 28.3316 - mae: 28.3316\n",
            "Epoch 11/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2527 - mae: 10.2527\n",
            "Epoch 12/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.1544 - mae: 25.1544\n",
            "Epoch 13/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 17.6385 - mae: 17.6385\n",
            "Epoch 14/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 23.8122 - mae: 23.8122\n",
            "Epoch 15/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.8469 - mae: 15.8469\n",
            "Epoch 16/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 10.4681 - mae: 10.4681\n",
            "Epoch 17/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.7697 - mae: 19.7697\n",
            "Epoch 18/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 13.3762 - mae: 13.3762\n",
            "Epoch 19/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 16.3935 - mae: 16.3935\n",
            "Epoch 20/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.2537 - mae: 8.2537\n",
            "Epoch 21/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 14.4587 - mae: 14.4587\n",
            "Epoch 22/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 12.8763 - mae: 12.8763\n",
            "Epoch 23/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 15.5111 - mae: 15.5111\n",
            "Epoch 24/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.3020 - mae: 15.3020\n",
            "Epoch 25/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.3653 - mae: 14.3653\n",
            "Epoch 26/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.3899 - mae: 19.3899\n",
            "Epoch 27/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.4353 - mae: 11.4353\n",
            "Epoch 28/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 28.9511 - mae: 28.9511\n",
            "Epoch 29/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.2553 - mae: 9.2553\n",
            "Epoch 30/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 29.7145 - mae: 29.7145\n",
            "Epoch 31/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 53.9016 - mae: 53.9016\n",
            "Epoch 32/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 9.5465 - mae: 9.5465\n",
            "Epoch 33/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 12.1330 - mae: 12.1330\n",
            "Epoch 34/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 23.7504 - mae: 23.7504\n",
            "Epoch 35/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 12.6491 - mae: 12.6491\n",
            "Epoch 36/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.5898 - mae: 21.5898\n",
            "Epoch 37/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.3340 - mae: 11.3340\n",
            "Epoch 38/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 13.3809 - mae: 13.3809\n",
            "Epoch 39/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 10.7521 - mae: 10.7521\n",
            "Epoch 40/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.1887 - mae: 16.1887\n",
            "Epoch 41/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.1910 - mae: 12.1910\n",
            "Epoch 42/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2225 - mae: 10.2225\n",
            "Epoch 43/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.8999 - mae: 9.8999\n",
            "Epoch 44/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 31.5645 - mae: 31.5645\n",
            "Epoch 45/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.2759 - mae: 12.2759\n",
            "Epoch 46/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.9684 - mae: 16.9684\n",
            "Epoch 47/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.9573 - mae: 15.9573\n",
            "Epoch 48/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.8936 - mae: 8.8936\n",
            "Epoch 49/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.4179 - mae: 13.4179\n",
            "Epoch 50/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.9632 - mae: 14.9632\n",
            "Epoch 51/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.5392 - mae: 13.5392\n",
            "Epoch 52/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.9805 - mae: 17.9805\n",
            "Epoch 53/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 22.4798 - mae: 22.4798\n",
            "Epoch 54/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 27.5133 - mae: 27.5133\n",
            "Epoch 55/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 27.2343 - mae: 27.2343\n",
            "Epoch 56/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 11.6013 - mae: 11.6013\n",
            "Epoch 57/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.7087 - mae: 13.7087\n",
            "Epoch 58/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.1452 - mae: 10.1452\n",
            "Epoch 59/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 14.6656 - mae: 14.6656\n",
            "Epoch 60/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.0865 - mae: 10.0865\n",
            "Epoch 61/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.1716 - mae: 15.1716\n",
            "Epoch 62/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.0579 - mae: 12.0579\n",
            "Epoch 63/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.3642 - mae: 10.3642\n",
            "Epoch 64/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 24.2033 - mae: 24.2033\n",
            "Epoch 65/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.5434 - mae: 10.5434\n",
            "Epoch 66/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.2098 - mae: 21.2098\n",
            "Epoch 67/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.5371 - mae: 10.5371\n",
            "Epoch 68/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.3714 - mae: 14.3714\n",
            "Epoch 69/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.6237 - mae: 10.6237\n",
            "Epoch 70/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.7073 - mae: 12.7073\n",
            "Epoch 71/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 13.1323 - mae: 13.1323\n",
            "Epoch 72/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.6080 - mae: 19.6080\n",
            "Epoch 73/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.2016 - mae: 11.2016\n",
            "Epoch 74/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 21.8726 - mae: 21.8726\n",
            "Epoch 75/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 7.2118 - mae: 7.2118\n",
            "Epoch 76/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.4308 - mae: 9.4308\n",
            "Epoch 77/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 22.0713 - mae: 22.0713\n",
            "Epoch 78/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.6597 - mae: 17.6597\n",
            "Epoch 79/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.8411 - mae: 14.8411\n",
            "Epoch 80/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.1280 - mae: 25.1280\n",
            "Epoch 81/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.9161 - mae: 10.9161\n",
            "Epoch 82/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.7636 - mae: 12.7636\n",
            "Epoch 83/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.5429 - mae: 17.5429\n",
            "Epoch 84/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.3014 - mae: 7.3014\n",
            "Epoch 85/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.0621 - mae: 15.0621\n",
            "Epoch 86/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 15.3660 - mae: 15.3660\n",
            "Epoch 87/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 19.2623 - mae: 19.2623\n",
            "Epoch 88/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 29.4266 - mae: 29.4266\n",
            "Epoch 89/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.1331 - mae: 10.1331\n",
            "Epoch 90/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.1919 - mae: 21.1919\n",
            "Epoch 91/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.5071 - mae: 10.5071\n",
            "Epoch 92/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 18.0951 - mae: 18.0951\n",
            "Epoch 93/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.5592 - mae: 6.5592\n",
            "Epoch 94/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 11.1616 - mae: 11.1616\n",
            "Epoch 95/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 24.5037 - mae: 24.5037\n",
            "Epoch 96/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.7692 - mae: 10.7692\n",
            "Epoch 97/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.4472 - mae: 15.4472\n",
            "Epoch 98/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.0349 - mae: 9.0349\n",
            "Epoch 99/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.8571 - mae: 10.8571\n",
            "Epoch 100/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 27.0052 - mae: 27.0052\n",
            "Epoch 101/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.0078 - mae: 15.0078\n",
            "Epoch 102/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.6115 - mae: 10.6115\n",
            "Epoch 103/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.1227 - mae: 9.1227\n",
            "Epoch 104/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.4376 - mae: 23.4376\n",
            "Epoch 105/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.7165 - mae: 10.7165\n",
            "Epoch 106/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 11.1803 - mae: 11.1803\n",
            "Epoch 107/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 20.9900 - mae: 20.9900\n",
            "Epoch 108/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 6.3285 - mae: 6.3285\n",
            "Epoch 109/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.4909 - mae: 10.4909\n",
            "Epoch 110/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.4528 - mae: 10.4528\n",
            "Epoch 111/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.5200 - mae: 16.5200\n",
            "Epoch 112/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.4574 - mae: 9.4574\n",
            "Epoch 113/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.3873 - mae: 17.3873\n",
            "Epoch 114/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.7561 - mae: 16.7561\n",
            "Epoch 115/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.9811 - mae: 10.9811\n",
            "Epoch 116/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 22.7395 - mae: 22.7395\n",
            "Epoch 117/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.4460 - mae: 9.4460\n",
            "Epoch 118/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.4899 - mae: 10.4899\n",
            "Epoch 119/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.0222 - mae: 8.0222\n",
            "Epoch 120/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 38.2891 - mae: 38.2891\n",
            "Epoch 121/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.3758 - mae: 11.3758\n",
            "Epoch 122/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.5352 - mae: 25.5352\n",
            "Epoch 123/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 29.4759 - mae: 29.4759\n",
            "Epoch 124/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.9225 - mae: 16.9225\n",
            "Epoch 125/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.4263 - mae: 9.4263\n",
            "Epoch 126/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.5171 - mae: 9.5171\n",
            "Epoch 127/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.1941 - mae: 12.1941\n",
            "Epoch 128/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.1889 - mae: 15.1889\n",
            "Epoch 129/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.5992 - mae: 9.5992\n",
            "Epoch 130/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 20.5599 - mae: 20.5599\n",
            "Epoch 131/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.3035 - mae: 9.3035\n",
            "Epoch 132/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.6278 - mae: 16.6278\n",
            "Epoch 133/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.6853 - mae: 7.6853\n",
            "Epoch 134/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.9952 - mae: 18.9952\n",
            "Epoch 135/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.7069 - mae: 10.7069\n",
            "Epoch 136/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.6039 - mae: 18.6039\n",
            "Epoch 137/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 23.6261 - mae: 23.6261\n",
            "Epoch 138/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.3365 - mae: 9.3365\n",
            "Epoch 139/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.0501 - mae: 9.0501\n",
            "Epoch 140/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.0489 - mae: 17.0489\n",
            "Epoch 141/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.3375 - mae: 8.3375\n",
            "Epoch 142/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 34.1505 - mae: 34.1505\n",
            "Epoch 143/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.1952 - mae: 23.1952\n",
            "Epoch 144/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.4839 - mae: 10.4839\n",
            "Epoch 145/500\n",
            "2/2 [==============================] - 0s 11ms/step - loss: 25.8777 - mae: 25.8777\n",
            "Epoch 146/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.8760 - mae: 9.8760\n",
            "Epoch 147/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.0320 - mae: 15.0320\n",
            "Epoch 148/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.4757 - mae: 17.4757\n",
            "Epoch 149/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.7747 - mae: 8.7747\n",
            "Epoch 150/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.7444 - mae: 7.7444\n",
            "Epoch 151/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 19.8712 - mae: 19.8712\n",
            "Epoch 152/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2483 - mae: 10.2483\n",
            "Epoch 153/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 29.2291 - mae: 29.2291\n",
            "Epoch 154/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.6501 - mae: 10.6501\n",
            "Epoch 155/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.5399 - mae: 15.5399\n",
            "Epoch 156/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.2004 - mae: 17.2004\n",
            "Epoch 157/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 32.3490 - mae: 32.3490\n",
            "Epoch 158/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.5910 - mae: 10.5910\n",
            "Epoch 159/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.8647 - mae: 8.8647\n",
            "Epoch 160/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 21.7790 - mae: 21.7790\n",
            "Epoch 161/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.0679 - mae: 11.0679\n",
            "Epoch 162/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.3157 - mae: 21.3157\n",
            "Epoch 163/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 18.8027 - mae: 18.8027\n",
            "Epoch 164/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.6473 - mae: 12.6473\n",
            "Epoch 165/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 12.7484 - mae: 12.7484\n",
            "Epoch 166/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 18.9437 - mae: 18.9437\n",
            "Epoch 167/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.7248 - mae: 26.7248\n",
            "Epoch 168/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.9702 - mae: 9.9702\n",
            "Epoch 169/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 22.9748 - mae: 22.9748\n",
            "Epoch 170/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.1013 - mae: 10.1013\n",
            "Epoch 171/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.8808 - mae: 17.8808\n",
            "Epoch 172/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 29.2427 - mae: 29.2427\n",
            "Epoch 173/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.8589 - mae: 16.8589\n",
            "Epoch 174/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 11.1920 - mae: 11.1920\n",
            "Epoch 175/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 27.4835 - mae: 27.4835\n",
            "Epoch 176/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.4102 - mae: 8.4102\n",
            "Epoch 177/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.3743 - mae: 9.3743\n",
            "Epoch 178/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.4601 - mae: 18.4601\n",
            "Epoch 179/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.4669 - mae: 10.4669\n",
            "Epoch 180/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.9832 - mae: 7.9832\n",
            "Epoch 181/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.6517 - mae: 17.6517\n",
            "Epoch 182/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1520 - mae: 11.1520\n",
            "Epoch 183/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.3333 - mae: 12.3333\n",
            "Epoch 184/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 27.1868 - mae: 27.1868\n",
            "Epoch 185/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 7.5896 - mae: 7.5896\n",
            "Epoch 186/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.0144 - mae: 16.0144\n",
            "Epoch 187/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.5857 - mae: 8.5857\n",
            "Epoch 188/500\n",
            "2/2 [==============================] - 0s 13ms/step - loss: 28.6619 - mae: 28.6619\n",
            "Epoch 189/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.1954 - mae: 13.1954\n",
            "Epoch 190/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.3409 - mae: 18.3409\n",
            "Epoch 191/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.7749 - mae: 13.7749\n",
            "Epoch 192/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.7370 - mae: 13.7370\n",
            "Epoch 193/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 28.6125 - mae: 28.6125\n",
            "Epoch 194/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.0659 - mae: 7.0659\n",
            "Epoch 195/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.7995 - mae: 7.7995\n",
            "Epoch 196/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.0390 - mae: 26.0390\n",
            "Epoch 197/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.5882 - mae: 11.5882\n",
            "Epoch 198/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.9111 - mae: 18.9111\n",
            "Epoch 199/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.7067 - mae: 16.7067\n",
            "Epoch 200/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.3950 - mae: 12.3950\n",
            "Epoch 201/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.1196 - mae: 7.1196\n",
            "Epoch 202/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 22.9433 - mae: 22.9433\n",
            "Epoch 203/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.0050 - mae: 9.0050\n",
            "Epoch 204/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.8917 - mae: 18.8917\n",
            "Epoch 205/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.4111 - mae: 9.4111\n",
            "Epoch 206/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.4717 - mae: 10.4717\n",
            "Epoch 207/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.1289 - mae: 21.1289\n",
            "Epoch 208/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.5065 - mae: 16.5065\n",
            "Epoch 209/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.3890 - mae: 14.3890\n",
            "Epoch 210/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.3664 - mae: 17.3664\n",
            "Epoch 211/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2862 - mae: 10.2862\n",
            "Epoch 212/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.9583 - mae: 19.9583\n",
            "Epoch 213/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.1351 - mae: 15.1351\n",
            "Epoch 214/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.6546 - mae: 14.6546\n",
            "Epoch 215/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.4183 - mae: 23.4183\n",
            "Epoch 216/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.8802 - mae: 12.8802\n",
            "Epoch 217/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.0311 - mae: 12.0311\n",
            "Epoch 218/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.1103 - mae: 17.1103\n",
            "Epoch 219/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.5066 - mae: 9.5066\n",
            "Epoch 220/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.8734 - mae: 13.8734\n",
            "Epoch 221/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 32.2707 - mae: 32.2707\n",
            "Epoch 222/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.0752 - mae: 11.0752\n",
            "Epoch 223/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.6584 - mae: 8.6584\n",
            "Epoch 224/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.5846 - mae: 14.5846\n",
            "Epoch 225/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.5988 - mae: 16.5988\n",
            "Epoch 226/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.8258 - mae: 15.8258\n",
            "Epoch 227/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.0400 - mae: 16.0400\n",
            "Epoch 228/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.8244 - mae: 13.8244\n",
            "Epoch 229/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 17.9380 - mae: 17.9380\n",
            "Epoch 230/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.5456 - mae: 15.5456\n",
            "Epoch 231/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.0322 - mae: 21.0322\n",
            "Epoch 232/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.6663 - mae: 25.6663\n",
            "Epoch 233/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 16.6320 - mae: 16.6320\n",
            "Epoch 234/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.3969 - mae: 7.3969\n",
            "Epoch 235/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.2695 - mae: 17.2695\n",
            "Epoch 236/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.2682 - mae: 7.2682\n",
            "Epoch 237/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 9.3817 - mae: 9.3817\n",
            "Epoch 238/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.2131 - mae: 8.2131\n",
            "Epoch 239/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.2780 - mae: 17.2780\n",
            "Epoch 240/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.9976 - mae: 8.9976\n",
            "Epoch 241/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.3430 - mae: 13.3430\n",
            "Epoch 242/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 8.8958 - mae: 8.8958\n",
            "Epoch 243/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 19.0199 - mae: 19.0199\n",
            "Epoch 244/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 14.0193 - mae: 14.0193\n",
            "Epoch 245/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 14.6515 - mae: 14.6515\n",
            "Epoch 246/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.7884 - mae: 15.7884\n",
            "Epoch 247/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.6589 - mae: 17.6589\n",
            "Epoch 248/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 13.2180 - mae: 13.2180\n",
            "Epoch 249/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 14.5068 - mae: 14.5068\n",
            "Epoch 250/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.2124 - mae: 23.2124\n",
            "Epoch 251/500\n",
            "2/2 [==============================] - 0s 12ms/step - loss: 9.3577 - mae: 9.3577\n",
            "Epoch 252/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 36.7304 - mae: 36.7304\n",
            "Epoch 253/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.8899 - mae: 21.8899\n",
            "Epoch 254/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 7.3338 - mae: 7.3338\n",
            "Epoch 255/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 24.7528 - mae: 24.7528\n",
            "Epoch 256/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.4764 - mae: 12.4764\n",
            "Epoch 257/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.6291 - mae: 10.6291\n",
            "Epoch 258/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 14.2521 - mae: 14.2521\n",
            "Epoch 259/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.2956 - mae: 11.2956\n",
            "Epoch 260/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 31.6786 - mae: 31.6786\n",
            "Epoch 261/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.2297 - mae: 11.2297\n",
            "Epoch 262/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.0785 - mae: 10.0785\n",
            "Epoch 263/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.9801 - mae: 8.9801\n",
            "Epoch 264/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.5405 - mae: 21.5405\n",
            "Epoch 265/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.4419 - mae: 11.4419\n",
            "Epoch 266/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.2803 - mae: 13.2803\n",
            "Epoch 267/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 11.0817 - mae: 11.0817\n",
            "Epoch 268/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 19.1429 - mae: 19.1429\n",
            "Epoch 269/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 40.7511 - mae: 40.7511\n",
            "Epoch 270/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.9608 - mae: 12.9608\n",
            "Epoch 271/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 14.7635 - mae: 14.7635\n",
            "Epoch 272/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 28.5035 - mae: 28.5035\n",
            "Epoch 273/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.3921 - mae: 7.3921\n",
            "Epoch 274/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 6.3688 - mae: 6.3688\n",
            "Epoch 275/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 36.9352 - mae: 36.9352\n",
            "Epoch 276/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.3069 - mae: 8.3069\n",
            "Epoch 277/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 27.7475 - mae: 27.7475\n",
            "Epoch 278/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.6791 - mae: 10.6791\n",
            "Epoch 279/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.1088 - mae: 16.1088\n",
            "Epoch 280/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.2284 - mae: 21.2284\n",
            "Epoch 281/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.8102 - mae: 23.8102\n",
            "Epoch 282/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.2811 - mae: 8.2811\n",
            "Epoch 283/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.4585 - mae: 8.4585\n",
            "Epoch 284/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.6426 - mae: 26.6426\n",
            "Epoch 285/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 14.2433 - mae: 14.2433\n",
            "Epoch 286/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 5.2728 - mae: 5.2728\n",
            "Epoch 287/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 20.8139 - mae: 20.8139\n",
            "Epoch 288/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 27.6293 - mae: 27.6293\n",
            "Epoch 289/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.4338 - mae: 10.4338\n",
            "Epoch 290/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.3062 - mae: 16.3062\n",
            "Epoch 291/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 16.4931 - mae: 16.4931\n",
            "Epoch 292/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 7.4355 - mae: 7.4355\n",
            "Epoch 293/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 16.5476 - mae: 16.5476\n",
            "Epoch 294/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.3307 - mae: 25.3307\n",
            "Epoch 295/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 14.5898 - mae: 14.5898\n",
            "Epoch 296/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 4.6765 - mae: 4.6765\n",
            "Epoch 297/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 7.2920 - mae: 7.2920\n",
            "Epoch 298/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 19.6237 - mae: 19.6237\n",
            "Epoch 299/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 6.6266 - mae: 6.6266\n",
            "Epoch 300/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 22.0718 - mae: 22.0718\n",
            "Epoch 301/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.1468 - mae: 9.1468\n",
            "Epoch 302/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 11.2034 - mae: 11.2034\n",
            "Epoch 303/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.3481 - mae: 9.3481\n",
            "Epoch 304/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 23.7216 - mae: 23.7216\n",
            "Epoch 305/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 7.9304 - mae: 7.9304\n",
            "Epoch 306/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 23.7728 - mae: 23.7728\n",
            "Epoch 307/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 5.8877 - mae: 5.8877\n",
            "Epoch 308/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.3187 - mae: 21.3187\n",
            "Epoch 309/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 18.4225 - mae: 18.4225\n",
            "Epoch 310/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 4.5024 - mae: 4.5024\n",
            "Epoch 311/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 6.5131 - mae: 6.5131\n",
            "Epoch 312/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 35.4640 - mae: 35.4640\n",
            "Epoch 313/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 28.9415 - mae: 28.9415\n",
            "Epoch 314/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.1924 - mae: 11.1924\n",
            "Epoch 315/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 23.5484 - mae: 23.5484\n",
            "Epoch 316/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 14.4326 - mae: 14.4326\n",
            "Epoch 317/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.9830 - mae: 19.9830\n",
            "Epoch 318/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.0031 - mae: 8.0031\n",
            "Epoch 319/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.1172 - mae: 18.1172\n",
            "Epoch 320/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.6460 - mae: 10.6460\n",
            "Epoch 321/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 7.0298 - mae: 7.0298\n",
            "Epoch 322/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.6721 - mae: 8.6721\n",
            "Epoch 323/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.3355 - mae: 18.3355\n",
            "Epoch 324/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.3087 - mae: 6.3087\n",
            "Epoch 325/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 14.6172 - mae: 14.6172\n",
            "Epoch 326/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.9910 - mae: 6.9910\n",
            "Epoch 327/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 17.6309 - mae: 17.6309\n",
            "Epoch 328/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.3723 - mae: 14.3723\n",
            "Epoch 329/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.6836 - mae: 17.6836\n",
            "Epoch 330/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 6.7824 - mae: 6.7824\n",
            "Epoch 331/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.7478 - mae: 19.7478\n",
            "Epoch 332/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.5525 - mae: 10.5525\n",
            "Epoch 333/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.3461 - mae: 16.3461\n",
            "Epoch 334/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.7157 - mae: 9.7157\n",
            "Epoch 335/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.0556 - mae: 13.0556\n",
            "Epoch 336/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 32.4919 - mae: 32.4919\n",
            "Epoch 337/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.0363 - mae: 11.0363\n",
            "Epoch 338/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 19.9482 - mae: 19.9482\n",
            "Epoch 339/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 34.3314 - mae: 34.3314\n",
            "Epoch 340/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.2821 - mae: 9.2821\n",
            "Epoch 341/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.2984 - mae: 17.2984\n",
            "Epoch 342/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.9126 - mae: 14.9126\n",
            "Epoch 343/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.3180 - mae: 10.3180\n",
            "Epoch 344/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 9.9363 - mae: 9.9363\n",
            "Epoch 345/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 30.9003 - mae: 30.9003\n",
            "Epoch 346/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 10.6268 - mae: 10.6268\n",
            "Epoch 347/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 25.5377 - mae: 25.5377\n",
            "Epoch 348/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 13.3503 - mae: 13.3503\n",
            "Epoch 349/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 13.0096 - mae: 13.0096\n",
            "Epoch 350/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 15.3903 - mae: 15.3903\n",
            "Epoch 351/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 32.8607 - mae: 32.8607\n",
            "Epoch 352/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 14.0615 - mae: 14.0615\n",
            "Epoch 353/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 17.7498 - mae: 17.7498\n",
            "Epoch 354/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 11.3295 - mae: 11.3295\n",
            "Epoch 355/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.7423 - mae: 26.7423\n",
            "Epoch 356/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.1897 - mae: 10.1897\n",
            "Epoch 357/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 14.7709 - mae: 14.7709\n",
            "Epoch 358/500\n",
            "2/2 [==============================] - 0s 10ms/step - loss: 14.6563 - mae: 14.6563\n",
            "Epoch 359/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 12.3279 - mae: 12.3279\n",
            "Epoch 360/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 20.3287 - mae: 20.3287\n",
            "Epoch 361/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 10.9302 - mae: 10.9302\n",
            "Epoch 362/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 6.8204 - mae: 6.8204\n",
            "Epoch 363/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 23.8634 - mae: 23.8634\n",
            "Epoch 364/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 29.5817 - mae: 29.5817\n",
            "Epoch 365/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.3044 - mae: 8.3044\n",
            "Epoch 366/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 6.1047 - mae: 6.1047\n",
            "Epoch 367/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 34.6861 - mae: 34.6861\n",
            "Epoch 368/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.3729 - mae: 7.3729\n",
            "Epoch 369/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 8.7267 - mae: 8.7267\n",
            "Epoch 370/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 14.5044 - mae: 14.5044\n",
            "Epoch 371/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.1815 - mae: 6.1815\n",
            "Epoch 372/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.0350 - mae: 6.0350\n",
            "Epoch 373/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.7663 - mae: 26.7663\n",
            "Epoch 374/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.2791 - mae: 8.2791\n",
            "Epoch 375/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.2017 - mae: 9.2017\n",
            "Epoch 376/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.2094 - mae: 6.2094\n",
            "Epoch 377/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.1693 - mae: 10.1693\n",
            "Epoch 378/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.0392 - mae: 15.0392\n",
            "Epoch 379/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.6392 - mae: 26.6392\n",
            "Epoch 380/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.0223 - mae: 17.0223\n",
            "Epoch 381/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.0460 - mae: 11.0460\n",
            "Epoch 382/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.0207 - mae: 16.0207\n",
            "Epoch 383/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.6068 - mae: 21.6068\n",
            "Epoch 384/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.3309 - mae: 6.3309\n",
            "Epoch 385/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.0137 - mae: 10.0137\n",
            "Epoch 386/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.4980 - mae: 19.4980\n",
            "Epoch 387/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.4762 - mae: 25.4762\n",
            "Epoch 388/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.3175 - mae: 9.3175\n",
            "Epoch 389/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 5.4576 - mae: 5.4576\n",
            "Epoch 390/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.0610 - mae: 21.0610\n",
            "Epoch 391/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.2529 - mae: 6.2529\n",
            "Epoch 392/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 15.5259 - mae: 15.5259\n",
            "Epoch 393/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 6.3667 - mae: 6.3667\n",
            "Epoch 394/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.5809 - mae: 14.5809\n",
            "Epoch 395/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 24.6390 - mae: 24.6390\n",
            "Epoch 396/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 20.2253 - mae: 20.2253\n",
            "Epoch 397/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.9796 - mae: 10.9796\n",
            "Epoch 398/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.2392 - mae: 19.2392\n",
            "Epoch 399/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.9395 - mae: 25.9395\n",
            "Epoch 400/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.5928 - mae: 15.5928\n",
            "Epoch 401/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.8100 - mae: 14.8100\n",
            "Epoch 402/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 24.0552 - mae: 24.0552\n",
            "Epoch 403/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.9060 - mae: 16.9060\n",
            "Epoch 404/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.7342 - mae: 9.7342\n",
            "Epoch 405/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 6.8535 - mae: 6.8535\n",
            "Epoch 406/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 20.2213 - mae: 20.2213\n",
            "Epoch 407/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.6368 - mae: 9.6368\n",
            "Epoch 408/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 21.2041 - mae: 21.2041\n",
            "Epoch 409/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 29.9468 - mae: 29.9468\n",
            "Epoch 410/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.9006 - mae: 9.9006\n",
            "Epoch 411/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.7599 - mae: 14.7599\n",
            "Epoch 412/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.5540 - mae: 21.5540\n",
            "Epoch 413/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 13.1184 - mae: 13.1184\n",
            "Epoch 414/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.2674 - mae: 8.2674\n",
            "Epoch 415/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.6914 - mae: 11.6914\n",
            "Epoch 416/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.6168 - mae: 25.6168\n",
            "Epoch 417/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.7520 - mae: 15.7520\n",
            "Epoch 418/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.5737 - mae: 12.5737\n",
            "Epoch 419/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.7181 - mae: 15.7181\n",
            "Epoch 420/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 24.4217 - mae: 24.4217\n",
            "Epoch 421/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.2874 - mae: 18.2874\n",
            "Epoch 422/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 8.6321 - mae: 8.6321\n",
            "Epoch 423/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 24.6254 - mae: 24.6254\n",
            "Epoch 424/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.9054 - mae: 16.9054\n",
            "Epoch 425/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.3270 - mae: 7.3270\n",
            "Epoch 426/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.0987 - mae: 21.0987\n",
            "Epoch 427/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.5107 - mae: 6.5107\n",
            "Epoch 428/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.5266 - mae: 13.5266\n",
            "Epoch 429/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.5035 - mae: 11.5035\n",
            "Epoch 430/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.2747 - mae: 10.2747\n",
            "Epoch 431/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 11.5488 - mae: 11.5488\n",
            "Epoch 432/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.9795 - mae: 9.9795\n",
            "Epoch 433/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 3.8529 - mae: 3.8529\n",
            "Epoch 434/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 28.3140 - mae: 28.3140\n",
            "Epoch 435/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 5.3662 - mae: 5.3662\n",
            "Epoch 436/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 41.4591 - mae: 41.4591\n",
            "Epoch 437/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 5.1669 - mae: 5.1669\n",
            "Epoch 438/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.8718 - mae: 13.8718\n",
            "Epoch 439/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 31.8642 - mae: 31.8642\n",
            "Epoch 440/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.2518 - mae: 12.2518\n",
            "Epoch 441/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.6274 - mae: 15.6274\n",
            "Epoch 442/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.4050 - mae: 23.4050\n",
            "Epoch 443/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 20.9385 - mae: 20.9385\n",
            "Epoch 444/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 8.6951 - mae: 8.6951\n",
            "Epoch 445/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.0563 - mae: 14.0563\n",
            "Epoch 446/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.7490 - mae: 16.7490\n",
            "Epoch 447/500\n",
            "2/2 [==============================] - 0s 8ms/step - loss: 6.7217 - mae: 6.7217\n",
            "Epoch 448/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.7014 - mae: 6.7014\n",
            "Epoch 449/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 15.5920 - mae: 15.5920\n",
            "Epoch 450/500\n",
            "2/2 [==============================] - 0s 9ms/step - loss: 16.5446 - mae: 16.5446\n",
            "Epoch 451/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.1855 - mae: 14.1855\n",
            "Epoch 452/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 30.4396 - mae: 30.4396\n",
            "Epoch 453/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 5.1371 - mae: 5.1371\n",
            "Epoch 454/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 30.0351 - mae: 30.0351\n",
            "Epoch 455/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 4.3045 - mae: 4.3045\n",
            "Epoch 456/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.5971 - mae: 14.5971\n",
            "Epoch 457/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.7630 - mae: 17.7630\n",
            "Epoch 458/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 14.0252 - mae: 14.0252\n",
            "Epoch 459/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 25.9720 - mae: 25.9720\n",
            "Epoch 460/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.9272 - mae: 14.9272\n",
            "Epoch 461/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.1223 - mae: 12.1223\n",
            "Epoch 462/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.1854 - mae: 13.1854\n",
            "Epoch 463/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 29.2943 - mae: 29.2943\n",
            "Epoch 464/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.9944 - mae: 6.9944\n",
            "Epoch 465/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.3755 - mae: 14.3755\n",
            "Epoch 466/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.1333 - mae: 10.1333\n",
            "Epoch 467/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.5347 - mae: 21.5347\n",
            "Epoch 468/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 23.8125 - mae: 23.8125\n",
            "Epoch 469/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 21.2407 - mae: 21.2407\n",
            "Epoch 470/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 9.6295 - mae: 9.6295\n",
            "Epoch 471/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 16.0116 - mae: 16.0116\n",
            "Epoch 472/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.9159 - mae: 14.9159\n",
            "Epoch 473/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.2643 - mae: 18.2643\n",
            "Epoch 474/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 42.0546 - mae: 42.0546\n",
            "Epoch 475/500\n",
            "2/2 [==============================] - 0s 5ms/step - loss: 17.8844 - mae: 17.8844\n",
            "Epoch 476/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 13.2006 - mae: 13.2006\n",
            "Epoch 477/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 29.2799 - mae: 29.2799\n",
            "Epoch 478/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 5.7226 - mae: 5.7226\n",
            "Epoch 479/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 7.0764 - mae: 7.0764\n",
            "Epoch 480/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.0709 - mae: 19.0709\n",
            "Epoch 481/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.4880 - mae: 13.4880\n",
            "Epoch 482/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.3709 - mae: 6.3709\n",
            "Epoch 483/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.4145 - mae: 12.4145\n",
            "Epoch 484/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 13.1331 - mae: 13.1331\n",
            "Epoch 485/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.3914 - mae: 10.3914\n",
            "Epoch 486/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 17.8567 - mae: 17.8567\n",
            "Epoch 487/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 10.8278 - mae: 10.8278\n",
            "Epoch 488/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 26.9459 - mae: 26.9459\n",
            "Epoch 489/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 5.3887 - mae: 5.3887\n",
            "Epoch 490/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.0897 - mae: 6.0897\n",
            "Epoch 491/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 19.4001 - mae: 19.4001\n",
            "Epoch 492/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.7492 - mae: 6.7492\n",
            "Epoch 493/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 18.6591 - mae: 18.6591\n",
            "Epoch 494/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 19.0839 - mae: 19.0839\n",
            "Epoch 495/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 5.7180 - mae: 5.7180\n",
            "Epoch 496/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 5.9452 - mae: 5.9452\n",
            "Epoch 497/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 12.6550 - mae: 12.6550\n",
            "Epoch 498/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 6.3469 - mae: 6.3469\n",
            "Epoch 499/500\n",
            "2/2 [==============================] - 0s 7ms/step - loss: 16.0640 - mae: 16.0640\n",
            "Epoch 500/500\n",
            "2/2 [==============================] - 0s 6ms/step - loss: 14.2977 - mae: 14.2977\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59bf8522c0>"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_preds_3 = model_3.predict(X_test)\n",
        "plot_predictions(prediction=y_preds_3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 616
        },
        "id": "iVZaiaCSkLOx",
        "outputId": "32dc4e59-10f2-4396-fad9-b8299d061758"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 77ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mae_3 = tf.keras.losses.mae(y_test, tf.squeeze(y_preds_3))\n",
        "mse_3 = tf.keras.losses.mse(y_test, tf.squeeze(y_preds_3))\n",
        "\n",
        "mae_3, mse_3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WLzdWs5ikYNJ",
        "outputId": "b62131d4-f592-4276-c040-507ef575c4a6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(<tf.Tensor: shape=(), dtype=float32, numpy=67.59695>,\n",
              " <tf.Tensor: shape=(), dtype=float32, numpy=4653.35>)"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#comparing the results of our experiments"
      ],
      "metadata": {
        "id": "t9J0m6xNkvJK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#let's compare our model's results using a pandas DF\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "model_results = [[\"model_1\",mae_1.numpy(),mse_1.numpy()],\n",
        "                 [\"model_2\",mae_2.numpy(),mse_2.numpy()],\n",
        "                 [\"model_3\",mae_3.numpy(),mse_3.numpy()]]\n",
        "\n",
        "all_results = pd.DataFrame(model_results, columns=[\"model\", \"mae\", \"mse\"])\n",
        "all_results"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "Kr6i-cGElbOA",
        "outputId": "3960436b-78c3-462a-e724-eb3399772e2b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     model        mae          mse\n",
              "0  model_1  14.875166   222.100067\n",
              "1  model_2   3.054552    12.122190\n",
              "2  model_3  67.596947  4653.350098"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-098a6c71-2306-4eac-b0e2-758a08a3b13a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>model</th>\n",
              "      <th>mae</th>\n",
              "      <th>mse</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>model_1</td>\n",
              "      <td>14.875166</td>\n",
              "      <td>222.100067</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>model_2</td>\n",
              "      <td>3.054552</td>\n",
              "      <td>12.122190</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>model_3</td>\n",
              "      <td>67.596947</td>\n",
              "      <td>4653.350098</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-098a6c71-2306-4eac-b0e2-758a08a3b13a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-098a6c71-2306-4eac-b0e2-758a08a3b13a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-098a6c71-2306-4eac-b0e2-758a08a3b13a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "looks like model_1 performed best"
      ],
      "metadata": {
        "id": "x1yg4w9cmXVu"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Resource: TensorBoard - a component of the TF lib to help track modelling exp .\n",
        "Weights and Biases -"
      ],
      "metadata": {
        "id": "wf_EDKHUnUOl"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#saving our models\n",
        "\n",
        "we can use it in any other environments\n",
        "\n",
        "1. SavedModel format\n",
        "2. the HDF5 format"
      ],
      "metadata": {
        "id": "qY1ULxMUn0f2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model_1.save(\"best_model\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bX1TLLjPoQyM",
        "outputId": "f7943a25-998f-495a-aff9-08f1b2f49474"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:absl:Found untraced functions such as _update_step_xla while saving (showing 1 of 1). These functions will not be directly callable after loading.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model_1.save(\"model_1_HDF5.h5\")"
      ],
      "metadata": {
        "id": "-rQ59VdNolkt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#loading ina asaved model"
      ],
      "metadata": {
        "id": "eq9KMNzvpFjs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_savedmodel = tf.keras.models.load_model(\"best_model\")\n",
        "loaded_savedmodel.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZDRKrYD-mfCe",
        "outputId": "097fd08a-18fa-48dc-ff5e-e15c03f7d121"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_7\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense_9 (Dense)             (None, 1)                 2         \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 2\n",
            "Trainable params: 2\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#compare model_1 pred with saved model pred\n",
        "\n",
        "model_1_pred = model_1.predict(X_test)\n",
        "loaded_savedmodel_pred = loaded_savedmodel.predict(X_test)\n",
        "model_1_pred == loaded_savedmodel_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6iH_xNiSmvFo",
        "outputId": "24592629-bddd-4cc6-fafa-0b9a21249c86"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 31ms/step\n",
            "1/1 [==============================] - 0s 65ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True]])"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from keras.api._v2.keras.losses import mae\n",
        "mae(y_test,model_1_pred) == mae(y_test,loaded_savedmodel_pred)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ph3z_kr2neVQ",
        "outputId": "c0584384-21ba-4dcf-9bec-24888e5e8d6c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tf.Tensor: shape=(10,), dtype=bool, numpy=\n",
              "array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n",
              "        True])>"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#load in a model using h5  format\n",
        "loaded_h5 = tf.keras.models.load_model(\"model_1_HDF5.h5\")\n",
        "loaded_h5"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IU0DCEplobyh",
        "outputId": "79fc6951-59b0-41ad-ef6f-903a2a3ddeba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.engine.sequential.Sequential at 0x7f59bfb95cf0>"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "loaded_h5_pred = loaded_h5.predict(X_test)\n",
        "\n",
        "model_1_pred==loaded_h5_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LOCoRaGHouOH",
        "outputId": "4c257dfa-e541-4563-c6c8-2ec2da001a91"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 77ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True],\n",
              "       [ True]])"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# A larger example"
      ],
      "metadata": {
        "id": "-XUZLRfxpT2X"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "import pandas as pd\n",
        "import matplotlib as plt"
      ],
      "metadata": {
        "id": "U6O6gRJSr5Rw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "insurance = pd.read_csv(\"https://gist.githubusercontent.com/meperezcuello/82a9f1c1c473d6585e750ad2e3c05a41/raw/d42d226d0dd64e7f5395a0eec1b9190a10edbc03/Medical_Cost.csv\")"
      ],
      "metadata": {
        "id": "B5UV_1G8sj8V"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "insurance"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "GX-e4EC1srKz",
        "outputId": "6d187b5b-0aa0-473c-dd47-7fa90e8b7acf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      age     sex     bmi  children smoker     region      charges\n",
              "0      19  female  27.900         0    yes  southwest  16884.92400\n",
              "1      18    male  33.770         1     no  southeast   1725.55230\n",
              "2      28    male  33.000         3     no  southeast   4449.46200\n",
              "3      33    male  22.705         0     no  northwest  21984.47061\n",
              "4      32    male  28.880         0     no  northwest   3866.85520\n",
              "...   ...     ...     ...       ...    ...        ...          ...\n",
              "1333   50    male  30.970         3     no  northwest  10600.54830\n",
              "1334   18  female  31.920         0     no  northeast   2205.98080\n",
              "1335   18  female  36.850         0     no  southeast   1629.83350\n",
              "1336   21  female  25.800         0     no  southwest   2007.94500\n",
              "1337   61  female  29.070         0    yes  northwest  29141.36030\n",
              "\n",
              "[1338 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ebf60a7a-9a88-4ae3-acc4-706696ea27e5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>bmi</th>\n",
              "      <th>children</th>\n",
              "      <th>smoker</th>\n",
              "      <th>region</th>\n",
              "      <th>charges</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>19</td>\n",
              "      <td>female</td>\n",
              "      <td>27.900</td>\n",
              "      <td>0</td>\n",
              "      <td>yes</td>\n",
              "      <td>southwest</td>\n",
              "      <td>16884.92400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>18</td>\n",
              "      <td>male</td>\n",
              "      <td>33.770</td>\n",
              "      <td>1</td>\n",
              "      <td>no</td>\n",
              "      <td>southeast</td>\n",
              "      <td>1725.55230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>28</td>\n",
              "      <td>male</td>\n",
              "      <td>33.000</td>\n",
              "      <td>3</td>\n",
              "      <td>no</td>\n",
              "      <td>southeast</td>\n",
              "      <td>4449.46200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>male</td>\n",
              "      <td>22.705</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>northwest</td>\n",
              "      <td>21984.47061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>32</td>\n",
              "      <td>male</td>\n",
              "      <td>28.880</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>northwest</td>\n",
              "      <td>3866.85520</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1333</th>\n",
              "      <td>50</td>\n",
              "      <td>male</td>\n",
              "      <td>30.970</td>\n",
              "      <td>3</td>\n",
              "      <td>no</td>\n",
              "      <td>northwest</td>\n",
              "      <td>10600.54830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1334</th>\n",
              "      <td>18</td>\n",
              "      <td>female</td>\n",
              "      <td>31.920</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>northeast</td>\n",
              "      <td>2205.98080</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1335</th>\n",
              "      <td>18</td>\n",
              "      <td>female</td>\n",
              "      <td>36.850</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>southeast</td>\n",
              "      <td>1629.83350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1336</th>\n",
              "      <td>21</td>\n",
              "      <td>female</td>\n",
              "      <td>25.800</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>southwest</td>\n",
              "      <td>2007.94500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1337</th>\n",
              "      <td>61</td>\n",
              "      <td>female</td>\n",
              "      <td>29.070</td>\n",
              "      <td>0</td>\n",
              "      <td>yes</td>\n",
              "      <td>northwest</td>\n",
              "      <td>29141.36030</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1338 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ebf60a7a-9a88-4ae3-acc4-706696ea27e5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ebf60a7a-9a88-4ae3-acc4-706696ea27e5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ebf60a7a-9a88-4ae3-acc4-706696ea27e5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "insurance[\"sex\"], insurance['age']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-QJKhhEXsxES",
        "outputId": "0bfd4d20-119d-44fd-cd73-c370c2dc418e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0       female\n",
              " 1         male\n",
              " 2         male\n",
              " 3         male\n",
              " 4         male\n",
              "          ...  \n",
              " 1333      male\n",
              " 1334    female\n",
              " 1335    female\n",
              " 1336    female\n",
              " 1337    female\n",
              " Name: sex, Length: 1338, dtype: object,\n",
              " 0       19\n",
              " 1       18\n",
              " 2       28\n",
              " 3       33\n",
              " 4       32\n",
              "         ..\n",
              " 1333    50\n",
              " 1334    18\n",
              " 1335    18\n",
              " 1336    21\n",
              " 1337    61\n",
              " Name: age, Length: 1338, dtype: int64)"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#one hot encoding\n",
        "insurance_onehot = pd.get_dummies(insurance)\n",
        "insurance_onehot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "UFS6ZKSztEkJ",
        "outputId": "411e2f12-23dc-4b5e-c299-792f6f288567"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      age     bmi  children      charges  sex_female  sex_male  smoker_no  \\\n",
              "0      19  27.900         0  16884.92400           1         0          0   \n",
              "1      18  33.770         1   1725.55230           0         1          1   \n",
              "2      28  33.000         3   4449.46200           0         1          1   \n",
              "3      33  22.705         0  21984.47061           0         1          1   \n",
              "4      32  28.880         0   3866.85520           0         1          1   \n",
              "...   ...     ...       ...          ...         ...       ...        ...   \n",
              "1333   50  30.970         3  10600.54830           0         1          1   \n",
              "1334   18  31.920         0   2205.98080           1         0          1   \n",
              "1335   18  36.850         0   1629.83350           1         0          1   \n",
              "1336   21  25.800         0   2007.94500           1         0          1   \n",
              "1337   61  29.070         0  29141.36030           1         0          0   \n",
              "\n",
              "      smoker_yes  region_northeast  region_northwest  region_southeast  \\\n",
              "0              1                 0                 0                 0   \n",
              "1              0                 0                 0                 1   \n",
              "2              0                 0                 0                 1   \n",
              "3              0                 0                 1                 0   \n",
              "4              0                 0                 1                 0   \n",
              "...          ...               ...               ...               ...   \n",
              "1333           0                 0                 1                 0   \n",
              "1334           0                 1                 0                 0   \n",
              "1335           0                 0                 0                 1   \n",
              "1336           0                 0                 0                 0   \n",
              "1337           1                 0                 1                 0   \n",
              "\n",
              "      region_southwest  \n",
              "0                    1  \n",
              "1                    0  \n",
              "2                    0  \n",
              "3                    0  \n",
              "4                    0  \n",
              "...                ...  \n",
              "1333                 0  \n",
              "1334                 0  \n",
              "1335                 0  \n",
              "1336                 1  \n",
              "1337                 0  \n",
              "\n",
              "[1338 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-54fc0df5-1bc5-4dd4-9fb6-e43564993d09\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>bmi</th>\n",
              "      <th>children</th>\n",
              "      <th>charges</th>\n",
              "      <th>sex_female</th>\n",
              "      <th>sex_male</th>\n",
              "      <th>smoker_no</th>\n",
              "      <th>smoker_yes</th>\n",
              "      <th>region_northeast</th>\n",
              "      <th>region_northwest</th>\n",
              "      <th>region_southeast</th>\n",
              "      <th>region_southwest</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>19</td>\n",
              "      <td>27.900</td>\n",
              "      <td>0</td>\n",
              "      <td>16884.92400</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>18</td>\n",
              "      <td>33.770</td>\n",
              "      <td>1</td>\n",
              "      <td>1725.55230</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>28</td>\n",
              "      <td>33.000</td>\n",
              "      <td>3</td>\n",
              "      <td>4449.46200</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>22.705</td>\n",
              "      <td>0</td>\n",
              "      <td>21984.47061</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>32</td>\n",
              "      <td>28.880</td>\n",
              "      <td>0</td>\n",
              "      <td>3866.85520</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1333</th>\n",
              "      <td>50</td>\n",
              "      <td>30.970</td>\n",
              "      <td>3</td>\n",
              "      <td>10600.54830</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1334</th>\n",
              "      <td>18</td>\n",
              "      <td>31.920</td>\n",
              "      <td>0</td>\n",
              "      <td>2205.98080</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1335</th>\n",
              "      <td>18</td>\n",
              "      <td>36.850</td>\n",
              "      <td>0</td>\n",
              "      <td>1629.83350</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1336</th>\n",
              "      <td>21</td>\n",
              "      <td>25.800</td>\n",
              "      <td>0</td>\n",
              "      <td>2007.94500</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1337</th>\n",
              "      <td>61</td>\n",
              "      <td>29.070</td>\n",
              "      <td>0</td>\n",
              "      <td>29141.36030</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1338 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54fc0df5-1bc5-4dd4-9fb6-e43564993d09')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-54fc0df5-1bc5-4dd4-9fb6-e43564993d09 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-54fc0df5-1bc5-4dd4-9fb6-e43564993d09');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#create X and y values\n",
        "\n",
        "X = insurance_onehot.drop(\"charges\", axis=1)\n",
        "y = insurance_onehot['charges']"
      ],
      "metadata": {
        "id": "b6itqpxxt9Ny"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X.head(), y.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aF2G2ZxDuuwu",
        "outputId": "e667e518-7b77-43b7-9557-c508de24337b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(   age     bmi  children  sex_female  sex_male  smoker_no  smoker_yes  \\\n",
              " 0   19  27.900         0           1         0          0           1   \n",
              " 1   18  33.770         1           0         1          1           0   \n",
              " 2   28  33.000         3           0         1          1           0   \n",
              " 3   33  22.705         0           0         1          1           0   \n",
              " 4   32  28.880         0           0         1          1           0   \n",
              " \n",
              "    region_northeast  region_northwest  region_southeast  region_southwest  \n",
              " 0                 0                 0                 0                 1  \n",
              " 1                 0                 0                 1                 0  \n",
              " 2                 0                 0                 1                 0  \n",
              " 3                 0                 1                 0                 0  \n",
              " 4                 0                 1                 0                 0  ,\n",
              " 0    16884.92400\n",
              " 1     1725.55230\n",
              " 2     4449.46200\n",
              " 3    21984.47061\n",
              " 4     3866.85520\n",
              " Name: charges, dtype: float64)"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state=42)"
      ],
      "metadata": {
        "id": "SVIq_qKluyX_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(X),len(X_test),len(X_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SF6HYRvwvdsM",
        "outputId": "ac47f98f-618f-413a-e921-90bc53237d5d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1338, 268, 1070)"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#build model\n",
        "tf.random.set_seed(42)\n",
        "ins_model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(10),\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "ins_model.compile(loss=tf.keras.losses.mae,\n",
        "                  optimizer=tf.keras.optimizers.SGD(),\n",
        "                  metrics=\"mae\")\n",
        "\n",
        "ins_model.fit(X_train,y_train, epochs=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8Dq7DdI-vmNp",
        "outputId": "cff65432-3808-4376-ec8b-07afc14e0eac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "34/34 [==============================] - 1s 3ms/step - loss: 8707.4209 - mae: 8707.4209\n",
            "Epoch 2/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 7882.6401 - mae: 7882.6401\n",
            "Epoch 3/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7577.6328 - mae: 7577.6328\n",
            "Epoch 4/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7607.8608 - mae: 7607.8608\n",
            "Epoch 5/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7694.6553 - mae: 7694.6553\n",
            "Epoch 6/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7614.1152 - mae: 7614.1152\n",
            "Epoch 7/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7585.6641 - mae: 7585.6641\n",
            "Epoch 8/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7814.8677 - mae: 7814.8677\n",
            "Epoch 9/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7619.1616 - mae: 7619.1616\n",
            "Epoch 10/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7759.5967 - mae: 7759.5967\n",
            "Epoch 11/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7625.2856 - mae: 7625.2856\n",
            "Epoch 12/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7657.0972 - mae: 7657.0972\n",
            "Epoch 13/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7760.5264 - mae: 7760.5264\n",
            "Epoch 14/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7597.3623 - mae: 7597.3623\n",
            "Epoch 15/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7488.1890 - mae: 7488.1890\n",
            "Epoch 16/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7774.1860 - mae: 7774.1860\n",
            "Epoch 17/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7455.5386 - mae: 7455.5386\n",
            "Epoch 18/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7800.7852 - mae: 7800.7852\n",
            "Epoch 19/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7731.6157 - mae: 7731.6157\n",
            "Epoch 20/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7942.5479 - mae: 7942.5479\n",
            "Epoch 21/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7570.2500 - mae: 7570.2500\n",
            "Epoch 22/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7783.4038 - mae: 7783.4038\n",
            "Epoch 23/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7654.6680 - mae: 7654.6680\n",
            "Epoch 24/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7555.4995 - mae: 7555.4995\n",
            "Epoch 25/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7813.1631 - mae: 7813.1631\n",
            "Epoch 26/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7726.0444 - mae: 7726.0444\n",
            "Epoch 27/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 7687.3091 - mae: 7687.3091\n",
            "Epoch 28/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7347.6597 - mae: 7347.6597\n",
            "Epoch 29/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7709.5493 - mae: 7709.5493\n",
            "Epoch 30/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7528.7446 - mae: 7528.7446\n",
            "Epoch 31/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7472.7432 - mae: 7472.7432\n",
            "Epoch 32/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7480.8740 - mae: 7480.8740\n",
            "Epoch 33/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7365.6235 - mae: 7365.6235\n",
            "Epoch 34/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7532.8115 - mae: 7532.8115\n",
            "Epoch 35/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7580.5566 - mae: 7580.5566\n",
            "Epoch 36/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7565.9438 - mae: 7565.9438\n",
            "Epoch 37/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7610.8872 - mae: 7610.8872\n",
            "Epoch 38/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7583.1562 - mae: 7583.1562\n",
            "Epoch 39/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7489.5171 - mae: 7489.5171\n",
            "Epoch 40/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7318.2339 - mae: 7318.2339\n",
            "Epoch 41/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7602.4111 - mae: 7602.4111\n",
            "Epoch 42/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7372.5518 - mae: 7372.5518\n",
            "Epoch 43/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7711.0317 - mae: 7711.0317\n",
            "Epoch 44/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7440.5854 - mae: 7440.5854\n",
            "Epoch 45/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7402.0742 - mae: 7402.0742\n",
            "Epoch 46/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7409.7993 - mae: 7409.7993\n",
            "Epoch 47/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7353.9844 - mae: 7353.9844\n",
            "Epoch 48/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7568.0508 - mae: 7568.0508\n",
            "Epoch 49/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7533.9404 - mae: 7533.9404\n",
            "Epoch 50/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7507.4312 - mae: 7507.4312\n",
            "Epoch 51/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7308.3979 - mae: 7308.3979\n",
            "Epoch 52/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7260.0024 - mae: 7260.0024\n",
            "Epoch 53/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7569.7642 - mae: 7569.7642\n",
            "Epoch 54/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7212.9512 - mae: 7212.9512\n",
            "Epoch 55/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7105.7812 - mae: 7105.7812\n",
            "Epoch 56/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7478.2607 - mae: 7478.2607\n",
            "Epoch 57/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7360.2422 - mae: 7360.2422\n",
            "Epoch 58/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7601.3867 - mae: 7601.3867\n",
            "Epoch 59/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7502.1929 - mae: 7502.1929\n",
            "Epoch 60/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7354.9316 - mae: 7354.9316\n",
            "Epoch 61/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7562.5991 - mae: 7562.5991\n",
            "Epoch 62/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7405.8652 - mae: 7405.8652\n",
            "Epoch 63/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7368.7969 - mae: 7368.7969\n",
            "Epoch 64/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7223.2720 - mae: 7223.2720\n",
            "Epoch 65/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7495.9932 - mae: 7495.9932\n",
            "Epoch 66/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7232.9839 - mae: 7232.9839\n",
            "Epoch 67/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7358.9360 - mae: 7358.9360\n",
            "Epoch 68/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7509.8887 - mae: 7509.8887\n",
            "Epoch 69/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7480.3901 - mae: 7480.3901\n",
            "Epoch 70/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7543.6479 - mae: 7543.6479\n",
            "Epoch 71/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7294.6938 - mae: 7294.6938\n",
            "Epoch 72/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7264.4268 - mae: 7264.4268\n",
            "Epoch 73/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7539.4370 - mae: 7539.4370\n",
            "Epoch 74/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7379.5664 - mae: 7379.5664\n",
            "Epoch 75/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7324.6221 - mae: 7324.6221\n",
            "Epoch 76/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7170.9556 - mae: 7170.9556\n",
            "Epoch 77/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7276.4648 - mae: 7276.4648\n",
            "Epoch 78/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7296.0610 - mae: 7296.0610\n",
            "Epoch 79/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7491.8481 - mae: 7491.8481\n",
            "Epoch 80/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7366.6592 - mae: 7366.6592\n",
            "Epoch 81/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7235.6772 - mae: 7235.6772\n",
            "Epoch 82/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7179.1929 - mae: 7179.1929\n",
            "Epoch 83/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7465.0327 - mae: 7465.0327\n",
            "Epoch 84/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7238.0776 - mae: 7238.0776\n",
            "Epoch 85/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7468.9326 - mae: 7468.9326\n",
            "Epoch 86/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7411.4702 - mae: 7411.4702\n",
            "Epoch 87/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7347.0903 - mae: 7347.0903\n",
            "Epoch 88/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7285.0532 - mae: 7285.0532\n",
            "Epoch 89/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7421.9551 - mae: 7421.9551\n",
            "Epoch 90/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7155.6309 - mae: 7155.6309\n",
            "Epoch 91/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7178.2847 - mae: 7178.2847\n",
            "Epoch 92/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7368.8516 - mae: 7368.8516\n",
            "Epoch 93/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7486.1338 - mae: 7486.1338\n",
            "Epoch 94/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7198.5815 - mae: 7198.5815\n",
            "Epoch 95/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7437.5947 - mae: 7437.5947\n",
            "Epoch 96/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7056.4370 - mae: 7056.4370\n",
            "Epoch 97/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7243.6143 - mae: 7243.6143\n",
            "Epoch 98/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7336.3550 - mae: 7336.3550\n",
            "Epoch 99/100\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 7148.4692 - mae: 7148.4692\n",
            "Epoch 100/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7192.4204 - mae: 7192.4204\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59b5e6d840>"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ins_model.evaluate(X_test,y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "205BsfGZwYbT",
        "outputId": "d4007050-9adf-485a-8bce-1a78b8af51f0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "9/9 [==============================] - 0s 2ms/step - loss: 7143.8511 - mae: 7143.8511\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[7143.85107421875, 7143.85107421875]"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "improve our model"
      ],
      "metadata": {
        "id": "bojyTOhkw07N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#add extra layer and use Adam\n",
        "ins_mod2 = tf.keras.Sequential([tf.keras.layers.Dense(100),\n",
        "                                tf.keras.layers.Dense(10),\n",
        "                                tf.keras.layers.Dense(1)])\n",
        "\n",
        "ins_mod2.compile(loss=tf.keras.losses.mae,\n",
        "                 optimizer=tf.keras.optimizers.Adam(),\n",
        "                 metrics=\"mae\")\n",
        "\n",
        "ins_mod2.fit(X_train, y_train, epochs=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rESJKhxlxZCG",
        "outputId": "8a43dd07-92af-4efa-a839-d6a8720e018d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "34/34 [==============================] - 1s 2ms/step - loss: 13296.4688 - mae: 13296.4688\n",
            "Epoch 2/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 13132.1113 - mae: 13132.1113\n",
            "Epoch 3/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 12796.2979 - mae: 12796.2979\n",
            "Epoch 4/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 12138.7363 - mae: 12138.7363\n",
            "Epoch 5/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 11032.7646 - mae: 11032.7646\n",
            "Epoch 6/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 9600.5518 - mae: 9600.5518\n",
            "Epoch 7/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 8257.9092 - mae: 8257.9092\n",
            "Epoch 8/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7563.4556 - mae: 7563.4556\n",
            "Epoch 9/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7437.2925 - mae: 7437.2925\n",
            "Epoch 10/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7416.3701 - mae: 7416.3701\n",
            "Epoch 11/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7397.9243 - mae: 7397.9243\n",
            "Epoch 12/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7376.0557 - mae: 7376.0557\n",
            "Epoch 13/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7355.7427 - mae: 7355.7427\n",
            "Epoch 14/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7333.7051 - mae: 7333.7051\n",
            "Epoch 15/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7314.7368 - mae: 7314.7368\n",
            "Epoch 16/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7292.6045 - mae: 7292.6045\n",
            "Epoch 17/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7272.6509 - mae: 7272.6509\n",
            "Epoch 18/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7249.1250 - mae: 7249.1250\n",
            "Epoch 19/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7226.9292 - mae: 7226.9292\n",
            "Epoch 20/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7203.7202 - mae: 7203.7202\n",
            "Epoch 21/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7184.3228 - mae: 7184.3228\n",
            "Epoch 22/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 7157.1113 - mae: 7157.1113\n",
            "Epoch 23/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 7131.9888 - mae: 7131.9888\n",
            "Epoch 24/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 7107.3823 - mae: 7107.3823\n",
            "Epoch 25/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 7088.9814 - mae: 7088.9814\n",
            "Epoch 26/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 7057.1675 - mae: 7057.1675\n",
            "Epoch 27/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 7028.3647 - mae: 7028.3647\n",
            "Epoch 28/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6999.9155 - mae: 6999.9155\n",
            "Epoch 29/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6971.6685 - mae: 6971.6685\n",
            "Epoch 30/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6943.8438 - mae: 6943.8438\n",
            "Epoch 31/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6912.5400 - mae: 6912.5400\n",
            "Epoch 32/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6884.0068 - mae: 6884.0068\n",
            "Epoch 33/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6851.7119 - mae: 6851.7119\n",
            "Epoch 34/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6820.0063 - mae: 6820.0063\n",
            "Epoch 35/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6785.7378 - mae: 6785.7378\n",
            "Epoch 36/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6750.7949 - mae: 6750.7949\n",
            "Epoch 37/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6714.0405 - mae: 6714.0405\n",
            "Epoch 38/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6682.5073 - mae: 6682.5073\n",
            "Epoch 39/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6643.6646 - mae: 6643.6646\n",
            "Epoch 40/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6608.3032 - mae: 6608.3032\n",
            "Epoch 41/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6575.6455 - mae: 6575.6455\n",
            "Epoch 42/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6549.6406 - mae: 6549.6406\n",
            "Epoch 43/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6519.7808 - mae: 6519.7808\n",
            "Epoch 44/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6498.1157 - mae: 6498.1157\n",
            "Epoch 45/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6486.0859 - mae: 6486.0859\n",
            "Epoch 46/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6467.7017 - mae: 6467.7017\n",
            "Epoch 47/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6451.1743 - mae: 6451.1743\n",
            "Epoch 48/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6437.6689 - mae: 6437.6689\n",
            "Epoch 49/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6424.8530 - mae: 6424.8530\n",
            "Epoch 50/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6410.5649 - mae: 6410.5649\n",
            "Epoch 51/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6397.1260 - mae: 6397.1260\n",
            "Epoch 52/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6385.4468 - mae: 6385.4468\n",
            "Epoch 53/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6371.5083 - mae: 6371.5083\n",
            "Epoch 54/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6358.1069 - mae: 6358.1069\n",
            "Epoch 55/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6344.5820 - mae: 6344.5820\n",
            "Epoch 56/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6330.1025 - mae: 6330.1025\n",
            "Epoch 57/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6317.6030 - mae: 6317.6030\n",
            "Epoch 58/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6303.3989 - mae: 6303.3989\n",
            "Epoch 59/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6289.3472 - mae: 6289.3472\n",
            "Epoch 60/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6278.2690 - mae: 6278.2690\n",
            "Epoch 61/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6258.7124 - mae: 6258.7124\n",
            "Epoch 62/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6247.0293 - mae: 6247.0293\n",
            "Epoch 63/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6228.3062 - mae: 6228.3062\n",
            "Epoch 64/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6212.2432 - mae: 6212.2432\n",
            "Epoch 65/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6194.9360 - mae: 6194.9360\n",
            "Epoch 66/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6178.1885 - mae: 6178.1885\n",
            "Epoch 67/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6165.2192 - mae: 6165.2192\n",
            "Epoch 68/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6143.4868 - mae: 6143.4868\n",
            "Epoch 69/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6127.5000 - mae: 6127.5000\n",
            "Epoch 70/100\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6107.5132 - mae: 6107.5132\n",
            "Epoch 71/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6088.5596 - mae: 6088.5596\n",
            "Epoch 72/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6068.8193 - mae: 6068.8193\n",
            "Epoch 73/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6055.3892 - mae: 6055.3892\n",
            "Epoch 74/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6027.3242 - mae: 6027.3242\n",
            "Epoch 75/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6005.1577 - mae: 6005.1577\n",
            "Epoch 76/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5993.1548 - mae: 5993.1548\n",
            "Epoch 77/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5960.2651 - mae: 5960.2651\n",
            "Epoch 78/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5937.8350 - mae: 5937.8350\n",
            "Epoch 79/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5913.8345 - mae: 5913.8345\n",
            "Epoch 80/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5886.9619 - mae: 5886.9619\n",
            "Epoch 81/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5861.8271 - mae: 5861.8271\n",
            "Epoch 82/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5833.9526 - mae: 5833.9526\n",
            "Epoch 83/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5806.3906 - mae: 5806.3906\n",
            "Epoch 84/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5774.1758 - mae: 5774.1758\n",
            "Epoch 85/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5749.4556 - mae: 5749.4556\n",
            "Epoch 86/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5716.0464 - mae: 5716.0464\n",
            "Epoch 87/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5679.0054 - mae: 5679.0054\n",
            "Epoch 88/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5645.2329 - mae: 5645.2329\n",
            "Epoch 89/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5607.1372 - mae: 5607.1372\n",
            "Epoch 90/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5567.0767 - mae: 5567.0767\n",
            "Epoch 91/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5533.4214 - mae: 5533.4214\n",
            "Epoch 92/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5484.5630 - mae: 5484.5630\n",
            "Epoch 93/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5443.7930 - mae: 5443.7930\n",
            "Epoch 94/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5399.2671 - mae: 5399.2671\n",
            "Epoch 95/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5349.5435 - mae: 5349.5435\n",
            "Epoch 96/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5307.1890 - mae: 5307.1890\n",
            "Epoch 97/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5252.9302 - mae: 5252.9302\n",
            "Epoch 98/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5195.1572 - mae: 5195.1572\n",
            "Epoch 99/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5137.6641 - mae: 5137.6641\n",
            "Epoch 100/100\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5081.3149 - mae: 5081.3149\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59bf1c2830>"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ins_mod2.evaluate(X_test,y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-tx1dyu5ySIm",
        "outputId": "ec79ba62-739a-4462-b739-cb104fe2a57e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "9/9 [==============================] - 0s 2ms/step - loss: 4949.9546 - mae: 4949.9546\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[4949.95458984375, 4949.95458984375]"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ins_mod3 = tf.keras.Sequential([tf.keras.layers.Dense(100),\n",
        "                                tf.keras.layers.Dense(10),\n",
        "                                tf.keras.layers.Dense(1)])\n",
        "\n",
        "ins_mod3.compile(loss=tf.keras.losses.mae,\n",
        "                 optimizer=tf.keras.optimizers.Adam(),\n",
        "                 metrics=\"mae\")\n",
        "\n",
        "history = ins_mod3.fit(X_train, y_train, epochs=250)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5JCFS9_hzIcg",
        "outputId": "2b5e4829-0d33-4ecc-d296-cb4f175eb130"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/250\n",
            "34/34 [==============================] - 1s 2ms/step - loss: 13304.9160 - mae: 13304.9160\n",
            "Epoch 2/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 13155.1113 - mae: 13155.1113\n",
            "Epoch 3/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 12837.3262 - mae: 12837.3262\n",
            "Epoch 4/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 12193.9561 - mae: 12193.9561\n",
            "Epoch 5/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 11089.1221 - mae: 11089.1221\n",
            "Epoch 6/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 9648.4570 - mae: 9648.4570\n",
            "Epoch 7/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 8293.7939 - mae: 8293.7939\n",
            "Epoch 8/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7583.6914 - mae: 7583.6914\n",
            "Epoch 9/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7452.3423 - mae: 7452.3423\n",
            "Epoch 10/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7430.4800 - mae: 7430.4800\n",
            "Epoch 11/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7411.1465 - mae: 7411.1465\n",
            "Epoch 12/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7388.5532 - mae: 7388.5532\n",
            "Epoch 13/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7367.5508 - mae: 7367.5508\n",
            "Epoch 14/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7344.6865 - mae: 7344.6865\n",
            "Epoch 15/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7324.8989 - mae: 7324.8989\n",
            "Epoch 16/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7301.4517 - mae: 7301.4517\n",
            "Epoch 17/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7280.6270 - mae: 7280.6270\n",
            "Epoch 18/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7256.0952 - mae: 7256.0952\n",
            "Epoch 19/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7232.9805 - mae: 7232.9805\n",
            "Epoch 20/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7208.5093 - mae: 7208.5093\n",
            "Epoch 21/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7188.2954 - mae: 7188.2954\n",
            "Epoch 22/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7160.1626 - mae: 7160.1626\n",
            "Epoch 23/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7134.2227 - mae: 7134.2227\n",
            "Epoch 24/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7107.6875 - mae: 7107.6875\n",
            "Epoch 25/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7088.1724 - mae: 7088.1724\n",
            "Epoch 26/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7055.1504 - mae: 7055.1504\n",
            "Epoch 27/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7024.7085 - mae: 7024.7085\n",
            "Epoch 28/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6994.9556 - mae: 6994.9556\n",
            "Epoch 29/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6964.9609 - mae: 6964.9609\n",
            "Epoch 30/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6936.2207 - mae: 6936.2207\n",
            "Epoch 31/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6903.0161 - mae: 6903.0161\n",
            "Epoch 32/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6873.5498 - mae: 6873.5498\n",
            "Epoch 33/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6840.3047 - mae: 6840.3047\n",
            "Epoch 34/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6807.9385 - mae: 6807.9385\n",
            "Epoch 35/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6771.2500 - mae: 6771.2500\n",
            "Epoch 36/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6735.3789 - mae: 6735.3789\n",
            "Epoch 37/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6697.7920 - mae: 6697.7920\n",
            "Epoch 38/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6666.4897 - mae: 6666.4897\n",
            "Epoch 39/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6628.1445 - mae: 6628.1445\n",
            "Epoch 40/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6592.4727 - mae: 6592.4727\n",
            "Epoch 41/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6561.5381 - mae: 6561.5381\n",
            "Epoch 42/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6538.3452 - mae: 6538.3452\n",
            "Epoch 43/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6509.9941 - mae: 6509.9941\n",
            "Epoch 44/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6489.1440 - mae: 6489.1440\n",
            "Epoch 45/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6477.9717 - mae: 6477.9717\n",
            "Epoch 46/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6460.6987 - mae: 6460.6987\n",
            "Epoch 47/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6445.0815 - mae: 6445.0815\n",
            "Epoch 48/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6430.2793 - mae: 6430.2793\n",
            "Epoch 49/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6417.6235 - mae: 6417.6235\n",
            "Epoch 50/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6403.0601 - mae: 6403.0601\n",
            "Epoch 51/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6389.8179 - mae: 6389.8179\n",
            "Epoch 52/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6377.2231 - mae: 6377.2231\n",
            "Epoch 53/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6362.5596 - mae: 6362.5596\n",
            "Epoch 54/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6348.4673 - mae: 6348.4673\n",
            "Epoch 55/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6335.0044 - mae: 6335.0044\n",
            "Epoch 56/250\n",
            "34/34 [==============================] - 0s 1ms/step - loss: 6321.0444 - mae: 6321.0444\n",
            "Epoch 57/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6307.4688 - mae: 6307.4688\n",
            "Epoch 58/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6293.6250 - mae: 6293.6250\n",
            "Epoch 59/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6277.3735 - mae: 6277.3735\n",
            "Epoch 60/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6266.2183 - mae: 6266.2183\n",
            "Epoch 61/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6245.8115 - mae: 6245.8115\n",
            "Epoch 62/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6233.2949 - mae: 6233.2949\n",
            "Epoch 63/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6214.8389 - mae: 6214.8389\n",
            "Epoch 64/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6197.4492 - mae: 6197.4492\n",
            "Epoch 65/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6179.8101 - mae: 6179.8101\n",
            "Epoch 66/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6162.1084 - mae: 6162.1084\n",
            "Epoch 67/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6148.3682 - mae: 6148.3682\n",
            "Epoch 68/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6125.5161 - mae: 6125.5161\n",
            "Epoch 69/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6108.9810 - mae: 6108.9810\n",
            "Epoch 70/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6088.1143 - mae: 6088.1143\n",
            "Epoch 71/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6067.5684 - mae: 6067.5684\n",
            "Epoch 72/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6046.9800 - mae: 6046.9800\n",
            "Epoch 73/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6033.5947 - mae: 6033.5947\n",
            "Epoch 74/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6003.7222 - mae: 6003.7222\n",
            "Epoch 75/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5982.4341 - mae: 5982.4341\n",
            "Epoch 76/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5965.8447 - mae: 5965.8447\n",
            "Epoch 77/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5933.7026 - mae: 5933.7026\n",
            "Epoch 78/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5909.2939 - mae: 5909.2939\n",
            "Epoch 79/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5883.6963 - mae: 5883.6963\n",
            "Epoch 80/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5854.7910 - mae: 5854.7910\n",
            "Epoch 81/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5828.9644 - mae: 5828.9644\n",
            "Epoch 82/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5798.5693 - mae: 5798.5693\n",
            "Epoch 83/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5769.4575 - mae: 5769.4575\n",
            "Epoch 84/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5735.6069 - mae: 5735.6069\n",
            "Epoch 85/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5708.6079 - mae: 5708.6079\n",
            "Epoch 86/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5673.3193 - mae: 5673.3193\n",
            "Epoch 87/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5635.8428 - mae: 5635.8428\n",
            "Epoch 88/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5598.8452 - mae: 5598.8452\n",
            "Epoch 89/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5559.0298 - mae: 5559.0298\n",
            "Epoch 90/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5516.1650 - mae: 5516.1650\n",
            "Epoch 91/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5478.8013 - mae: 5478.8013\n",
            "Epoch 92/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5428.9478 - mae: 5428.9478\n",
            "Epoch 93/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5385.3486 - mae: 5385.3486\n",
            "Epoch 94/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5336.8188 - mae: 5336.8188\n",
            "Epoch 95/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5284.6504 - mae: 5284.6504\n",
            "Epoch 96/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5238.0479 - mae: 5238.0479\n",
            "Epoch 97/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5184.6445 - mae: 5184.6445\n",
            "Epoch 98/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5120.0088 - mae: 5120.0088\n",
            "Epoch 99/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5061.0596 - mae: 5061.0596\n",
            "Epoch 100/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5003.8638 - mae: 5003.8638\n",
            "Epoch 101/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4932.4902 - mae: 4932.4902\n",
            "Epoch 102/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4858.3970 - mae: 4858.3970\n",
            "Epoch 103/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4793.3320 - mae: 4793.3320\n",
            "Epoch 104/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4711.1592 - mae: 4711.1592\n",
            "Epoch 105/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4625.6562 - mae: 4625.6562\n",
            "Epoch 106/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4543.3813 - mae: 4543.3813\n",
            "Epoch 107/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4459.3535 - mae: 4459.3535\n",
            "Epoch 108/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4374.1406 - mae: 4374.1406\n",
            "Epoch 109/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4292.0449 - mae: 4292.0449\n",
            "Epoch 110/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4211.3066 - mae: 4211.3066\n",
            "Epoch 111/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4135.0171 - mae: 4135.0171\n",
            "Epoch 112/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4066.5935 - mae: 4066.5935\n",
            "Epoch 113/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4009.6108 - mae: 4009.6108\n",
            "Epoch 114/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3971.5991 - mae: 3971.5991\n",
            "Epoch 115/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3931.8921 - mae: 3931.8921\n",
            "Epoch 116/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3907.6680 - mae: 3907.6680\n",
            "Epoch 117/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3889.0205 - mae: 3889.0205\n",
            "Epoch 118/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3865.4297 - mae: 3865.4297\n",
            "Epoch 119/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3849.8982 - mae: 3849.8982\n",
            "Epoch 120/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3833.5901 - mae: 3833.5901\n",
            "Epoch 121/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3826.7334 - mae: 3826.7334\n",
            "Epoch 122/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3822.2690 - mae: 3822.2690\n",
            "Epoch 123/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3813.4226 - mae: 3813.4226\n",
            "Epoch 124/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3806.3997 - mae: 3806.3997\n",
            "Epoch 125/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3796.0723 - mae: 3796.0723\n",
            "Epoch 126/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3807.3875 - mae: 3807.3875\n",
            "Epoch 127/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3797.9148 - mae: 3797.9148\n",
            "Epoch 128/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3792.3301 - mae: 3792.3301\n",
            "Epoch 129/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3798.0024 - mae: 3798.0024\n",
            "Epoch 130/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3790.7954 - mae: 3790.7954\n",
            "Epoch 131/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3783.1113 - mae: 3783.1113\n",
            "Epoch 132/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3775.0852 - mae: 3775.0852\n",
            "Epoch 133/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3771.3938 - mae: 3771.3938\n",
            "Epoch 134/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3771.0239 - mae: 3771.0239\n",
            "Epoch 135/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3767.7903 - mae: 3767.7903\n",
            "Epoch 136/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3767.1763 - mae: 3767.1763\n",
            "Epoch 137/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3774.4683 - mae: 3774.4683\n",
            "Epoch 138/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3782.5610 - mae: 3782.5610\n",
            "Epoch 139/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3761.9124 - mae: 3761.9124\n",
            "Epoch 140/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3763.2063 - mae: 3763.2063\n",
            "Epoch 141/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3763.4700 - mae: 3763.4700\n",
            "Epoch 142/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3765.6450 - mae: 3765.6450\n",
            "Epoch 143/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3755.2456 - mae: 3755.2456\n",
            "Epoch 144/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3751.3477 - mae: 3751.3477\n",
            "Epoch 145/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3753.0496 - mae: 3753.0496\n",
            "Epoch 146/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3757.6741 - mae: 3757.6741\n",
            "Epoch 147/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3752.4058 - mae: 3752.4058\n",
            "Epoch 148/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3756.8010 - mae: 3756.8010\n",
            "Epoch 149/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3744.1658 - mae: 3744.1658\n",
            "Epoch 150/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3739.0903 - mae: 3739.0903\n",
            "Epoch 151/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3742.3596 - mae: 3742.3596\n",
            "Epoch 152/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3743.3782 - mae: 3743.3782\n",
            "Epoch 153/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3745.6462 - mae: 3745.6462\n",
            "Epoch 154/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3738.4963 - mae: 3738.4963\n",
            "Epoch 155/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3739.8452 - mae: 3739.8452\n",
            "Epoch 156/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3735.9392 - mae: 3735.9392\n",
            "Epoch 157/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3734.6504 - mae: 3734.6504\n",
            "Epoch 158/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3730.1394 - mae: 3730.1394\n",
            "Epoch 159/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3728.4294 - mae: 3728.4294\n",
            "Epoch 160/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3734.5110 - mae: 3734.5110\n",
            "Epoch 161/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3728.5923 - mae: 3728.5923\n",
            "Epoch 162/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3727.3613 - mae: 3727.3613\n",
            "Epoch 163/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3722.8184 - mae: 3722.8184\n",
            "Epoch 164/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3728.0046 - mae: 3728.0046\n",
            "Epoch 165/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3718.6907 - mae: 3718.6907\n",
            "Epoch 166/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3722.5571 - mae: 3722.5571\n",
            "Epoch 167/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3721.0364 - mae: 3721.0364\n",
            "Epoch 168/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3715.8987 - mae: 3715.8987\n",
            "Epoch 169/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3715.4597 - mae: 3715.4597\n",
            "Epoch 170/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3709.4407 - mae: 3709.4407\n",
            "Epoch 171/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3709.3970 - mae: 3709.3970\n",
            "Epoch 172/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3710.0369 - mae: 3710.0369\n",
            "Epoch 173/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3707.1670 - mae: 3707.1670\n",
            "Epoch 174/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3711.4539 - mae: 3711.4539\n",
            "Epoch 175/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3712.3120 - mae: 3712.3120\n",
            "Epoch 176/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3708.1606 - mae: 3708.1606\n",
            "Epoch 177/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3700.7222 - mae: 3700.7222\n",
            "Epoch 178/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3697.7129 - mae: 3697.7129\n",
            "Epoch 179/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3708.2559 - mae: 3708.2559\n",
            "Epoch 180/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3711.7354 - mae: 3711.7354\n",
            "Epoch 181/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3697.4937 - mae: 3697.4937\n",
            "Epoch 182/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3695.0010 - mae: 3695.0010\n",
            "Epoch 183/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3692.6145 - mae: 3692.6145\n",
            "Epoch 184/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3699.4321 - mae: 3699.4321\n",
            "Epoch 185/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3695.5796 - mae: 3695.5796\n",
            "Epoch 186/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3699.7678 - mae: 3699.7678\n",
            "Epoch 187/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3690.7454 - mae: 3690.7454\n",
            "Epoch 188/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3695.9800 - mae: 3695.9800\n",
            "Epoch 189/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3685.4897 - mae: 3685.4897\n",
            "Epoch 190/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3684.9836 - mae: 3684.9836\n",
            "Epoch 191/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3703.3713 - mae: 3703.3713\n",
            "Epoch 192/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3686.7036 - mae: 3686.7036\n",
            "Epoch 193/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3676.9360 - mae: 3676.9360\n",
            "Epoch 194/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3677.5193 - mae: 3677.5193\n",
            "Epoch 195/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3674.8833 - mae: 3674.8833\n",
            "Epoch 196/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3682.7900 - mae: 3682.7900\n",
            "Epoch 197/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3668.2468 - mae: 3668.2468\n",
            "Epoch 198/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3673.1980 - mae: 3673.1980\n",
            "Epoch 199/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3682.0559 - mae: 3682.0559\n",
            "Epoch 200/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3669.4248 - mae: 3669.4248\n",
            "Epoch 201/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3668.6255 - mae: 3668.6255\n",
            "Epoch 202/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3666.4810 - mae: 3666.4810\n",
            "Epoch 203/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3666.0884 - mae: 3666.0884\n",
            "Epoch 204/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3656.6118 - mae: 3656.6118\n",
            "Epoch 205/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3665.6199 - mae: 3665.6199\n",
            "Epoch 206/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3659.4609 - mae: 3659.4609\n",
            "Epoch 207/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3657.9956 - mae: 3657.9956\n",
            "Epoch 208/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3656.4104 - mae: 3656.4104\n",
            "Epoch 209/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3655.7676 - mae: 3655.7676\n",
            "Epoch 210/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3660.4395 - mae: 3660.4395\n",
            "Epoch 211/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3657.8228 - mae: 3657.8228\n",
            "Epoch 212/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3670.3608 - mae: 3670.3608\n",
            "Epoch 213/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3658.6047 - mae: 3658.6047\n",
            "Epoch 214/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3679.1187 - mae: 3679.1187\n",
            "Epoch 215/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3655.0667 - mae: 3655.0667\n",
            "Epoch 216/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3647.7517 - mae: 3647.7517\n",
            "Epoch 217/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3649.8701 - mae: 3649.8701\n",
            "Epoch 218/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3646.3669 - mae: 3646.3669\n",
            "Epoch 219/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3656.8247 - mae: 3656.8247\n",
            "Epoch 220/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3643.4382 - mae: 3643.4382\n",
            "Epoch 221/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3647.4302 - mae: 3647.4302\n",
            "Epoch 222/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3652.7703 - mae: 3652.7703\n",
            "Epoch 223/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3637.8679 - mae: 3637.8679\n",
            "Epoch 224/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3640.5596 - mae: 3640.5596\n",
            "Epoch 225/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3634.5881 - mae: 3634.5881\n",
            "Epoch 226/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3630.8562 - mae: 3630.8562\n",
            "Epoch 227/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3626.2285 - mae: 3626.2285\n",
            "Epoch 228/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3632.1313 - mae: 3632.1313\n",
            "Epoch 229/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3636.0210 - mae: 3636.0210\n",
            "Epoch 230/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3620.0269 - mae: 3620.0269\n",
            "Epoch 231/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3618.6389 - mae: 3618.6389\n",
            "Epoch 232/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3617.1472 - mae: 3617.1472\n",
            "Epoch 233/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3615.5471 - mae: 3615.5471\n",
            "Epoch 234/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3626.9177 - mae: 3626.9177\n",
            "Epoch 235/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3628.8513 - mae: 3628.8513\n",
            "Epoch 236/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3619.0742 - mae: 3619.0742\n",
            "Epoch 237/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3621.2161 - mae: 3621.2161\n",
            "Epoch 238/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3602.0999 - mae: 3602.0999\n",
            "Epoch 239/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3612.5854 - mae: 3612.5854\n",
            "Epoch 240/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3610.6514 - mae: 3610.6514\n",
            "Epoch 241/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3604.4009 - mae: 3604.4009\n",
            "Epoch 242/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3601.0205 - mae: 3601.0205\n",
            "Epoch 243/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3597.2300 - mae: 3597.2300\n",
            "Epoch 244/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3610.1472 - mae: 3610.1472\n",
            "Epoch 245/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3595.3682 - mae: 3595.3682\n",
            "Epoch 246/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3591.2627 - mae: 3591.2627\n",
            "Epoch 247/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3590.4006 - mae: 3590.4006\n",
            "Epoch 248/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3605.3303 - mae: 3605.3303\n",
            "Epoch 249/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3590.5415 - mae: 3590.5415\n",
            "Epoch 250/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3584.6084 - mae: 3584.6084\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ins_mod3.evaluate(X_test, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0weDW4B0zaa9",
        "outputId": "96b2591a-72ab-4654-87ff-36ab249ad032"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "9/9 [==============================] - 0s 3ms/step - loss: 3358.6379 - mae: 3358.6379\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[3358.637939453125, 3358.637939453125]"
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pd.DataFrame(history.history).plot()\n",
        "plt.ylabel(\"loss\")\n",
        "plt.xlabel('epochs')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 734
        },
        "id": "QxkH7AiNzkVd",
        "outputId": "79045de1-e72a-4450-8cfd-9e9e826556e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-71-3a7868ab2fd1>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"loss\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'epochs'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/matplotlib/_api/__init__.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(name)\u001b[0m\n\u001b[1;32m    224\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mprops\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    225\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mprops\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__get__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minstance\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 226\u001b[0;31m         raise AttributeError(\n\u001b[0m\u001b[1;32m    227\u001b[0m             f\"module {cls.__module__!r} has no attribute {name!r}\")\n\u001b[1;32m    228\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: module 'matplotlib' has no attribute 'ylabel'"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Preprocessing Data (Normalization and Standardization)"
      ],
      "metadata": {
        "id": "Fwas783f0UDK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "OPvfdMoIWPX-",
        "outputId": "df6c8f37-af0c-49db-cae6-7b9e52822748"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      age     bmi  children  sex_female  sex_male  smoker_no  smoker_yes  \\\n",
              "0      19  27.900         0           1         0          0           1   \n",
              "1      18  33.770         1           0         1          1           0   \n",
              "2      28  33.000         3           0         1          1           0   \n",
              "3      33  22.705         0           0         1          1           0   \n",
              "4      32  28.880         0           0         1          1           0   \n",
              "...   ...     ...       ...         ...       ...        ...         ...   \n",
              "1333   50  30.970         3           0         1          1           0   \n",
              "1334   18  31.920         0           1         0          1           0   \n",
              "1335   18  36.850         0           1         0          1           0   \n",
              "1336   21  25.800         0           1         0          1           0   \n",
              "1337   61  29.070         0           1         0          0           1   \n",
              "\n",
              "      region_northeast  region_northwest  region_southeast  region_southwest  \n",
              "0                    0                 0                 0                 1  \n",
              "1                    0                 0                 1                 0  \n",
              "2                    0                 0                 1                 0  \n",
              "3                    0                 1                 0                 0  \n",
              "4                    0                 1                 0                 0  \n",
              "...                ...               ...               ...               ...  \n",
              "1333                 0                 1                 0                 0  \n",
              "1334                 1                 0                 0                 0  \n",
              "1335                 0                 0                 1                 0  \n",
              "1336                 0                 0                 0                 1  \n",
              "1337                 0                 1                 0                 0  \n",
              "\n",
              "[1338 rows x 11 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4e93f1cc-3c6c-4d05-b5d5-02f96671e935\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>bmi</th>\n",
              "      <th>children</th>\n",
              "      <th>sex_female</th>\n",
              "      <th>sex_male</th>\n",
              "      <th>smoker_no</th>\n",
              "      <th>smoker_yes</th>\n",
              "      <th>region_northeast</th>\n",
              "      <th>region_northwest</th>\n",
              "      <th>region_southeast</th>\n",
              "      <th>region_southwest</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>19</td>\n",
              "      <td>27.900</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>18</td>\n",
              "      <td>33.770</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>28</td>\n",
              "      <td>33.000</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>22.705</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>32</td>\n",
              "      <td>28.880</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1333</th>\n",
              "      <td>50</td>\n",
              "      <td>30.970</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1334</th>\n",
              "      <td>18</td>\n",
              "      <td>31.920</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1335</th>\n",
              "      <td>18</td>\n",
              "      <td>36.850</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1336</th>\n",
              "      <td>21</td>\n",
              "      <td>25.800</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1337</th>\n",
              "      <td>61</td>\n",
              "      <td>29.070</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1338 rows × 11 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e93f1cc-3c6c-4d05-b5d5-02f96671e935')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4e93f1cc-3c6c-4d05-b5d5-02f96671e935 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4e93f1cc-3c6c-4d05-b5d5-02f96671e935');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X['bmi'].plot(kind='hist')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "Hqatpsg2XHra",
        "outputId": "7a968e22-f069-4f6f-9d52-70de4f26caae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: ylabel='Frequency'>"
            ]
          },
          "metadata": {},
          "execution_count": 77
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "insurance"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "bCg3NBTcX-Y7",
        "outputId": "84b4a949-516b-4b15-a7fc-eb8dd2246563"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      age     sex     bmi  children smoker     region      charges\n",
              "0      19  female  27.900         0    yes  southwest  16884.92400\n",
              "1      18    male  33.770         1     no  southeast   1725.55230\n",
              "2      28    male  33.000         3     no  southeast   4449.46200\n",
              "3      33    male  22.705         0     no  northwest  21984.47061\n",
              "4      32    male  28.880         0     no  northwest   3866.85520\n",
              "...   ...     ...     ...       ...    ...        ...          ...\n",
              "1333   50    male  30.970         3     no  northwest  10600.54830\n",
              "1334   18  female  31.920         0     no  northeast   2205.98080\n",
              "1335   18  female  36.850         0     no  southeast   1629.83350\n",
              "1336   21  female  25.800         0     no  southwest   2007.94500\n",
              "1337   61  female  29.070         0    yes  northwest  29141.36030\n",
              "\n",
              "[1338 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2de4d8c1-4064-4355-8888-2a6b675e9413\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>sex</th>\n",
              "      <th>bmi</th>\n",
              "      <th>children</th>\n",
              "      <th>smoker</th>\n",
              "      <th>region</th>\n",
              "      <th>charges</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>19</td>\n",
              "      <td>female</td>\n",
              "      <td>27.900</td>\n",
              "      <td>0</td>\n",
              "      <td>yes</td>\n",
              "      <td>southwest</td>\n",
              "      <td>16884.92400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>18</td>\n",
              "      <td>male</td>\n",
              "      <td>33.770</td>\n",
              "      <td>1</td>\n",
              "      <td>no</td>\n",
              "      <td>southeast</td>\n",
              "      <td>1725.55230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>28</td>\n",
              "      <td>male</td>\n",
              "      <td>33.000</td>\n",
              "      <td>3</td>\n",
              "      <td>no</td>\n",
              "      <td>southeast</td>\n",
              "      <td>4449.46200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>33</td>\n",
              "      <td>male</td>\n",
              "      <td>22.705</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>northwest</td>\n",
              "      <td>21984.47061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>32</td>\n",
              "      <td>male</td>\n",
              "      <td>28.880</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>northwest</td>\n",
              "      <td>3866.85520</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1333</th>\n",
              "      <td>50</td>\n",
              "      <td>male</td>\n",
              "      <td>30.970</td>\n",
              "      <td>3</td>\n",
              "      <td>no</td>\n",
              "      <td>northwest</td>\n",
              "      <td>10600.54830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1334</th>\n",
              "      <td>18</td>\n",
              "      <td>female</td>\n",
              "      <td>31.920</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>northeast</td>\n",
              "      <td>2205.98080</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1335</th>\n",
              "      <td>18</td>\n",
              "      <td>female</td>\n",
              "      <td>36.850</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>southeast</td>\n",
              "      <td>1629.83350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1336</th>\n",
              "      <td>21</td>\n",
              "      <td>female</td>\n",
              "      <td>25.800</td>\n",
              "      <td>0</td>\n",
              "      <td>no</td>\n",
              "      <td>southwest</td>\n",
              "      <td>2007.94500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1337</th>\n",
              "      <td>61</td>\n",
              "      <td>female</td>\n",
              "      <td>29.070</td>\n",
              "      <td>0</td>\n",
              "      <td>yes</td>\n",
              "      <td>northwest</td>\n",
              "      <td>29141.36030</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1338 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2de4d8c1-4064-4355-8888-2a6b675e9413')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2de4d8c1-4064-4355-8888-2a6b675e9413 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2de4d8c1-4064-4355-8888-2a6b675e9413');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.compose import make_column_transformer\n",
        "from sklearn.preprocessing import MinMaxScaler, OneHotEncoder\n",
        "\n",
        "#create a coulmn Transformer\n",
        "ct = make_column_transformer(\n",
        "    (MinMaxScaler(),[\"age\",\"bmi\",\"children\"]), #turn all values in these columns between 0 and 1\n",
        "    (OneHotEncoder(handle_unknown='ignore'),[\"sex\",\"smoker\",'region'])\n",
        ")\n",
        "\n",
        "X = insurance.drop(\"charges\", axis=1)\n",
        "y = insurance['charges']\n",
        "\n",
        "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2, random_state=42)\n",
        "\n",
        "ct.fit(X_train)\n",
        "\n",
        "X_train_normal = ct.transform(X_train)\n",
        "X_test_normal =ct.transform(X_test)"
      ],
      "metadata": {
        "id": "LHU-Jn2nZAQl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train_normal[0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iRkaT9DHbLSv",
        "outputId": "2b6237a6-111e-4022-94fc-128aaf8b2004"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.60869565, 0.10734463, 0.4       , 1.        , 0.        ,\n",
              "       1.        , 0.        , 0.        , 1.        , 0.        ,\n",
              "       0.        ])"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train.shape, X_train_normal.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZLNAdvlWbUQa",
        "outputId": "c8410f9d-631c-4dff-9750-ab4935c18616"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((1070, 6), (1070, 11))"
            ]
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "insu_model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(100),\n",
        "    tf.keras.layers.Dense(10),\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "insu_model.compile(loss=tf.keras.losses.mae,\n",
        "                   optimizer=tf.keras.optimizers.Adam(),\n",
        "                   metrics='mae')\n",
        "\n",
        "insu_model.fit(X_train_normal,y_train,epochs=100)"
      ],
      "metadata": {
        "id": "9yx6UHHGblcf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "insu_model.evaluate(X_test_normal, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xQGBckN9ckA_",
        "outputId": "18cd64e7-e18d-44cd-b046-a3983f348201"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "9/9 [==============================] - 0s 4ms/step - loss: 3439.4917 - mae: 3439.4917\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[3439.49169921875, 3439.49169921875]"
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "insu_model2 = tf.keras.Sequential([\n",
        "    tf.keras.layers.Dense(100),\n",
        "    tf.keras.layers.Dense(10),\n",
        "    tf.keras.layers.Dense(1)\n",
        "])\n",
        "\n",
        "insu_model2.compile(loss=tf.keras.losses.mae,\n",
        "                   optimizer=tf.keras.optimizers.Adam(),\n",
        "                   metrics='mae')\n",
        "\n",
        "insu_model2.fit(X_train_normal,y_train,epochs=250)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JV7CI4yNdflL",
        "outputId": "435b9e08-4a7e-4801-8993-2c02e1777f1c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/250\n",
            "34/34 [==============================] - 1s 4ms/step - loss: 13343.3066 - mae: 13343.3066\n",
            "Epoch 2/250\n",
            "34/34 [==============================] - 0s 5ms/step - loss: 13333.8389 - mae: 13333.8389\n",
            "Epoch 3/250\n",
            "34/34 [==============================] - 0s 4ms/step - loss: 13309.8555 - mae: 13309.8555\n",
            "Epoch 4/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 13260.1221 - mae: 13260.1221\n",
            "Epoch 5/250\n",
            "34/34 [==============================] - 0s 4ms/step - loss: 13173.7441 - mae: 13173.7441\n",
            "Epoch 6/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 13040.2500 - mae: 13040.2500\n",
            "Epoch 7/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 12849.7773 - mae: 12849.7773\n",
            "Epoch 8/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 12592.4307 - mae: 12592.4307\n",
            "Epoch 9/250\n",
            "34/34 [==============================] - 0s 4ms/step - loss: 12258.1299 - mae: 12258.1299\n",
            "Epoch 10/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 11844.9678 - mae: 11844.9678\n",
            "Epoch 11/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 11365.6738 - mae: 11365.6738\n",
            "Epoch 12/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 10862.0088 - mae: 10862.0088\n",
            "Epoch 13/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 10362.9346 - mae: 10362.9346\n",
            "Epoch 14/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 9872.4893 - mae: 9872.4893\n",
            "Epoch 15/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 9411.9688 - mae: 9411.9688\n",
            "Epoch 16/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 9004.4277 - mae: 9004.4277\n",
            "Epoch 17/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 8671.9268 - mae: 8671.9268\n",
            "Epoch 18/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 8400.5537 - mae: 8400.5537\n",
            "Epoch 19/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 8198.9111 - mae: 8198.9111\n",
            "Epoch 20/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 8058.8252 - mae: 8058.8252\n",
            "Epoch 21/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7955.0010 - mae: 7955.0010\n",
            "Epoch 22/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7883.2671 - mae: 7883.2671\n",
            "Epoch 23/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7825.2568 - mae: 7825.2568\n",
            "Epoch 24/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7772.4028 - mae: 7772.4028\n",
            "Epoch 25/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7733.0864 - mae: 7733.0864\n",
            "Epoch 26/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7680.8545 - mae: 7680.8545\n",
            "Epoch 27/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7638.1699 - mae: 7638.1699\n",
            "Epoch 28/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7594.9722 - mae: 7594.9722\n",
            "Epoch 29/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7551.4399 - mae: 7551.4399\n",
            "Epoch 30/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7506.9521 - mae: 7506.9521\n",
            "Epoch 31/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7461.9790 - mae: 7461.9790\n",
            "Epoch 32/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7416.7446 - mae: 7416.7446\n",
            "Epoch 33/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7371.2344 - mae: 7371.2344\n",
            "Epoch 34/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7321.7583 - mae: 7321.7583\n",
            "Epoch 35/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7273.4897 - mae: 7273.4897\n",
            "Epoch 36/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7221.8970 - mae: 7221.8970\n",
            "Epoch 37/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7170.0396 - mae: 7170.0396\n",
            "Epoch 38/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7117.3857 - mae: 7117.3857\n",
            "Epoch 39/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7060.8335 - mae: 7060.8335\n",
            "Epoch 40/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 7003.6982 - mae: 7003.6982\n",
            "Epoch 41/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6945.2632 - mae: 6945.2632\n",
            "Epoch 42/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6884.0728 - mae: 6884.0728\n",
            "Epoch 43/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6819.1758 - mae: 6819.1758\n",
            "Epoch 44/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6750.4019 - mae: 6750.4019\n",
            "Epoch 45/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6680.5347 - mae: 6680.5347\n",
            "Epoch 46/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6608.6890 - mae: 6608.6890\n",
            "Epoch 47/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6534.1719 - mae: 6534.1719\n",
            "Epoch 48/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6452.3232 - mae: 6452.3232\n",
            "Epoch 49/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6370.0796 - mae: 6370.0796\n",
            "Epoch 50/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6280.5752 - mae: 6280.5752\n",
            "Epoch 51/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 6192.2515 - mae: 6192.2515\n",
            "Epoch 52/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 6094.8330 - mae: 6094.8330\n",
            "Epoch 53/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 5994.3882 - mae: 5994.3882\n",
            "Epoch 54/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 5890.9517 - mae: 5890.9517\n",
            "Epoch 55/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 5779.0728 - mae: 5779.0728\n",
            "Epoch 56/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 5666.4424 - mae: 5666.4424\n",
            "Epoch 57/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 5548.7192 - mae: 5548.7192\n",
            "Epoch 58/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 5430.4478 - mae: 5430.4478\n",
            "Epoch 59/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5306.3818 - mae: 5306.3818\n",
            "Epoch 60/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 5181.0381 - mae: 5181.0381\n",
            "Epoch 61/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 5053.2183 - mae: 5053.2183\n",
            "Epoch 62/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4920.3965 - mae: 4920.3965\n",
            "Epoch 63/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4792.0879 - mae: 4792.0879\n",
            "Epoch 64/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4661.9893 - mae: 4661.9893\n",
            "Epoch 65/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4540.8574 - mae: 4540.8574\n",
            "Epoch 66/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4427.6006 - mae: 4427.6006\n",
            "Epoch 67/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 4324.6445 - mae: 4324.6445\n",
            "Epoch 68/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4221.1909 - mae: 4221.1909\n",
            "Epoch 69/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4126.1304 - mae: 4126.1304\n",
            "Epoch 70/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 4039.5239 - mae: 4039.5239\n",
            "Epoch 71/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3961.2163 - mae: 3961.2163\n",
            "Epoch 72/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3893.1587 - mae: 3893.1587\n",
            "Epoch 73/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3838.4111 - mae: 3838.4111\n",
            "Epoch 74/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3790.6055 - mae: 3790.6055\n",
            "Epoch 75/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3757.2095 - mae: 3757.2095\n",
            "Epoch 76/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3731.6194 - mae: 3731.6194\n",
            "Epoch 77/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3710.3560 - mae: 3710.3560\n",
            "Epoch 78/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3696.2559 - mae: 3696.2559\n",
            "Epoch 79/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3686.6233 - mae: 3686.6233\n",
            "Epoch 80/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3677.8438 - mae: 3677.8438\n",
            "Epoch 81/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3672.7639 - mae: 3672.7639\n",
            "Epoch 82/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3669.9741 - mae: 3669.9741\n",
            "Epoch 83/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3664.3508 - mae: 3664.3508\n",
            "Epoch 84/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3661.6777 - mae: 3661.6777\n",
            "Epoch 85/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3659.3254 - mae: 3659.3254\n",
            "Epoch 86/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3657.9978 - mae: 3657.9978\n",
            "Epoch 87/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3654.9434 - mae: 3654.9434\n",
            "Epoch 88/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3652.6392 - mae: 3652.6392\n",
            "Epoch 89/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3651.2075 - mae: 3651.2075\n",
            "Epoch 90/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3649.5452 - mae: 3649.5452\n",
            "Epoch 91/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3646.3574 - mae: 3646.3574\n",
            "Epoch 92/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3645.7036 - mae: 3645.7036\n",
            "Epoch 93/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3643.4736 - mae: 3643.4736\n",
            "Epoch 94/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3641.7732 - mae: 3641.7732\n",
            "Epoch 95/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3642.9409 - mae: 3642.9409\n",
            "Epoch 96/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3639.6746 - mae: 3639.6746\n",
            "Epoch 97/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3637.2922 - mae: 3637.2922\n",
            "Epoch 98/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3635.2322 - mae: 3635.2322\n",
            "Epoch 99/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3634.3621 - mae: 3634.3621\n",
            "Epoch 100/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3633.1443 - mae: 3633.1443\n",
            "Epoch 101/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3629.9912 - mae: 3629.9912\n",
            "Epoch 102/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3627.4255 - mae: 3627.4255\n",
            "Epoch 103/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3626.4084 - mae: 3626.4084\n",
            "Epoch 104/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3623.9243 - mae: 3623.9243\n",
            "Epoch 105/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3622.3062 - mae: 3622.3062\n",
            "Epoch 106/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3620.9375 - mae: 3620.9375\n",
            "Epoch 107/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3620.1653 - mae: 3620.1653\n",
            "Epoch 108/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3617.6980 - mae: 3617.6980\n",
            "Epoch 109/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3618.1892 - mae: 3618.1892\n",
            "Epoch 110/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3614.5276 - mae: 3614.5276\n",
            "Epoch 111/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3611.7974 - mae: 3611.7974\n",
            "Epoch 112/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3609.8723 - mae: 3609.8723\n",
            "Epoch 113/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3608.2861 - mae: 3608.2861\n",
            "Epoch 114/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3607.4260 - mae: 3607.4260\n",
            "Epoch 115/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3605.6404 - mae: 3605.6404\n",
            "Epoch 116/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3604.1497 - mae: 3604.1497\n",
            "Epoch 117/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3601.2146 - mae: 3601.2146\n",
            "Epoch 118/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3597.4631 - mae: 3597.4631\n",
            "Epoch 119/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3599.6582 - mae: 3599.6582\n",
            "Epoch 120/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3596.5186 - mae: 3596.5186\n",
            "Epoch 121/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3591.4475 - mae: 3591.4475\n",
            "Epoch 122/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3590.8242 - mae: 3590.8242\n",
            "Epoch 123/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3588.7988 - mae: 3588.7988\n",
            "Epoch 124/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3586.4751 - mae: 3586.4751\n",
            "Epoch 125/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3584.3667 - mae: 3584.3667\n",
            "Epoch 126/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3583.5015 - mae: 3583.5015\n",
            "Epoch 127/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3583.6394 - mae: 3583.6394\n",
            "Epoch 128/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3580.2451 - mae: 3580.2451\n",
            "Epoch 129/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3578.7627 - mae: 3578.7627\n",
            "Epoch 130/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3575.0908 - mae: 3575.0908\n",
            "Epoch 131/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3573.7341 - mae: 3573.7341\n",
            "Epoch 132/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3570.7554 - mae: 3570.7554\n",
            "Epoch 133/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3569.1558 - mae: 3569.1558\n",
            "Epoch 134/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3567.0742 - mae: 3567.0742\n",
            "Epoch 135/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3565.2212 - mae: 3565.2212\n",
            "Epoch 136/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3563.6934 - mae: 3563.6934\n",
            "Epoch 137/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3562.3752 - mae: 3562.3752\n",
            "Epoch 138/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3560.1768 - mae: 3560.1768\n",
            "Epoch 139/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3559.3396 - mae: 3559.3396\n",
            "Epoch 140/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3557.3330 - mae: 3557.3330\n",
            "Epoch 141/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3557.3657 - mae: 3557.3657\n",
            "Epoch 142/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3554.6274 - mae: 3554.6274\n",
            "Epoch 143/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3555.0193 - mae: 3555.0193\n",
            "Epoch 144/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3551.6858 - mae: 3551.6858\n",
            "Epoch 145/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3550.0417 - mae: 3550.0417\n",
            "Epoch 146/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3550.1724 - mae: 3550.1724\n",
            "Epoch 147/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3547.8120 - mae: 3547.8120\n",
            "Epoch 148/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3546.4138 - mae: 3546.4138\n",
            "Epoch 149/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3543.5691 - mae: 3543.5691\n",
            "Epoch 150/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3543.2844 - mae: 3543.2844\n",
            "Epoch 151/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3541.5571 - mae: 3541.5571\n",
            "Epoch 152/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3539.9646 - mae: 3539.9646\n",
            "Epoch 153/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3538.4651 - mae: 3538.4651\n",
            "Epoch 154/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3539.7666 - mae: 3539.7666\n",
            "Epoch 155/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3537.4680 - mae: 3537.4680\n",
            "Epoch 156/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3535.4158 - mae: 3535.4158\n",
            "Epoch 157/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3534.0244 - mae: 3534.0244\n",
            "Epoch 158/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3530.9692 - mae: 3530.9692\n",
            "Epoch 159/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3529.4302 - mae: 3529.4302\n",
            "Epoch 160/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3529.1543 - mae: 3529.1543\n",
            "Epoch 161/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3526.1201 - mae: 3526.1201\n",
            "Epoch 162/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3525.5715 - mae: 3525.5715\n",
            "Epoch 163/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3524.6116 - mae: 3524.6116\n",
            "Epoch 164/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3523.2781 - mae: 3523.2781\n",
            "Epoch 165/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3521.1030 - mae: 3521.1030\n",
            "Epoch 166/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3519.5449 - mae: 3519.5449\n",
            "Epoch 167/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3518.7329 - mae: 3518.7329\n",
            "Epoch 168/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3517.6816 - mae: 3517.6816\n",
            "Epoch 169/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3516.4006 - mae: 3516.4006\n",
            "Epoch 170/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3514.8855 - mae: 3514.8855\n",
            "Epoch 171/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3514.3721 - mae: 3514.3721\n",
            "Epoch 172/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3512.8237 - mae: 3512.8237\n",
            "Epoch 173/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3511.4409 - mae: 3511.4409\n",
            "Epoch 174/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3510.4048 - mae: 3510.4048\n",
            "Epoch 175/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3508.9941 - mae: 3508.9941\n",
            "Epoch 176/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3508.9666 - mae: 3508.9666\n",
            "Epoch 177/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3509.3486 - mae: 3509.3486\n",
            "Epoch 178/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3506.8835 - mae: 3506.8835\n",
            "Epoch 179/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3508.8105 - mae: 3508.8105\n",
            "Epoch 180/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3503.6829 - mae: 3503.6829\n",
            "Epoch 181/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3501.6206 - mae: 3501.6206\n",
            "Epoch 182/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3500.9290 - mae: 3500.9290\n",
            "Epoch 183/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3499.0652 - mae: 3499.0652\n",
            "Epoch 184/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3498.4490 - mae: 3498.4490\n",
            "Epoch 185/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3498.0459 - mae: 3498.0459\n",
            "Epoch 186/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3495.7402 - mae: 3495.7402\n",
            "Epoch 187/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3495.7622 - mae: 3495.7622\n",
            "Epoch 188/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3492.8887 - mae: 3492.8887\n",
            "Epoch 189/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3491.4255 - mae: 3491.4255\n",
            "Epoch 190/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3493.1096 - mae: 3493.1096\n",
            "Epoch 191/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3498.2798 - mae: 3498.2798\n",
            "Epoch 192/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3488.2500 - mae: 3488.2500\n",
            "Epoch 193/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3488.3469 - mae: 3488.3469\n",
            "Epoch 194/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3485.2410 - mae: 3485.2410\n",
            "Epoch 195/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3484.5193 - mae: 3484.5193\n",
            "Epoch 196/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3485.5820 - mae: 3485.5820\n",
            "Epoch 197/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3482.0686 - mae: 3482.0686\n",
            "Epoch 198/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3480.9580 - mae: 3480.9580\n",
            "Epoch 199/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3479.6682 - mae: 3479.6682\n",
            "Epoch 200/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3480.3901 - mae: 3480.3901\n",
            "Epoch 201/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3476.7346 - mae: 3476.7346\n",
            "Epoch 202/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3476.6506 - mae: 3476.6506\n",
            "Epoch 203/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3474.8679 - mae: 3474.8679\n",
            "Epoch 204/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3476.5317 - mae: 3476.5317\n",
            "Epoch 205/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3474.0513 - mae: 3474.0513\n",
            "Epoch 206/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3473.4648 - mae: 3473.4648\n",
            "Epoch 207/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3474.1760 - mae: 3474.1760\n",
            "Epoch 208/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3473.6714 - mae: 3473.6714\n",
            "Epoch 209/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3473.8091 - mae: 3473.8091\n",
            "Epoch 210/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3473.1650 - mae: 3473.1650\n",
            "Epoch 211/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3472.5547 - mae: 3472.5547\n",
            "Epoch 212/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3473.0251 - mae: 3473.0251\n",
            "Epoch 213/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3472.3208 - mae: 3472.3208\n",
            "Epoch 214/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3474.2910 - mae: 3474.2910\n",
            "Epoch 215/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3473.4539 - mae: 3473.4539\n",
            "Epoch 216/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3472.5557 - mae: 3472.5557\n",
            "Epoch 217/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3474.7527 - mae: 3474.7527\n",
            "Epoch 218/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3472.2190 - mae: 3472.2190\n",
            "Epoch 219/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3472.5952 - mae: 3472.5952\n",
            "Epoch 220/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3471.7224 - mae: 3471.7224\n",
            "Epoch 221/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3474.1191 - mae: 3474.1191\n",
            "Epoch 222/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3473.5774 - mae: 3473.5774\n",
            "Epoch 223/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3472.9690 - mae: 3472.9690\n",
            "Epoch 224/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3473.0820 - mae: 3473.0820\n",
            "Epoch 225/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3472.8799 - mae: 3472.8799\n",
            "Epoch 226/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3471.7090 - mae: 3471.7090\n",
            "Epoch 227/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3471.4814 - mae: 3471.4814\n",
            "Epoch 228/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3473.4539 - mae: 3473.4539\n",
            "Epoch 229/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3472.2583 - mae: 3472.2583\n",
            "Epoch 230/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3474.4456 - mae: 3474.4456\n",
            "Epoch 231/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3471.7908 - mae: 3471.7908\n",
            "Epoch 232/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3472.8301 - mae: 3472.8301\n",
            "Epoch 233/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3472.0894 - mae: 3472.0894\n",
            "Epoch 234/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3472.6658 - mae: 3472.6658\n",
            "Epoch 235/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3474.2258 - mae: 3474.2258\n",
            "Epoch 236/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3473.3970 - mae: 3473.3970\n",
            "Epoch 237/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3472.8586 - mae: 3472.8586\n",
            "Epoch 238/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3473.4548 - mae: 3473.4548\n",
            "Epoch 239/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3474.7368 - mae: 3474.7368\n",
            "Epoch 240/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3472.5662 - mae: 3472.5662\n",
            "Epoch 241/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3471.7515 - mae: 3471.7515\n",
            "Epoch 242/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3474.1509 - mae: 3474.1509\n",
            "Epoch 243/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3472.2358 - mae: 3472.2358\n",
            "Epoch 244/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3473.8289 - mae: 3473.8289\n",
            "Epoch 245/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3471.9756 - mae: 3471.9756\n",
            "Epoch 246/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3473.6660 - mae: 3473.6660\n",
            "Epoch 247/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3472.4309 - mae: 3472.4309\n",
            "Epoch 248/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3474.0642 - mae: 3474.0642\n",
            "Epoch 249/250\n",
            "34/34 [==============================] - 0s 2ms/step - loss: 3474.9146 - mae: 3474.9146\n",
            "Epoch 250/250\n",
            "34/34 [==============================] - 0s 3ms/step - loss: 3472.2129 - mae: 3472.2129\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f59b5ba7670>"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "boston_pricing = tf.keras.datasets.boston_housing.load_data(\n",
        "    path='boston_housing.npz', test_split=0.2, seed=113\n",
        ")"
      ],
      "metadata": {
        "id": "fxFoStcGd5RR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "boston_pricing"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "auhMo6hleWnX",
        "outputId": "74a90bf6-6ca7-4def-9748-6b0774a7d9db"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((array([[1.23247e+00, 0.00000e+00, 8.14000e+00, ..., 2.10000e+01,\n",
              "          3.96900e+02, 1.87200e+01],\n",
              "         [2.17700e-02, 8.25000e+01, 2.03000e+00, ..., 1.47000e+01,\n",
              "          3.95380e+02, 3.11000e+00],\n",
              "         [4.89822e+00, 0.00000e+00, 1.81000e+01, ..., 2.02000e+01,\n",
              "          3.75520e+02, 3.26000e+00],\n",
              "         ...,\n",
              "         [3.46600e-02, 3.50000e+01, 6.06000e+00, ..., 1.69000e+01,\n",
              "          3.62250e+02, 7.83000e+00],\n",
              "         [2.14918e+00, 0.00000e+00, 1.95800e+01, ..., 1.47000e+01,\n",
              "          2.61950e+02, 1.57900e+01],\n",
              "         [1.43900e-02, 6.00000e+01, 2.93000e+00, ..., 1.56000e+01,\n",
              "          3.76700e+02, 4.38000e+00]]),\n",
              "  array([15.2, 42.3, 50. , 21.1, 17.7, 18.5, 11.3, 15.6, 15.6, 14.4, 12.1,\n",
              "         17.9, 23.1, 19.9, 15.7,  8.8, 50. , 22.5, 24.1, 27.5, 10.9, 30.8,\n",
              "         32.9, 24. , 18.5, 13.3, 22.9, 34.7, 16.6, 17.5, 22.3, 16.1, 14.9,\n",
              "         23.1, 34.9, 25. , 13.9, 13.1, 20.4, 20. , 15.2, 24.7, 22.2, 16.7,\n",
              "         12.7, 15.6, 18.4, 21. , 30.1, 15.1, 18.7,  9.6, 31.5, 24.8, 19.1,\n",
              "         22. , 14.5, 11. , 32. , 29.4, 20.3, 24.4, 14.6, 19.5, 14.1, 14.3,\n",
              "         15.6, 10.5,  6.3, 19.3, 19.3, 13.4, 36.4, 17.8, 13.5, 16.5,  8.3,\n",
              "         14.3, 16. , 13.4, 28.6, 43.5, 20.2, 22. , 23. , 20.7, 12.5, 48.5,\n",
              "         14.6, 13.4, 23.7, 50. , 21.7, 39.8, 38.7, 22.2, 34.9, 22.5, 31.1,\n",
              "         28.7, 46. , 41.7, 21. , 26.6, 15. , 24.4, 13.3, 21.2, 11.7, 21.7,\n",
              "         19.4, 50. , 22.8, 19.7, 24.7, 36.2, 14.2, 18.9, 18.3, 20.6, 24.6,\n",
              "         18.2,  8.7, 44. , 10.4, 13.2, 21.2, 37. , 30.7, 22.9, 20. , 19.3,\n",
              "         31.7, 32. , 23.1, 18.8, 10.9, 50. , 19.6,  5. , 14.4, 19.8, 13.8,\n",
              "         19.6, 23.9, 24.5, 25. , 19.9, 17.2, 24.6, 13.5, 26.6, 21.4, 11.9,\n",
              "         22.6, 19.6,  8.5, 23.7, 23.1, 22.4, 20.5, 23.6, 18.4, 35.2, 23.1,\n",
              "         27.9, 20.6, 23.7, 28. , 13.6, 27.1, 23.6, 20.6, 18.2, 21.7, 17.1,\n",
              "          8.4, 25.3, 13.8, 22.2, 18.4, 20.7, 31.6, 30.5, 20.3,  8.8, 19.2,\n",
              "         19.4, 23.1, 23. , 14.8, 48.8, 22.6, 33.4, 21.1, 13.6, 32.2, 13.1,\n",
              "         23.4, 18.9, 23.9, 11.8, 23.3, 22.8, 19.6, 16.7, 13.4, 22.2, 20.4,\n",
              "         21.8, 26.4, 14.9, 24.1, 23.8, 12.3, 29.1, 21. , 19.5, 23.3, 23.8,\n",
              "         17.8, 11.5, 21.7, 19.9, 25. , 33.4, 28.5, 21.4, 24.3, 27.5, 33.1,\n",
              "         16.2, 23.3, 48.3, 22.9, 22.8, 13.1, 12.7, 22.6, 15. , 15.3, 10.5,\n",
              "         24. , 18.5, 21.7, 19.5, 33.2, 23.2,  5. , 19.1, 12.7, 22.3, 10.2,\n",
              "         13.9, 16.3, 17. , 20.1, 29.9, 17.2, 37.3, 45.4, 17.8, 23.2, 29. ,\n",
              "         22. , 18. , 17.4, 34.6, 20.1, 25. , 15.6, 24.8, 28.2, 21.2, 21.4,\n",
              "         23.8, 31. , 26.2, 17.4, 37.9, 17.5, 20. ,  8.3, 23.9,  8.4, 13.8,\n",
              "          7.2, 11.7, 17.1, 21.6, 50. , 16.1, 20.4, 20.6, 21.4, 20.6, 36.5,\n",
              "          8.5, 24.8, 10.8, 21.9, 17.3, 18.9, 36.2, 14.9, 18.2, 33.3, 21.8,\n",
              "         19.7, 31.6, 24.8, 19.4, 22.8,  7.5, 44.8, 16.8, 18.7, 50. , 50. ,\n",
              "         19.5, 20.1, 50. , 17.2, 20.8, 19.3, 41.3, 20.4, 20.5, 13.8, 16.5,\n",
              "         23.9, 20.6, 31.5, 23.3, 16.8, 14. , 33.8, 36.1, 12.8, 18.3, 18.7,\n",
              "         19.1, 29. , 30.1, 50. , 50. , 22. , 11.9, 37.6, 50. , 22.7, 20.8,\n",
              "         23.5, 27.9, 50. , 19.3, 23.9, 22.6, 15.2, 21.7, 19.2, 43.8, 20.3,\n",
              "         33.2, 19.9, 22.5, 32.7, 22. , 17.1, 19. , 15. , 16.1, 25.1, 23.7,\n",
              "         28.7, 37.2, 22.6, 16.4, 25. , 29.8, 22.1, 17.4, 18.1, 30.3, 17.5,\n",
              "         24.7, 12.6, 26.5, 28.7, 13.3, 10.4, 24.4, 23. , 20. , 17.8,  7. ,\n",
              "         11.8, 24.4, 13.8, 19.4, 25.2, 19.4, 19.4, 29.1])),\n",
              " (array([[1.80846e+01, 0.00000e+00, 1.81000e+01, ..., 2.02000e+01,\n",
              "          2.72500e+01, 2.90500e+01],\n",
              "         [1.23290e-01, 0.00000e+00, 1.00100e+01, ..., 1.78000e+01,\n",
              "          3.94950e+02, 1.62100e+01],\n",
              "         [5.49700e-02, 0.00000e+00, 5.19000e+00, ..., 2.02000e+01,\n",
              "          3.96900e+02, 9.74000e+00],\n",
              "         ...,\n",
              "         [1.83377e+00, 0.00000e+00, 1.95800e+01, ..., 1.47000e+01,\n",
              "          3.89610e+02, 1.92000e+00],\n",
              "         [3.58090e-01, 0.00000e+00, 6.20000e+00, ..., 1.74000e+01,\n",
              "          3.91700e+02, 9.71000e+00],\n",
              "         [2.92400e+00, 0.00000e+00, 1.95800e+01, ..., 1.47000e+01,\n",
              "          2.40160e+02, 9.81000e+00]]),\n",
              "  array([ 7.2, 18.8, 19. , 27. , 22.2, 24.5, 31.2, 22.9, 20.5, 23.2, 18.6,\n",
              "         14.5, 17.8, 50. , 20.8, 24.3, 24.2, 19.8, 19.1, 22.7, 12. , 10.2,\n",
              "         20. , 18.5, 20.9, 23. , 27.5, 30.1,  9.5, 22. , 21.2, 14.1, 33.1,\n",
              "         23.4, 20.1,  7.4, 15.4, 23.8, 20.1, 24.5, 33. , 28.4, 14.1, 46.7,\n",
              "         32.5, 29.6, 28.4, 19.8, 20.2, 25. , 35.4, 20.3,  9.7, 14.5, 34.9,\n",
              "         26.6,  7.2, 50. , 32.4, 21.6, 29.8, 13.1, 27.5, 21.2, 23.1, 21.9,\n",
              "         13. , 23.2,  8.1,  5.6, 21.7, 29.6, 19.6,  7. , 26.4, 18.9, 20.9,\n",
              "         28.1, 35.4, 10.2, 24.3, 43.1, 17.6, 15.4, 16.2, 27.1, 21.4, 21.5,\n",
              "         22.4, 25. , 16.6, 18.6, 22. , 42.8, 35.1, 21.5, 36. , 21.9, 24.1,\n",
              "         50. , 26.7, 25. ])))"
            ]
          },
          "metadata": {},
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "AHA-i2cLe2tX"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}